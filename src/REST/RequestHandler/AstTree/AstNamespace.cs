// ***********************************************************************
// <copyright file="AstNamespace.cs" company="Starcounter AB">
//     Copyright (c) Starcounter AB.  All rights reserved.
// </copyright>
// ***********************************************************************

using System.Text;
namespace Starcounter.Internal.Uri {
    /// <summary>
    /// Class AstNamespace
    /// </summary>
    public class AstNamespace : AstNode {

        /// <summary>
        /// The next class no
        /// </summary>
        private int NextClassNo = 0;

        /// <summary>
        /// Gets or sets the namespace.
        /// </summary>
        /// <value>The namespace.</value>
        internal string Namespace { get; set; }

        /// <summary>
        /// Gets the next class no.
        /// </summary>
        /// <returns>System.Int32.</returns>
        internal int GetNextClassNo() {
            return NextClassNo++;
        }


        /// <summary>
        /// Generates C# source code for this abstract syntax tree (AST) node
        /// </summary>
        /// <value>The debug string.</value>
        internal override string DebugString {
            get {
                return "namespace " + Namespace;
            }
        }

        /// <summary>
        /// Generates the C# code header (namespace and using statements)
        /// </summary>
        internal override void GenerateCsCodeForNode() {
            Prefix.Add("// Generated code. This code matches, parses and invokes Http handlers. The code was generated by the Starcounter http/spdy handler engine.");
            Prefix.Add("");
            Prefix.Add("using Starcounter;");
            Prefix.Add("using Starcounter.Internal;");
            Prefix.Add("using Starcounter.Internal.Uri;");
            Prefix.Add("using System.Text;");
            Prefix.Add("using System.Collections.Generic;");
            Prefix.Add("using System;");
            Prefix.Add("using HttpStructs;");
            Prefix.Add("");
            var sb = new StringBuilder();
            sb.Append("namespace ");
            sb.Append(Namespace);
            sb.Append(" {");
            Prefix.Add(sb.ToString());
            Suffix.Add("}");
        }

    }
}
