
/********************************************************************************


====== TEST2 ======

Uses appropriate simple (not combined) ascending indexes.
Uses the data from SqlTest1.


====== SECTIONS ======

=== Show database content ===
=== Simple queries ===
=== Simple incorrect queries ===
=== Object reference casting ===
=== Operations ===
=== Comparisons ===
=== Sorting ===
=== Joins ===
=== Ad hoc ===
=== Fetch ====


====== TODOS ======

Remove queries duplicated from SQLTest.EmployeeDb.EmployeeDb and which do not use indexes.


====== PROBLEMS ======


== Binary properties ==



<NEXT>
Description: Binary property equal to Binary literal
QueryString: select d from Department d where d.IdBinary = binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	DEPARTMENT_IDBINARY
	0
	IdBinary
	BinaryDynamicRange(
		BinaryRangePoint(
			GreaterThanOrEqual
			BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
		)
		BinaryRangePoint(
			LessThanOrEqual
			BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 8 | 


<NEXT>
Description: Binary property not equal to Binary literal
QueryString: select d from Department d where d.IdBinary <> binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		NotEqual
		BinaryProperty(0, IdBinary)
		BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 7 | 
 | 9 | 


<NEXT>
Description: Binary property less than Binary literal
QueryString: select d from Department d where d.IdBinary < binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		LessThan
		BinaryProperty(0, IdBinary)
		BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 9 | 
 | 10 | 


<NEXT>
Description: Binary property less than or equal to Binary literal
QueryString: select d from Department d where d.IdBinary <= binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		LessThanOrEqual
		BinaryProperty(0, IdBinary)
		BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 8 | 
 | 9 | 
 | 10 | 


<NEXT>
Description: Binary property greater than Binary literal
QueryString: select d from Department d where d.IdBinary > binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		GreaterThan
		BinaryProperty(0, IdBinary)
		BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 7 | 


<NEXT>
Description: Binary property greater than or equal to Binary literal
QueryString: select d from Department d where d.IdBinary >= binary 'fefefefefefefefefefefefefefefefe'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		GreaterThanOrEqual
		BinaryProperty(0, IdBinary)
		BinaryLiteral(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 8 | 


<NEXT>
Description: Binary property equal to Binary variable
QueryString: select d from Department d where d.IdBinary = ?
VariableValues: Binary:FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	DEPARTMENT_IDBINARY
	0
	IdBinary
	BinaryDynamicRange(
		BinaryRangePoint(
			GreaterThanOrEqual
			BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
		)
		BinaryRangePoint(
			LessThanOrEqual
			BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 8 | 


<NEXT>
Description: Binary property not equal to Binary variable
QueryString: select d from Department d where d.IdBinary <> ?
VariableValues: Binary:FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		NotEqual
		BinaryProperty(0, IdBinary)
		BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 7 | 
 | 9 | 


<NEXT>
Description: Binary property less than Binary variable
QueryString: select d from Department d where d.IdBinary < ?
VariableValues: Binary:FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		LessThan
		BinaryProperty(0, IdBinary)
		BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 9 | 


<NEXT>
Description: Binary property less than or equal to Binary variable
QueryString: select d from Department d where d.IdBinary <= ?
VariableValues: Binary:FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		LessThanOrEqual
		BinaryProperty(0, IdBinary)
		BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 8 | 
 | 9 | 


<NEXT>
Description: Binary property greater than Binary variable
QueryString: select d from Department d where d.IdBinary > ?
VariableValues: Binary:FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBinary(
		GreaterThan
		BinaryProperty(0, IdBinary)
		BinaryVariable(FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 7 | 


<NEXT>
Description: Binary property is null
QueryString: select d from Department d where d.IdBinary is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	0
	__InstantiatedFrom
	ObjectDynamicRange(
	)
	ComparisonBinary(
		IS
		BinaryProperty(0, IdBinary)
		BinaryLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Binary property is not null
QueryString: select d from Department d where d.IdBinary is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	0
	__InstantiatedFrom
	ObjectDynamicRange(
	)
	ComparisonBinary(
		ISNOT
		BinaryProperty(0, IdBinary)
		BinaryLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 7 | 
 | 8 | 
 | 9 | 


********************************************************************************/


<NEXT>
Description: Show all of type SQLTest.EmployeeDb.Location
QueryString: select l, l.* from SQLTest.EmployeeDb.Location l
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, Name)
	2 = 
		StringProperty(0, Description)
	3 = 
		IntegerProperty(0, Type)
	4 = 
		IntegerProperty(0, NType)
)
IndexScan(
	auto
	0
	Name
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 3:Int32 ! 4:Int32 ! 
 | 1 | England | Part of United Kingdom | 1 | 1 | 
 | 2 | Stockholm | Capital of Sweden | 2 | 2 | 
 | 3 | Solna | Town just north of Stockholm | 2 | 2 | 
 | 4 | Danderyd | Rich suburb of Stockholm | 2 | 2 | 
 | 5 | Falköping | Small village in Sweden | 2 | 2 | 
 | 6 | Saint Petersburg | Big city in Russia | 2 | 2 | 


<NEXT>
Description: Show all of type SQLTest.EmployeeDb.Department
QueryString: select d, d.* from SQLTest.EmployeeDb.Department d
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, Description)
	2 = 
		StringProperty(0, Name)
	3 = 
		ObjectProperty(0, Location)
	4 = 
		BinaryProperty(0, IdBinary)
)
IndexScan(
	auto
	0
	Description
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 3:Object ! 4:Binary ! 
 | 10 | Sales and marketing | Sales | <NULL> | FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD | 
 | 7 | Administration | Head office | 2 | FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF | 
 | 8 | Development of database kernel | Kernel | 5 | FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE | 
 | 9 | Development of database server | Server | 2 | FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD | 


<NEXT>
Description: Show all of type SQLTest.EmployeeDb.Person
QueryString: select p, p.* from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, FirstName)
	2 = 
		StringProperty(0, LastName)
	3 = 
		ObjectProperty(0, Home)
	4 = 
		ObjectProperty(0, Father)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 3:Object ! 4:Object ! 
 | 11 | Bengt | Idestam | <NULL> | <NULL> | 
 | 12 | Jon | Idestam | 2 | 11 | 
 | 13 | Joachim | Wester | 1 | <NULL> | 
 | 14 | Åsa | Holmström | 4 | <NULL> | 
 | 15 | PETER | <NULL> | 2 | 12 | 
 | 16 | Christian | Holmstrand | 3 | <NULL> | 
 | 17 | per | Samuelsson | 2 | <NULL> | 
 | 18 | Erik | Ohlsson | 5 | <NULL> | 
 | 19 | Lovisa | Idestam | 2 | 15 | 
 | 20 | Alexey | Moiseenko | 6 | <NULL> | 
 | 21 | Petros | <NULL> | <NULL> | <NULL> | 
 | 22 | Andreas | Thyrhaug | <NULL> | <NULL> | 


<NEXT>
Description: Show all of type SQLTest.EmployeeDb.Employee
QueryString: select e, e.* from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, FirstName)
	2 = 
		StringProperty(0, LastName)
	3 = 
		ObjectProperty(0, Home)
	4 = 
		ObjectProperty(0, Father)
	5 = 
		DateTimeProperty(0, HireDate)
	6 = 
		DateTimeProperty(0, NHireDate)
	7 = 
		ObjectProperty(0, Manager)
	8 = 
		ObjectProperty(0, Department)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 3:Object ! 4:Object ! 5:DateTime ! 6:DateTime ! 7:Object ! 8:Object ! 
 | 13 | Joachim | Wester | 1 | <NULL> | 2003-01-01 00:00:00Z | <NULL> | <NULL> | <NULL> | 
 | 14 | Åsa | Holmström | 4 | <NULL> | 2009-12-01 00:00:00Z | 2009-12-01 00:00:00Z | 13 | 7 | 
 | 15 | PETER | <NULL> | 2 | 12 | 2005-10-01 00:00:00Z | 2005-10-01 00:00:00Z | 14 | 9 | 
 | 16 | Christian | Holmstrand | 3 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | 17 | per | Samuelsson | 2 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | 18 | Erik | Ohlsson | 5 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 14 | 8 | 
 | 20 | Alexey | Moiseenko | 6 | <NULL> | 2010-09-01 00:00:00Z | <NULL> | <NULL> | 9 | 
 | 21 | Petros | <NULL> | <NULL> | <NULL> | 2010-10-01 00:00:00Z | 2010-10-01 00:00:00Z | 14 | 7 | 
 | 22 | Andreas | Thyrhaug | <NULL> | <NULL> | 2010-12-13 00:00:00Z | 2010-12-13 00:00:00Z | 15 | 8 | 


<NEXT>
Description: Show all of type SQLTest.EmployeeDb.SalaryEmployee
QueryString: select e, e.* from SQLTest.EmployeeDb.Salaryemployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, FirstName)
	2 = 
		StringProperty(0, LastName)
	3 = 
		ObjectProperty(0, Home)
	4 = 
		ObjectProperty(0, Father)
	5 = 
		DateTimeProperty(0, HireDate)
	6 = 
		DateTimeProperty(0, NHireDate)
	7 = 
		ObjectProperty(0, Manager)
	8 = 
		ObjectProperty(0, Department)
	9 = 
		BooleanProperty(0, Commission)
	10 = 
		BooleanProperty(0, NCommission)
	11 = 
		IntegerProperty(0, SalarySByte)
	12 = 
		IntegerProperty(0, NSalarySByte)
	13 = 
		IntegerProperty(0, SalaryInt16)
	14 = 
		IntegerProperty(0, NSalaryInt16)
	15 = 
		IntegerProperty(0, SalaryInt32)
	16 = 
		IntegerProperty(0, NSalaryInt32)
	17 = 
		IntegerProperty(0, SalaryInt64)
	18 = 
		IntegerProperty(0, NSalaryInt64)
	19 = 
		UIntegerProperty(0, SalaryByte)
	20 = 
		UIntegerProperty(0, NSalaryByte)
	21 = 
		UIntegerProperty(0, SalaryUInt16)
	22 = 
		UIntegerProperty(0, NSalaryUInt16)
	23 = 
		UIntegerProperty(0, SalaryUInt32)
	24 = 
		UIntegerProperty(0, NSalaryUInt32)
	25 = 
		UIntegerProperty(0, SalaryUInt64)
	26 = 
		UIntegerProperty(0, NSalaryUInt64)
	27 = 
		DecimalProperty(0, SalaryDecimal)
	28 = 
		DecimalProperty(0, NSalaryDecimal)
	29 = 
		DoubleProperty(0, SalarySingle)
	30 = 
		DoubleProperty(0, NSalarySingle)
	31 = 
		DoubleProperty(0, SalaryDouble)
	32 = 
		DoubleProperty(0, NSalaryDouble)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 3:Object ! 4:Object ! 5:DateTime ! 6:DateTime ! 7:Object ! 8:Object ! 9:Boolean ! 10:Boolean ! 11:SByte ! 12:SByte ! 13:Int16 ! 14:Int16 ! 15:Int32 ! 16:Int32 ! 17:Int64 ! 18:Int64 ! 19:Byte ! 20:Byte ! 21:UInt16 ! 22:UInt16 ! 23:UInt32 ! 24:UInt32 ! 25:UInt64 ! 26:UInt64 ! 27:Decimal ! 28:Decimal ! 29:Single ! 30:Single ! 31:Double ! 32:Double ! 
 | 20 | Alexey | Moiseenko | 6 | <NULL> | 2010-09-01 00:00:00Z | <NULL> | <NULL> | 9 | False | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 10 | <NULL> | 
 | 21 | Petros | <NULL> | <NULL> | <NULL> | 2010-10-01 00:00:00Z | 2010-10-01 00:00:00Z | 14 | 7 | False | False | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 20 | 
 | 22 | Andreas | Thyrhaug | <NULL> | <NULL> | 2010-12-13 00:00:00Z | 2010-12-13 00:00:00Z | 15 | 8 | True | True | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 30 | 


<NEXT>
Description: Show all of type SQLTest.Test1b.Person
QueryString: select p, p.* from SQLTest.Test1b.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.Test1b.Person
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		StringProperty(0, FirstName)
	2 = 
		StringProperty(0, _LastName)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:Object ! 1:String ! 2:String ! 
 | 23 | Adam | Adamsson | 


<NEXT>
Description: Simple query
QueryString: select e from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 13 | 
 | 14 | 
 | 15 | 
 | 16 | 
 | 17 | 
 | 18 | 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Path expression of length 2
QueryString: select e.Manager from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectProperty(0, Manager)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | 13 | 
 | 14 | 
 | 14 | 
 | 14 | 
 | 15 | 
 | 15 | 
 | 15 | 


<NEXT>
Description: Path expression of length 3
QueryString: select e.Manager.Manager from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Manager)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 13 | 
 | 13 | 
 | 13 | 
 | 14 | 
 | 14 | 
 | 14 | 


<NEXT>
Description: Path expression of length 4
QueryString: select e.Manager.Manager.Department from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Manager)
			ObjectProperty(-1, Department)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 7 | 
 | 7 | 
 | 7 | 


<NEXT>
Description: Path expression of length 5
QueryString: select e.Manager.Manager.Department.Location from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 2 | 
 | 2 | 
 | 2 | 


<NEXT>
Description: Field names starting with underscore
QueryString: select p._LastName from SQLTest.Test1b.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.Test1b.Person
)
Projection(
	0 = 
		StringProperty(0, _LastName)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! String ! 
 | Adamsson | 


<NEXT>
Description: Short class name
QueryString: select e from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 13 | 
 | 14 | 
 | 15 | 
 | 16 | 
 | 17 | 
 | 18 | 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Unqualified field name
QueryString: select FirstName from SQLTest.EmployeeDb.Employee
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! String ! 
 | Alexey | 
 | Andreas | 
 | Åsa | 
 | Christian | 
 | Erik | 
 | Joachim | 
 | per | 
 | PETER | 
 | Petros | 


<NEXT>
Description: Qualified asterisk
QueryString: select e.* from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(0, LastName)
	2 = 
		ObjectProperty(0, Home)
	3 = 
		ObjectProperty(0, Father)
	4 = 
		DateTimeProperty(0, HireDate)
	5 = 
		DateTimeProperty(0, NHireDate)
	6 = 
		ObjectProperty(0, Manager)
	7 = 
		ObjectProperty(0, Department)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:Object ! 3:Object ! 4:DateTime ! 5:DateTime ! 6:Object ! 7:Object ! 
 | Alexey | Moiseenko | 6 | <NULL> | 2010-09-01 00:00:00Z | <NULL> | <NULL> | 9 | 
 | Andreas | Thyrhaug | <NULL> | <NULL> | 2010-12-13 00:00:00Z | 2010-12-13 00:00:00Z | 15 | 8 | 
 | Åsa | Holmström | 4 | <NULL> | 2009-12-01 00:00:00Z | 2009-12-01 00:00:00Z | 13 | 7 | 
 | Christian | Holmstrand | 3 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | Erik | Ohlsson | 5 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 14 | 8 | 
 | Joachim | Wester | 1 | <NULL> | 2003-01-01 00:00:00Z | <NULL> | <NULL> | <NULL> | 
 | per | Samuelsson | 2 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | PETER | <NULL> | 2 | 12 | 2005-10-01 00:00:00Z | 2005-10-01 00:00:00Z | 14 | 9 | 
 | Petros | <NULL> | <NULL> | <NULL> | 2010-10-01 00:00:00Z | 2010-10-01 00:00:00Z | 14 | 7 | 


<NEXT>
Description: Unqualified asterisk
QueryString: select * from SQLTest.EmployeeDb.Employee
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(0, LastName)
	2 = 
		ObjectProperty(0, Home)
	3 = 
		ObjectProperty(0, Father)
	4 = 
		DateTimeProperty(0, HireDate)
	5 = 
		DateTimeProperty(0, NHireDate)
	6 = 
		ObjectProperty(0, Manager)
	7 = 
		ObjectProperty(0, Department)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:Object ! 3:Object ! 4:DateTime ! 5:DateTime ! 6:Object ! 7:Object ! 
 | Alexey | Moiseenko | 6 | <NULL> | 2010-09-01 00:00:00Z | <NULL> | <NULL> | 9 | 
 | Andreas | Thyrhaug | <NULL> | <NULL> | 2010-12-13 00:00:00Z | 2010-12-13 00:00:00Z | 15 | 8 | 
 | Åsa | Holmström | 4 | <NULL> | 2009-12-01 00:00:00Z | 2009-12-01 00:00:00Z | 13 | 7 | 
 | Christian | Holmstrand | 3 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | Erik | Ohlsson | 5 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 14 | 8 | 
 | Joachim | Wester | 1 | <NULL> | 2003-01-01 00:00:00Z | <NULL> | <NULL> | <NULL> | 
 | per | Samuelsson | 2 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | PETER | <NULL> | 2 | 12 | 2005-10-01 00:00:00Z | 2005-10-01 00:00:00Z | 14 | 9 | 
 | Petros | <NULL> | <NULL> | <NULL> | 2010-10-01 00:00:00Z | 2010-10-01 00:00:00Z | 14 | 7 | 


<NEXT>
Description: Path expression with asterisk
QueryString: select e.Manager.Department.* from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			StringProperty(-1, Description)
		)
	1 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			StringProperty(-1, Name)
		)
	2 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
		)
	3 = 
		BinaryPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			BinaryProperty(-1, IdBinary)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:Object ! 3:Binary ! 
 | <NULL> | <NULL> | <NULL> | <NULL> | 
 | <NULL> | <NULL> | <NULL> | <NULL> | 
 | <NULL> | <NULL> | <NULL> | <NULL> | 
 | Administration | Head office | 2 | FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF | 
 | Administration | Head office | 2 | FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF | 
 | Administration | Head office | 2 | FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF | 
 | Development of database server | Server | 2 | FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD | 
 | Development of database server | Server | 2 | FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD | 
 | Development of database server | Server | 2 | FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD | 


<NEXT>
Description: Empty query (incorrect)
QueryString: 
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query:  : Incorrect syntax. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Non-existing class (incorrect)
QueryString: select e from Example e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from Example e: Unknown class Example. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Non-existing property (incorrect)
QueryString: select e.Name from SQLTest.EmployeeDb.Employee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e.Name from SQLTest.EmployeeDb.Employee e: Unknown property Name of class SQLTest.EmployeeDb.Employee. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: String concatenation
QueryString: select e.FirstName || ' ' || e.LastName from SalaryEmployee e where e.FirstName || ' ' || e.LastName = 'alexey moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringOperation(
			Concatenation
			StringProperty(0, FirstName)
			StringOperation(
				Concatenation
				StringLiteral( )
				StringProperty(0, LastName)
			)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonString(
		Equal
		StringOperation(
			Concatenation
			StringProperty(0, FirstName)
			StringOperation(
				Concatenation
				StringLiteral( )
				StringProperty(0, LastName)
			)
		)
		StringLiteral(alexey moiseenko)
	)
	Ascending
)

ExpectedResult: 
 ! String ! 
 | Alexey Moiseenko | 


<NEXT>
Description: Numerical addition
QueryString: select e.SalaryInt64 + 52, e.SalaryUInt64 + 52, e.SalaryDecimal + 2.0e1, e.SalaryDouble + 20.0 from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Literal in query is not supported. Use variable and parameter instead.
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Numerical subtraction
QueryString: select e.SalaryInt64 - 52, e.SalaryUInt64 - 52, e.SalaryDecimal - 2.0e1, e.SalaryDouble - 20.0 from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Literal in query is not supported. Use variable and parameter instead.
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Numerical multiplication
QueryString: select e.SalaryInt64 * 2, e.SalaryUInt64 * 2, e.SalaryDecimal * 2.0e0, e.SalaryDouble * 2.0 from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Literal in query is not supported. Use variable and parameter instead.
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Numerical division
QueryString: select e.SalaryInt64 / 2, e.SalaryUInt64 / 2, e.SalaryDecimal / 2.0e0, e.SalaryDouble / 2.0 from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: Literal in query is not supported. Use variable and parameter instead.
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Numerical plus sign
QueryString: select +(+(+e.SalaryInt64)) from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		DecimalOperation(
			Plus
			DecimalOperation(
				Plus
				DecimalOperation(
					Plus
					IntegerProperty(0, SalaryInt64)
				)
			)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Decimal ! 
 | 10 | 
 | 20 | 
 | 30 | 


<NEXT>
Description: Numerical minus sign
QueryString: select -(-(-e.SalaryInt64)) from SalaryEmployee e
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		DecimalOperation(
			Minus
			DecimalOperation(
				Minus
				DecimalOperation(
					Minus
					IntegerProperty(0, SalaryInt64)
				)
			)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Decimal ! 
 | -10 | 
 | -20 | 
 | -30 | 


<NEXT>
Description: Boolean property equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission = false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Boolean property not equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission <> false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBoolean(
		NotEqual
		BooleanProperty(0, Commission)
		BooleanLiteral(False)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Boolean property less than Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission < false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThan
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Boolean property less than or equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission <= false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Boolean property greater than Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission > false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Boolean property greater than or equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.Commission >= false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Boolean property equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission = ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanVariable(False)
		)
		BooleanRangePoint(
			LessThanOrEqual
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Boolean property not equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission <> ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBoolean(
		NotEqual
		BooleanProperty(0, Commission)
		BooleanVariable(False)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Boolean property less than Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission < ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThan
			BooleanVariable(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Boolean property less than or equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission <= ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanVariable(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Boolean property greater than Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission > ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Boolean property greater than or equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.Commission >= ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Boolean property is null
QueryString: select e from SalaryEmployee e where e.Commission is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Boolean property is not null
QueryString: select e from SalaryEmployee e where e.Commission is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Boolean property equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission = false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Boolean property not equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission <> false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBoolean(
		NotEqual
		BooleanProperty(0, NCommission)
		BooleanLiteral(False)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Boolean property less than Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission < false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThan
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Boolean property less than or equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission <= false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Boolean property greater than Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission > false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Boolean property greater than or equal to Boolean literal
QueryString: select e from SalaryEmployee e where e.NCommission >= false
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanLiteral(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Boolean property equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission = ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanVariable(False)
		)
		BooleanRangePoint(
			LessThanOrEqual
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Boolean property not equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission <> ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonBoolean(
		NotEqual
		BooleanProperty(0, NCommission)
		BooleanVariable(False)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Boolean property less than Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission < ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThan
			BooleanVariable(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Boolean property less than or equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission <= ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanVariable(False)
		)
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Boolean property greater than Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission > ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Boolean property greater than or equal to Boolean variable
QueryString: select e from SalaryEmployee e where e.NCommission >= ?
VariableValues: Boolean:False; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThanOrEqual
			BooleanVariable(False)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Boolean property is null
QueryString: select e from SalaryEmployee e where e.NCommission is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			LessThanOrEqual
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Boolean property is not null
QueryString: select e from SalaryEmployee e where e.NCommission is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NCommission
	0
	NCommission
	BooleanDynamicRange(
		BooleanRangePoint(
			GreaterThan
			BooleanLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Byte property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Byte property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, SalaryByte)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Byte property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Byte property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Byte property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Byte property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryByte >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Byte property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte = ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Byte property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte <> ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, SalaryByte)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Byte property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte < ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Byte property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte <= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Byte property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte > ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Byte property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryByte >= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Byte property is null
QueryString: select e from SalaryEmployee e where e.SalaryByte is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Byte is not null
QueryString: select e from SalaryEmployee e where e.SalaryByte is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Byte property equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Byte property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, NSalaryByte)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Byte property less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Byte property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Byte property greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Byte property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryByte >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Byte property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte = ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Byte property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte <> ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, NSalaryByte)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Byte property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte < ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Byte property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte <= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Byte property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte > ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Byte property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryByte >= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Byte property is null
QueryString: select e from SalaryEmployee e where e.NSalaryByte is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Byte property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryByte is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryByte
	0
	NSalaryByte
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: DateTime property equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate = date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: DateTime property not equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate <> date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDateTime(
		NotEqual
		DateTimeProperty(0, HireDate)
		DateTimeLiteral(10/01/2010 00:00:00)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: DateTime property less than DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate < date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThan
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: DateTime property less than or equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate <= date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: DateTime property greater than DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate > date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: DateTime property greater than or equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.HireDate >= date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: DateTime property equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate = ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: DateTime property not equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate <> ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDateTime(
		NotEqual
		DateTimeProperty(0, HireDate)
		DateTimeVariable(10/01/2010 00:00:00)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: DateTime property less than DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate < ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThan
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: DateTime property less than or equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate <= ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: DateTime property greater than DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate > ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: DateTime property greater than or equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.HireDate >= ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: DateTime property is null
QueryString: select e from SalaryEmployee e where e.HireDate is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: DateTime property is not null
QueryString: select e from SalaryEmployee e where e.HireDate is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable DateTime property equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate = date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable DateTime property not equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate <> date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDateTime(
		NotEqual
		DateTimeProperty(0, NHireDate)
		DateTimeLiteral(10/01/2010 00:00:00)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable DateTime property less than DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate < date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThan
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable DateTime property less than or equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate <= date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable DateTime property greater than DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate > date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable DateTime property greater than or equal to DateTime literal
QueryString: select e from SalaryEmployee e where e.NHireDate >= date '2010-10-01'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeLiteral(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable DateTime property equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate = ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable DateTime property not equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate <> ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDateTime(
		NotEqual
		DateTimeProperty(0, NHireDate)
		DateTimeVariable(10/01/2010 00:00:00)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable DateTime property less than DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate < ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThan
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable DateTime property less than or equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate <= ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable DateTime property greater than DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate > ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable DateTime property greater than or equal to DateTime variable
QueryString: select e from SalaryEmployee e where e.NHireDate >= ?
VariableValues: DateTime:2010-10-01 00:00:00; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThanOrEqual
			DateTimeVariable(10/01/2010 00:00:00)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable DateTime property is null
QueryString: select e from SalaryEmployee e where e.NHireDate is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			LessThanOrEqual
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable DateTime property is not null
QueryString: select e from SalaryEmployee e where e.NHireDate is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NHireDate
	0
	NHireDate
	DateTimeDynamicRange(
		DateTimeRangePoint(
			GreaterThan
			DateTimeLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Decimal property equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal = 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			LessThanOrEqual
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Decimal property not equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal <> 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		DecimalProperty(0, SalaryDecimal)
		DecimalLiteral(20.0)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Decimal property less than Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal < 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Decimal property less than or equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal <= 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Decimal property greater than Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal > 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Decimal property greater than or equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.SalaryDecimal >= 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Decimal property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal = ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(200)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Decimal property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal <> ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DecimalProperty(0, SalaryDecimal)
		NumericalVariable(200)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Decimal property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal < ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(200)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Decimal property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal <= ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(200)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Decimal property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal > ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Decimal property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDecimal >= ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Decimal property is null
QueryString: select e from SalaryEmployee e where e.SalaryDecimal is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Decimal property is not null
QueryString: select e from SalaryEmployee e where e.SalaryDecimal is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Decimal property equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal = 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			LessThanOrEqual
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Decimal property not equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal <> 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		DecimalProperty(0, NSalaryDecimal)
		DecimalLiteral(20.0)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Decimal property less than Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal < 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Decimal property less than or equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal <= 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			DecimalLiteral(20.0)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Decimal property greater than Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal > 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Decimal property greater than or equal to Decimal literal
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal >= 20.0
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			DecimalLiteral(20.0)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Decimal property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal = ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(200)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Decimal property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal <> ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DecimalProperty(0, NSalaryDecimal)
		NumericalVariable(200)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Decimal property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal < ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(200)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Decimal property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal <= ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(200)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Decimal property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal > ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Decimal property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal >= ?
VariableValues: Decimal:200; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(200)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Decimal property is null
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Decimal property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryDecimal is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryDecimal
	0
	NSalaryDecimal
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Double property equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble = 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		Equal
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Double property not equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble <> 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		NotEqual
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Double property less than Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble < 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThan
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Double property less than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble <= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThanOrEqual
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Double property greater than Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble > 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThan
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Double property greater than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalaryDouble >= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThanOrEqual
		DoubleProperty(0, SalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Double property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble = ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		Equal
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Double property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble <> ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Double property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble < ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThan
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Double property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble <= ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThanOrEqual
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Double property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble > ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThan
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Double property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryDouble >= ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThanOrEqual
		DoubleProperty(0, SalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Double property is null
QueryString: select e from SalaryEmployee e where e.SalaryDouble is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		IS
		DoubleProperty(0, SalaryDouble)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Double property is not null
QueryString: select e from SalaryEmployee e where e.SalaryDouble is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		ISNOT
		DoubleProperty(0, SalaryDouble)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Double property equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble = 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		Equal
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Double property not equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble <> 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		NotEqual
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Double property less than Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble < 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThan
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Double property less than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble <= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThanOrEqual
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Double property greater than Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble > 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThan
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Double property greater than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalaryDouble >= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThanOrEqual
		DoubleProperty(0, NSalaryDouble)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Double property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble = ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		Equal
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Double property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble <> ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Double property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble < ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThan
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Double property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble <= ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThanOrEqual
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Double property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble > ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThan
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Double property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryDouble >= ?
VariableValues: Double:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThanOrEqual
		DoubleProperty(0, NSalaryDouble)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Double property is null
QueryString: select e from SalaryEmployee e where e.NSalaryDouble is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		IS
		DoubleProperty(0, NSalaryDouble)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Double property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryDouble is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		ISNOT
		DoubleProperty(0, NSalaryDouble)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int16 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int16 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, SalaryInt16)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int16 property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int16 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int16 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int16 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt16 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int16 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 = ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int16 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 <> ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, SalaryInt16)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int16 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 < ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int16 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 <= ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int16 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 > ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int16 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt16 >= ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int16 property is null
QueryString: select e from SalaryEmployee e where e.SalaryInt16 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Int16 property is not null
QueryString: select e from SalaryEmployee e where e.SalaryInt16 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int16 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int16 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, NSalaryInt16)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int16 property less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int16 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int16 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int16 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int16 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 = ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int16 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 <> ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, NSalaryInt16)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int16 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 < ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int16 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 <= ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int16 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 > ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int16 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 >= ?
VariableValues: Int16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int16 property is null
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Int16 property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryInt16 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt16
	0
	NSalaryInt16
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int32 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int32 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, SalaryInt32)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int32 property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int32 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int32 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int32 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt32 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int32 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 = ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int32 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 <> ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, SalaryInt32)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int32 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 < ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int32 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 <= ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int32 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 > ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int32 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt32 >= ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int32 property is null
QueryString: select e from SalaryEmployee e where e.SalaryInt32 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Int32 property is not null
QueryString: select e from SalaryEmployee e where e.SalaryInt32 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int32 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int32 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, NSalaryInt32)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int32 property less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int32 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int32 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int32 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int32 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 = ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int32 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 <> ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, NSalaryInt32)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int32 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 < ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int32 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 <= ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int32 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 > ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int32 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 >= ?
VariableValues: Int32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int32 property is null
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Int32 property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryInt32 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt32
	0
	NSalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int64 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int64 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, SalaryInt64)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int64 property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int64 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int64 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int64 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryInt64 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int64 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 = ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Int64 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 <> ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, SalaryInt64)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Int64 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 < ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Int64 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 <= ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Int64 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 > ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Int64 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryInt64 >= ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Int64 property is null
QueryString: select e from SalaryEmployee e where e.SalaryInt64 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Int64 property is not null
QueryString: select e from SalaryEmployee e where e.SalaryInt64 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int64 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int64 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, NSalaryInt64)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int64 property less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int64 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int64 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int64 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int64 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 = ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int64 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 <> ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, NSalaryInt64)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int64 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 < ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Int64 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 <= ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Int64 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 > ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Int64 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 >= ?
VariableValues: Int64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Int64 property is null
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Int64 property is not null
QueryString: select e from SalaryEmployee e where e.NSalaryInt64 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryInt64
	0
	NSalaryInt64
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Object property equal to Object literal
QueryString: select e from SalaryEmployee e where e.Manager = object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
		ObjectRangePoint(
			GreaterThanOrEqual
			ObjectLiteral(15)
		)
		ObjectRangePoint(
			LessThanOrEqual
			ObjectLiteral(15)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Object property not equal to Object literal
QueryString: select e from SalaryEmployee e where e.Manager <> object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonObject(
		NotEqual
		ObjectProperty(0, Manager)
		ObjectLiteral(15)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Object property less than Object literal (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager < object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager < object 15: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and object(unknown) to operator lessThan. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property less than or equal to Object literal (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager <= object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager <= object 15: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and object(unknown) to operator lessThanOrEqual. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property greater than Object literal (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager > object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager > object 15: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and object(unknown) to operator greaterThan. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property greater than or equal to Object literal (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager >= object 15
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager >= object 15: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and object(unknown) to operator greaterThanOrEqual. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property equal to Object variable
QueryString: select e from SalaryEmployee e where e.Manager = ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
		ObjectRangePoint(
			GreaterThanOrEqual
			ObjectVariable(15)
		)
		ObjectRangePoint(
			LessThanOrEqual
			ObjectVariable(15)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Object property not equal to Object variable
QueryString: select e from SalaryEmployee e where e.Manager <> ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonObject(
		NotEqual
		ObjectProperty(0, Manager)
		ObjectVariable(15)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Object property less than Object variable (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager < ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager < ?: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and any to operator lessThan. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property less than or equal to Object variable (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager <= ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager <= ?: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and any to operator lessThanOrEqual. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property greater than Object variable (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager > ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager > ?: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and any to operator greaterThan. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property greater than or equal to Object variable (incorrect)
QueryString: select e from SalaryEmployee e where e.Manager >= ?
VariableValues: Object:15; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: True

ShouldBeReordered: True
ExpectedExceptionMessage: Failed to process query: select e from SalaryEmployee e where e.Manager >= ?: Incorrect arguments of types object(SQLTest.EmployeeDb.Employee) and any to operator greaterThanOrEqual. 
ExpectedExecutionPlan: 

ExpectedResult: 


<NEXT>
Description: Object property is null
QueryString: select e from SalaryEmployee e where e.Manager is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
		ObjectRangePoint(
			LessThanOrEqual
			ObjectLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Object property is not null
QueryString: select e from SalaryEmployee e where e.Manager is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
		ObjectRangePoint(
			GreaterThan
			ObjectLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: SByte property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: SByte property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, SalarySByte)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: SByte property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: SByte property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: SByte property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: SByte property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalarySByte >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: SByte property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte = ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: SByte property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte <> ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, SalarySByte)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: SByte property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte < ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: SByte property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte <= ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: SByte property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte > ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: SByte property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySByte >= ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: SByte property is null
QueryString: select e from SalaryEmployee e where e.SalarySByte is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: SByte property is not null
QueryString: select e from SalaryEmployee e where e.SalarySByte is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable SByte property equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable SByte property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, NSalarySByte)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable SByte property less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable SByte property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable SByte property greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable SByte property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalarySByte >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable SByte property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte = ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable SByte property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte <> ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, NSalarySByte)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable SByte property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte < ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable SByte property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte <= ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable SByte property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte > ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable SByte property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySByte >= ?
VariableValues: SByte:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable SByte property is null
QueryString: select e from SalaryEmployee e where e.NSalarySByte is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable SByte property is not null
QueryString: select e from SalaryEmployee e where e.NSalarySByte is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalarySByte
	0
	NSalarySByte
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Single property equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle = 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		Equal
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Single property not equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle <> 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		NotEqual
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Single property less than Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle < 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThan
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Single property less than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle <= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThanOrEqual
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Single property greater than Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle > 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThan
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Single property greater than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.SalarySingle >= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThanOrEqual
		DoubleProperty(0, SalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Single property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle = ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		Equal
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Single property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle <> ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: Single property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle < ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThan
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Single property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle <= ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThanOrEqual
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: Single property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle > ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThan
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Single property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalarySingle >= ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThanOrEqual
		DoubleProperty(0, SalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Single property is null
QueryString: select e from SalaryEmployee e where e.SalarySingle is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		IS
		DoubleProperty(0, SalarySingle)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Single property is not null
QueryString: select e from SalaryEmployee e where e.SalarySingle is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		ISNOT
		DoubleProperty(0, SalarySingle)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Single property equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle = 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		Equal
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Single property not equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle <> 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		NotEqual
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Single property less than Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle < 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThan
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Single property less than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle <= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		LessThanOrEqual
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Single property greater than Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle > 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThan
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Single property greater than or equal to Double literal
QueryString: select e from SalaryEmployee e where e.NSalarySingle >= 2.0e1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDouble(
		GreaterThanOrEqual
		DoubleProperty(0, NSalarySingle)
		DoubleLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Single property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle = ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		Equal
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Single property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle <> ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Single property less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle < ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThan
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Single property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle <= ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		LessThanOrEqual
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable Single property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle > ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThan
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable Single property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalarySingle >= ?
VariableValues: Single:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		GreaterThanOrEqual
		DoubleProperty(0, NSalarySingle)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable Single property is null
QueryString: select e from SalaryEmployee e where e.NSalarySingle is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		IS
		DoubleProperty(0, NSalarySingle)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable Single property is not null
QueryString: select e from SalaryEmployee e where e.NSalarySingle is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	ComparisonNumerical(
		ISNOT
		DoubleProperty(0, NSalarySingle)
		IntegerLiteral(<NULL>)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: String property equal to String literal
QueryString: select e from SalaryEmployee e where e.LastName = 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThanOrEqual
			StringLiteral(Moiseenko)
		)
		StringRangePoint(
			LessThanOrEqual
			StringLiteral(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: String property not equal to String literal
QueryString: select e from SalaryEmployee e where e.LastName <> 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonString(
		NotEqual
		StringProperty(0, LastName)
		StringLiteral(Moiseenko)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: String property greater than String literal
QueryString: select e from SalaryEmployee e where e.LastName > 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThan
			StringLiteral(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: String property greater than or equal to String literal
QueryString: select e from SalaryEmployee e where e.LastName >= 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThanOrEqual
			StringLiteral(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: String property less than String literal
QueryString: select e from SalaryEmployee e where e.LastName < 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			LessThan
			StringLiteral(Moiseenko)
		)
		StringRangePoint(
			GreaterThan
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: String property less than or equal to String literal
QueryString: select e from SalaryEmployee e where e.LastName <= 'Moiseenko'
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			LessThanOrEqual
			StringLiteral(Moiseenko)
		)
		StringRangePoint(
			GreaterThan
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: String property equal to String variable
QueryString: select e from SalaryEmployee e where e.LastName = ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThanOrEqual
			StringVariable(Moiseenko)
		)
		StringRangePoint(
			LessThanOrEqual
			StringVariable(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: String property not equal to String variable
QueryString: select e from SalaryEmployee e where e.LastName <> ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonString(
		NotEqual
		StringProperty(0, LastName)
		StringVariable(Moiseenko)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: String property greater than String variable
QueryString: select e from SalaryEmployee e where e.LastName > ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThan
			StringVariable(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: String property greater than or equal to String variable
QueryString: select e from SalaryEmployee e where e.LastName >= ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThanOrEqual
			StringVariable(Moiseenko)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: String property less than String variable
QueryString: select e from SalaryEmployee e where e.LastName < ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			LessThan
			StringVariable(Moiseenko)
		)
		StringRangePoint(
			GreaterThan
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: String property less than or equal to String variable
QueryString: select e from SalaryEmployee e where e.LastName <= ?
VariableValues: String:Moiseenko; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			LessThanOrEqual
			StringVariable(Moiseenko)
		)
		StringRangePoint(
			GreaterThan
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: String property is null
QueryString: select e from SalaryEmployee e where e.LastName is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			LessThanOrEqual
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: String property is not null
QueryString: select e from SalaryEmployee e where e.LastName is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
		StringRangePoint(
			GreaterThan
			StringLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt16 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt16 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, SalaryUInt16)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt16 property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt16 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt16 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt16 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt16 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 = ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt16 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 <> ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, SalaryUInt16)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt16 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 < ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt16 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 <= ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt16 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 > ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt16 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 >= ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt16 property is null
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: UInt16 property is not null
QueryString: select e from SalaryEmployee e where e.SalaryUInt16 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt16 equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt16 not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, NSalaryUInt16)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt16 less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt16 less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt16 greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt16 greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt16 equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 = ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt16 not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 <> ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, NSalaryUInt16)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt16 less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 < ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt16 less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 <= ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt16 greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 > ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt16 greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 >= ?
VariableValues: UInt16:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt16 is null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable UInt16 is not null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt16 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt16
	0
	NSalaryUInt16
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt32 property equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt32 property not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, SalaryUInt32)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt32 property less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt32 property less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt32 property greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt32 property greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt32 property equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 = ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt32 property not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 <> ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, SalaryUInt32)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt32 property less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 < ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt32 property less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 <= ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt32 property greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 > ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt32 property greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 >= ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt32 property is null
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: UInt32 property is not null
QueryString: select e from SalaryEmployee e where e.SalaryUInt32 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt32 equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt32 not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, NSalaryUInt32)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt32 less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt32 less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt32 greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt32 greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt32 equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 = ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt32 not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 <> ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, NSalaryUInt32)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt32 less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 < ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt32 less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 <= ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt32 greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 > ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt32 greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 >= ?
VariableValues: UInt32:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt32 is null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable UInt32 is not null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt32 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt32
	0
	NSalaryUInt32
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt64 equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt64 not equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, SalaryUInt64)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt64 less than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt64 less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt64 greater than integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt64 greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt64 equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 = ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: UInt64 not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 <> ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, SalaryUInt64)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 


<NEXT>
Description: UInt64 less than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 < ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: UInt64 less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 <= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 


<NEXT>
Description: UInt64 greater than numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 > ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: UInt64 greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 >= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: UInt64 is null
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: UInt64 is not null
QueryString: select e from SalaryEmployee e where e.SalaryUInt64 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt64 equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 = 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt64 not equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 <> 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonDecimal(
		NotEqual
		UIntegerProperty(0, NSalaryUInt64)
		IntegerLiteral(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt64 less than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 < 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt64 less than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 <= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt64 greater than integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 > 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt64 greater than or equal to integer literal
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 >= 20
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt64 equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 = ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt64 not equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 <> ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		UIntegerProperty(0, NSalaryUInt64)
		NumericalVariable(20)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt64 less than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 < ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable UInt64 less than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 <= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(20)
		)
		NumericalRangePoint(
			GreaterThan
			UIntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 


<NEXT>
Description: Nullable UInt64 greater than numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 > ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 


<NEXT>
Description: Nullable UInt64 greater than or equal to numerical variable
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 >= ?
VariableValues: UInt64:20; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(20)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Nullable UInt64 is null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 


<NEXT>
Description: Nullable UInt64 is not null
QueryString: select e from SalaryEmployee e where e.NSalaryUInt64 is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_NSalaryUInt64
	0
	NSalaryUInt64
	UIntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 


<NEXT>
Description: Enum property equal to integer literal
QueryString: select l from Location l where l.Type = 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Enum property equal to integer literal
QueryString: select l from Location l where l.Type <> 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, Type)
		IntegerLiteral(1)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property less than integer literal
QueryString: select l from Location l where l.Type < 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Enum property less than or equal to integer literal
QueryString: select l from Location l where l.Type <= 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Enum property greater than integer literal
QueryString: select l from Location l where l.Type > 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property greater than or equal to integer literal
QueryString: select l from Location l where l.Type >= 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property equal to numerical variable
QueryString: select l from Location l where l.Type = ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(1)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Enum property not equal to numerical variable
QueryString: select l from Location l where l.Type <> ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, Type)
		NumericalVariable(1)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property less than numerical variable
QueryString: select l from Location l where l.Type < ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Enum property less than or equal to numerical variable
QueryString: select l from Location l where l.Type <= ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Enum property greater than numerical variable
QueryString: select l from Location l where l.Type > ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property greater than or equal to numerical variable
QueryString: select l from Location l where l.Type >= ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Enum property is null
QueryString: select l from Location l where l.Type is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Enum property is not null
QueryString: select l from Location l where l.Type is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_Type
	0
	Type
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property equal to integer literal
QueryString: select l from Location l where l.NType = 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Nullable Enum property equal to integer literal
QueryString: select l from Location l where l.NType <> 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonInteger(
		NotEqual
		IntegerProperty(0, NType)
		IntegerLiteral(1)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property less than integer literal
QueryString: select l from Location l where l.NType < 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Enum property less than or equal to integer literal
QueryString: select l from Location l where l.NType <= 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Nullable Enum property greater than integer literal
QueryString: select l from Location l where l.NType > 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property greater than or equal to integer literal
QueryString: select l from Location l where l.NType >= 1
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: True
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			IntegerLiteral(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property equal to numerical variable
QueryString: select l from Location l where l.NType = ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(1)
		)
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Nullable Enum property equal to numerical variable
QueryString: select l from Location l where l.NType <> ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
FullTableScan(
	0
	ComparisonNumerical(
		NotEqual
		IntegerProperty(0, NType)
		NumericalVariable(1)
	)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property less than numerical variable
QueryString: select l from Location l where l.NType < ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThan
			NumericalVariable(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Enum property less than or equal to numerical variable
QueryString: select l from Location l where l.NType <= ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			NumericalVariable(1)
		)
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 


<NEXT>
Description: Nullable Enum property greater than numerical variable
QueryString: select l from Location l where l.NType > ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property greater than or equal to numerical variable
QueryString: select l from Location l where l.NType >= ?
VariableValues: Int32:1; 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThanOrEqual
			NumericalVariable(1)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Nullable Enum property is null
QueryString: select l from Location l where l.NType is null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			LessThanOrEqual
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 


<NEXT>
Description: Nullable Enum property is not null
QueryString: select l from Location l where l.NType is not null
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	Location_NType
	0
	NType
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			IntegerLiteral(<NULL>)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 1 | 
 | 2 | 
 | 3 | 
 | 4 | 
 | 5 | 
 | 6 | 


<NEXT>
Description: Get objectes ordered by Boolean ascending
QueryString: select d from Department d order by Description asc
ShouldBeReordered: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	auto
	0
	Description
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 8 | 
 | 9 | 
 | 10 | 

<NEXT>
Description: Order by Boolean ascending
QueryString: select e.FirstName, e.Commission from SalaryEmployee e order by e.Commission asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		BooleanProperty(0, Commission)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Boolean ! 
 | Alexey | False | 
 | Petros | False | 
 | Andreas | True | 


<NEXT>
Description: Order by Byte ascending
QueryString: select e.FirstName, e.SalaryByte from SalaryEmployee e order by e.SalaryByte asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryByte)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Byte ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by DateTime ascending
QueryString: select e.FirstName, e.HireDate from SalaryEmployee e order by e.HireDate asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DateTimeProperty(0, HireDate)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:DateTime ! 
 | Alexey | 2010-09-01 00:00:00Z | 
 | Petros | 2010-10-01 00:00:00Z | 
 | Andreas | 2010-12-13 00:00:00Z | 


<NEXT>
Description: Order by Decimal ascending
QueryString: select e.FirstName, e.SalaryDecimal from SalaryEmployee e order by e.SalaryDecimal asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DecimalProperty(0, SalaryDecimal)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Decimal ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Double ascending
QueryString: select e.FirstName, e.SalaryDouble from SalaryEmployee e order by e.SalaryDouble asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DoubleProperty(0, SalaryDouble)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	DoubleComparer(
		DoubleProperty(0, SalaryDouble)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:Double ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Int16 ascending
QueryString: select e.FirstName, e.SalaryInt16 from SalaryEmployee e order by e.SalaryInt16 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt16)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Int16 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Int32 ascending
QueryString: select e.FirstName, e.SalaryInt32 from SalaryEmployee e order by e.SalaryInt32 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt32)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Int32 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Int64 ascending
QueryString: select e.FirstName, e.SalaryInt64 from SalaryEmployee e order by e.SalaryInt64 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt64)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Int64 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Object ascending
QueryString: select e.FirstName, e.Manager from SalaryEmployee e order by e.Manager asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		ObjectProperty(0, Manager)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:Object ! 
 | Alexey | <NULL> | 
 | Petros | 14 | 
 | Andreas | 15 | 


<NEXT>
Description: Order by SByte ascending
QueryString: select e.FirstName, e.SalarySByte from SalaryEmployee e order by e.SalarySByte asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalarySByte)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:SByte ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Single ascending
QueryString: select e.FirstName, e.SalarySingle from SalaryEmployee e order by e.SalarySingle asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DoubleProperty(0, SalarySingle)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	DoubleComparer(
		DoubleProperty(0, SalarySingle)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:Single ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by String ascending
QueryString: select e.FirstName, e.LastName from SalaryEmployee e order by e.LastName asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(0, LastName)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Petros | <NULL> | 
 | Alexey | Moiseenko | 
 | Andreas | Thyrhaug | 


<NEXT>
Description: Order by UInt16 ascending
QueryString: select e.FirstName, e.SalaryUInt16 from SalaryEmployee e order by e.SalaryUInt16 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt16)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:UInt16 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by UInt32 ascending
QueryString: select e.FirstName, e.SalaryUInt32 from SalaryEmployee e order by e.SalaryUInt32 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt32)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:UInt32 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by UInt64 ascending
QueryString: select e.FirstName, e.SalaryUInt64 from SalaryEmployee e order by e.SalaryUInt64 asc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt64)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:UInt64 ! 
 | Alexey | 10 | 
 | Petros | 20 | 
 | Andreas | 30 | 


<NEXT>
Description: Order by Boolean descending
QueryString: select e.FirstName, e.Commission from SalaryEmployee e order by e.Commission desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		BooleanProperty(0, Commission)
)
IndexScan(
	SalaryEmployee_Commission
	0
	Commission
	BooleanDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Boolean ! 
 | Andreas | True | 
 | Petros | False | 
 | Alexey | False | 


<NEXT>
Description: Order by Byte descending
QueryString: select e.FirstName, e.SalaryByte from SalaryEmployee e order by e.SalaryByte desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryByte)
)
IndexScan(
	SalaryEmployee_SalaryByte
	0
	SalaryByte
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Byte ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by DateTime descending
QueryString: select e.FirstName, e.HireDate from SalaryEmployee e order by e.HireDate desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DateTimeProperty(0, HireDate)
)
IndexScan(
	SalaryEmployee_HireDate
	0
	HireDate
	DateTimeDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:DateTime ! 
 | Andreas | 2010-12-13 00:00:00Z | 
 | Petros | 2010-10-01 00:00:00Z | 
 | Alexey | 2010-09-01 00:00:00Z | 


<NEXT>
Description: Order by Decimal descending
QueryString: select e.FirstName, e.SalaryDecimal from SalaryEmployee e order by e.SalaryDecimal desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DecimalProperty(0, SalaryDecimal)
)
IndexScan(
	SalaryEmployee_SalaryDecimal
	0
	SalaryDecimal
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Decimal ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Double descending
QueryString: select e.FirstName, e.SalaryDouble from SalaryEmployee e order by e.SalaryDouble desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DoubleProperty(0, SalaryDouble)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	DoubleComparer(
		DoubleProperty(0, SalaryDouble)
		Descending
	)
)

ExpectedResult: 
 ! 0:String ! 1:Double ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Int16 descending
QueryString: select e.FirstName, e.SalaryInt16 from SalaryEmployee e order by e.SalaryInt16 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt16)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Int16 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Int32 descending
QueryString: select e.FirstName, e.SalaryInt32 from SalaryEmployee e order by e.SalaryInt32 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt32)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Int32 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Int64 descending
QueryString: select e.FirstName, e.SalaryInt64 from SalaryEmployee e order by e.SalaryInt64 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalaryInt64)
)
IndexScan(
	SalaryEmployee_SalaryInt64
	0
	SalaryInt64
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Int64 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Object descending
QueryString: select e.FirstName, e.Manager from SalaryEmployee e order by e.Manager desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		ObjectProperty(0, Manager)
)
IndexScan(
	SalaryEmployee_Manager
	0
	Manager
	ObjectDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:Object ! 
 | Andreas | 15 | 
 | Petros | 14 | 
 | Alexey | <NULL> | 


<NEXT>
Description: Order by SByte descending
QueryString: select e.FirstName, e.SalarySByte from SalaryEmployee e order by e.SalarySByte desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		IntegerProperty(0, SalarySByte)
)
IndexScan(
	SalaryEmployee_SalarySByte
	0
	SalarySByte
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:SByte ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by Single descending
QueryString: select e.FirstName, e.SalarySingle from SalaryEmployee e order by e.SalarySingle desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		DoubleProperty(0, SalarySingle)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	DoubleComparer(
		DoubleProperty(0, SalarySingle)
		Descending
	)
)

ExpectedResult: 
 ! 0:String ! 1:Single ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by String descending
QueryString: select e.FirstName, e.LastName from SalaryEmployee e order by e.LastName desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(0, LastName)
)
IndexScan(
	SalaryEmployee_LastName
	0
	LastName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Andreas | Thyrhaug | 
 | Alexey | Moiseenko | 
 | Petros | <NULL> | 


<NEXT>
Description: Order by UInt16 descending
QueryString: select e.FirstName, e.SalaryUInt16 from SalaryEmployee e order by e.SalaryUInt16 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt16)
)
IndexScan(
	SalaryEmployee_SalaryUInt16
	0
	SalaryUInt16
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:UInt16 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by UInt32 descending
QueryString: select e.FirstName, e.SalaryUInt32 from SalaryEmployee e order by e.SalaryUInt32 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt32)
)
IndexScan(
	SalaryEmployee_SalaryUInt32
	0
	SalaryUInt32
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:UInt32 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by UInt64 descending
QueryString: select e.FirstName, e.SalaryUInt64 from SalaryEmployee e order by e.SalaryUInt64 desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		UIntegerProperty(0, SalaryUInt64)
)
IndexScan(
	SalaryEmployee_SalaryUInt64
	0
	SalaryUInt64
	UIntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Descending
)

ExpectedResult: 
 ! 0:String ! 1:UInt64 ! 
 | Andreas | 30 | 
 | Petros | 20 | 
 | Alexey | 10 | 


<NEXT>
Description: Order by on several properties
QueryString: select e.FirstName, e.LastName from SQLTest.EmployeeDb.Employee e order by e.LastName asc, e.FirstName desc
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(0, LastName)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
		StringComparer(
			StringProperty(0, LastName)
			Ascending
		)
		StringComparer(
			StringProperty(0, FirstName)
			Descending
		)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Petros | <NULL> | 
 | PETER | <NULL> | 
 | Christian | Holmstrand | 
 | Åsa | Holmström | 
 | Alexey | Moiseenko | 
 | Erik | Ohlsson | 
 | per | Samuelsson | 
 | Andreas | Thyrhaug | 
 | Joachim | Wester | 


<NEXT>
Description: Order by on path expression
QueryString: select e.FirstName, e.Manager.FirstName from SQLTest.EmployeeDb.Employee e order by e.Manager.FirstName
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringPath(
			ObjectProperty(0, Manager)
			StringProperty(-1, FirstName)
		)
)
Sort(
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	StringComparer(
		StringPath(
			ObjectProperty(0, Manager)
			StringProperty(-1, FirstName)
		)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | <NULL> | 
 | Joachim | <NULL> | 
 | Erik | Åsa | 
 | PETER | Åsa | 
 | Petros | Åsa | 
 | Åsa | Joachim | 
 | Andreas | PETER | 
 | Christian | PETER | 
 | per | PETER | 


<NEXT>
Description: Cross join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e cross join Department d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Head office | 
 | Alexey | Kernel | 
 | Alexey | Sales | 
 | Alexey | Server | 
 | Andreas | Head office | 
 | Andreas | Kernel | 
 | Andreas | Sales | 
 | Andreas | Server | 
 | Åsa | Head office | 
 | Åsa | Kernel | 
 | Åsa | Sales | 
 | Åsa | Server | 
 | Christian | Head office | 
 | Christian | Kernel | 
 | Christian | Sales | 
 | Christian | Server | 
 | Erik | Head office | 
 | Erik | Kernel | 
 | Erik | Sales | 
 | Erik | Server | 
 | Joachim | Head office | 
 | Joachim | Kernel | 
 | Joachim | Sales | 
 | Joachim | Server | 
 | per | Head office | 
 | per | Kernel | 
 | per | Sales | 
 | per | Server | 
 | PETER | Head office | 
 | PETER | Kernel | 
 | PETER | Sales | 
 | PETER | Server | 
 | Petros | Head office | 
 | Petros | Kernel | 
 | Petros | Sales | 
 | Petros | Server | 


<NEXT>
Description: Cross join (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e cross join Department d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 10 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Right join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e right join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	LeftOuter
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		Employee_Department
		0
		Department
		ObjectDynamicRange(
			ObjectRangePoint(
				GreaterThanOrEqual
				ObjectThis(1)
			)
			ObjectRangePoint(
				LessThanOrEqual
				ObjectThis(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | <NULL> | Sales | 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Right join (single object projection)
QueryString: select e from SQLTest.EmployeeDb.Employee e right join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
Join(
	LeftOuter
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		Employee_Department
		0
		Department
		ObjectDynamicRange(
			ObjectRangePoint(
				GreaterThanOrEqual
				ObjectThis(1)
			)
			ObjectRangePoint(
				LessThanOrEqual
				ObjectThis(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 14 | 
 | 15 | 
 | 16 | 
 | 17 | 
 | 18 | 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Right outer join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e right outer join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	LeftOuter
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		Employee_Department
		0
		Department
		ObjectDynamicRange(
			ObjectRangePoint(
				GreaterThanOrEqual
				ObjectThis(1)
			)
			ObjectRangePoint(
				LessThanOrEqual
				ObjectThis(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | <NULL> | Sales | 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Right outer join (single object projection)
QueryString: select e from SQLTest.EmployeeDb.Employee e right outer join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
)
Join(
	LeftOuter
	IndexScan(
		auto
		1
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		Employee_Department
		0
		Department
		ObjectDynamicRange(
			ObjectRangePoint(
				GreaterThanOrEqual
				ObjectThis(1)
			)
			ObjectRangePoint(
				LessThanOrEqual
				ObjectThis(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 14 | 
 | 15 | 
 | 16 | 
 | 17 | 
 | 18 | 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Self-join on two conditions (Ruslan)
QueryString: select e1, e2 from SQLTest.EmployeeDb.Employee e1, SQLTest.EmployeeDb.Employee e2 where e1.HireDate < e2.HireDate and e1.Department = e2.Department
VariableValues: 
SingleObjectProjection: False
IncludesLiteral: False
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	IndexScan(
		Employee_Department
		1
		Department
		ObjectDynamicRange(
			ObjectRangePoint(
				GreaterThanOrEqual
				ObjectProperty(0, Department)
			)
			ObjectRangePoint(
				LessThanOrEqual
				ObjectProperty(0, Department)
			)
		)
		ComparisonDateTime(
			LessThan
			DateTimeProperty(0, HireDate)
			DateTimeProperty(1, HireDate)
		)
		Ascending
	)
)

ExpectedResult: 
 ! 0:Object ! 1:Object ! 
 | 14 | 21 | 
 | 15 | 20 | 
 | 16 | 15 | 
 | 16 | 20 | 
 | 17 | 15 | 
 | 17 | 20 | 
 | 18 | 22 | 


<NEXT>
Description: Object reference casting
QueryString: select cast(p as SQLTest.EmployeeDb.Employee) from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: False
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		ObjectCast(
			ObjectThis(0)
			SQLTest.EmployeeDb.Employee
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 22 | 
 | 14 | 
 | <NULL> | 
 | 16 | 
 | 18 | 
 | 13 | 
 | <NULL> | 
 | <NULL> | 
 | 17 | 
 | 15 | 
 | 21 | 


<NEXT>
Description: Object reference casting first in path expression
QueryString: select cast(p as SQLTest.EmployeeDb.Employee).Manager from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Manager)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 13 | 
 | 14 | 
 | 14 | 
 | 14 | 
 | 15 | 
 | 15 | 
 | 15 | 


<NEXT>
Description: Object reference casting within path expression
QueryString: select cast(p.Father as SQLTest.EmployeeDb.Employee).Manager from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		ObjectPath(
			ObjectCast(
				ObjectProperty(0, Father)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Manager)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 14 | 


<NEXT>
Description: Multiple Object reference castings
QueryString: select cast(cast(p as SQLTest.EmployeeDb.Employee).Manager as SQLTest.EmployeeDb.Person).Father from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: True
IncludesLiteral: False
IncludesObjectValue: False
SingleObjectPathProjection: True
ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectCast(
				ObjectProperty(-1, Manager)
				SQLTest.EmployeeDb.Person
			)
			ObjectProperty(-1, Father)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | <NULL> | 
 | 12 | 
 | 12 | 
 | 12 | 


<NEXT>
Description: Object reference casting with asterisk
QueryString: select cast(p as SQLTest.EmployeeDb.Employee).* from SQLTest.EmployeeDb.Person p
VariableValues: 
DataManipulation: False
SingleObjectProjection: False
IncludesLiteral: False
IncludesObjectValue: False

ShouldBeReordered: True
ExpectedExceptionMessage: 
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
)
Projection(
	0 = 
		StringPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			StringProperty(-1, FirstName)
		)
	1 = 
		StringPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			StringProperty(-1, LastName)
		)
	2 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Home)
		)
	3 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Father)
		)
	4 = 
		DateTimePath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			DateTimeProperty(-1, HireDate)
		)
	5 = 
		DateTimePath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			DateTimeProperty(-1, NHireDate)
		)
	6 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Manager)
		)
	7 = 
		ObjectPath(
			ObjectCast(
				ObjectThis(0)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Department)
		)
)
IndexScan(
	auto
	0
	FirstName
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:Object ! 3:Object ! 4:DateTime ! 5:DateTime ! 6:Object ! 7:Object ! 
 | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | 
 | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | 
 | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | <NULL> | 
 | Alexey | Moiseenko | 6 | <NULL> | 2010-09-01 00:00:00Z | <NULL> | <NULL> | 9 | 
 | Andreas | Thyrhaug | <NULL> | <NULL> | 2010-12-13 00:00:00Z | 2010-12-13 00:00:00Z | 15 | 8 | 
 | Åsa | Holmström | 4 | <NULL> | 2009-12-01 00:00:00Z | 2009-12-01 00:00:00Z | 13 | 7 | 
 | Christian | Holmstrand | 3 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | Erik | Ohlsson | 5 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 14 | 8 | 
 | Joachim | Wester | 1 | <NULL> | 2003-01-01 00:00:00Z | <NULL> | <NULL> | <NULL> | 
 | per | Samuelsson | 2 | <NULL> | 2003-01-01 00:00:00Z | 2003-01-01 00:00:00Z | 15 | 9 | 
 | PETER | <NULL> | 2 | 12 | 2005-10-01 00:00:00Z | 2005-10-01 00:00:00Z | 14 | 9 | 
 | Petros | <NULL> | <NULL> | <NULL> | 2010-10-01 00:00:00Z | 2010-10-01 00:00:00Z | 14 | 7 | 


<NEXT>
Description: Join using on
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Join using on (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Join using where
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e join Department d where e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Join using where (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e join Department d where e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Join of the same extent
QueryString: select e1.FirstName, e2.FirstName from SQLTest.EmployeeDb.Employee e1 join SQLTest.EmployeeDb.Employee e2 on e1 = e2
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, FirstName)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectThis(0)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Alexey | 
 | Andreas | Andreas | 
 | Åsa | Åsa | 
 | Christian | Christian | 
 | Erik | Erik | 
 | Joachim | Joachim | 
 | per | per | 
 | PETER | PETER | 
 | Petros | Petros | 


<NEXT>
Description: Join of the same extent (single object projection)
QueryString: select e2 from SQLTest.EmployeeDb.Employee e1 join SQLTest.EmployeeDb.Employee e2 on e1 = e2
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectThis(0)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | 13 | 
 | 14 | 
 | 15 | 
 | 16 | 
 | 17 | 
 | 18 | 
 | 20 | 
 | 21 | 
 | 22 | 


<NEXT>
Description: Inner join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e inner join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Inner join (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e inner join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Left join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e left join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | Joachim | <NULL> | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Left join (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e left join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Left outer join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e left outer join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | Joachim | <NULL> | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Left outer join (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e left outer join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Old form of join
QueryString: select e.FirstName, d.Name from SQLTest.EmployeeDb.Employee e, Department d where e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Old form of join (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e, Department d where e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 


<NEXT>
Description: Unqualified field names in join
QueryString: select FirstName, Name from SQLTest.EmployeeDb.Employee e join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringProperty(1, Name)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 
 | Alexey | Server | 
 | Andreas | Kernel | 
 | Åsa | Head office | 
 | Christian | Server | 
 | Erik | Kernel | 
 | per | Server | 
 | PETER | Server | 
 | Petros | Head office | 


<NEXT>
Description: Implicit joins using two path expressions
QueryString: select e.FirstName, e.Department.Name, e.Department.Location.Name, e.Manager.FirstName, e.Manager.Department.Name, e.Manager.Department.Location.Name from SQLTest.EmployeeDb.Employee e where e.Department.Location = e.Manager.Department.Location
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
	2 = SQLTest.EmployeeDb.Employee
	3 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringPath(
			ObjectProperty(0, Department)
			StringProperty(-1, Name)
		)
	2 = 
		StringPath(
			ObjectProperty(0, Department)
			ObjectProperty(-1, Location)
			StringProperty(-1, Name)
		)
	3 = 
		StringPath(
			ObjectProperty(0, Manager)
			StringProperty(-1, FirstName)
		)
	4 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			StringProperty(-1, Name)
		)
	5 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
			StringProperty(-1, Name)
		)
)
Join(
	Inner
	Join(
		Inner
		Join(
			Inner
			IndexScan(
				auto
				0
				FirstName
				StringDynamicRange(
				)
				LogicalValue(TRUE)
				Ascending
			)
			ReferenceLookup(
				1
				ObjectProperty(0, Department)
				LogicalValue(TRUE)
			)
		)
		ReferenceLookup(
			2
			ObjectProperty(0, Manager)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		3
		ObjectProperty(2, Department)
		ComparisonObject(
			Equal
			ObjectProperty(1, Location)
			ObjectProperty(3, Location)
		)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:String ! 3:String ! 4:String ! 5:String ! 
 | Christian | Server | Stockholm | PETER | Server | Stockholm | 
 | per | Server | Stockholm | PETER | Server | Stockholm | 
 | PETER | Server | Stockholm | Åsa | Head office | Stockholm | 
 | Petros | Head office | Stockholm | Åsa | Head office | Stockholm | 


<NEXT>
Description: Implicit joins using two path expressions (single object projection)
QueryString: select e.Manager.Department.Location from SQLTest.EmployeeDb.Employee e where e.Department.Location = e.Manager.Department.Location
CompositeResultObjects: False
SingleObjectPathProjection: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
	2 = SQLTest.EmployeeDb.Employee
	3 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
		)
)
Join(
	Inner
	Join(
		Inner
		Join(
			Inner
			IndexScan(
				auto
				0
				FirstName
				StringDynamicRange(
				)
				LogicalValue(TRUE)
				Ascending
			)
			ReferenceLookup(
				1
				ObjectProperty(0, Department)
				LogicalValue(TRUE)
			)
		)
		ReferenceLookup(
			2
			ObjectProperty(0, Manager)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		3
		ObjectProperty(2, Department)
		ComparisonObject(
			Equal
			ObjectProperty(1, Location)
			ObjectProperty(3, Location)
		)
	)
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 2 | 
 | 2 | 
 | 2 | 


<NEXT>
Description: Implicit joins using path expression and variable
QueryString: select e.FirstName, e.Manager.FirstName, e.Manager.Department.Name, e.Manager.Department.Location.Name from SQLTest.EmployeeDb.Employee e where e.Manager.Department.Location = ?
VariableValues: Object:2; 
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
	2 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringPath(
			ObjectProperty(0, Manager)
			StringProperty(-1, FirstName)
		)
	2 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			StringProperty(-1, Name)
		)
	3 = 
		StringPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
			StringProperty(-1, Name)
		)
)
Join(
	Inner
	Join(
		Inner
		IndexScan(
			auto
			0
			FirstName
			StringDynamicRange(
			)
			LogicalValue(TRUE)
			Ascending
		)
		ReferenceLookup(
			1
			ObjectProperty(0, Manager)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		2
		ObjectProperty(1, Department)
		ComparisonObject(
			Equal
			ObjectProperty(2, Location)
			ObjectVariable(2)
		)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:String ! 3:String ! 
 | Andreas | PETER | Server | Stockholm | 
 | Christian | PETER | Server | Stockholm | 
 | Erik | Åsa | Head office | Stockholm | 
 | per | PETER | Server | Stockholm | 
 | PETER | Åsa | Head office | Stockholm | 
 | Petros | Åsa | Head office | Stockholm | 


<NEXT>
Description: Implicit joins using path expression and variable (single object projection)
QueryString: select e.Manager.Department.Location from SQLTest.EmployeeDb.Employee e where e.Manager.Department.Location = ?
VariableValues: Object:2; 
CompositeResultObjects: False
SingleObjectPathProjection: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
	2 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectPath(
			ObjectProperty(0, Manager)
			ObjectProperty(-1, Department)
			ObjectProperty(-1, Location)
		)
)
Join(
	Inner
	Join(
		Inner
		IndexScan(
			auto
			0
			FirstName
			StringDynamicRange(
			)
			LogicalValue(TRUE)
			Ascending
		)
		ReferenceLookup(
			1
			ObjectProperty(0, Manager)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		2
		ObjectProperty(1, Department)
		ComparisonObject(
			Equal
			ObjectProperty(2, Location)
			ObjectVariable(2)
		)
	)
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 2 | 
 | 2 | 
 | 2 | 
 | 2 | 
 | 2 | 


<NEXT>
Description: Implicit joins using path expression with cast
QueryString: select p.FirstName, p.Father.FirstName, cast(p.Father as SQLTest.EmployeeDb.Employee).Department.Name from SQLTest.EmployeeDb.Person p where cast(p.Father as SQLTest.EmployeeDb.Employee).Department.Name = 'Server'
SingleObjectProjection: False
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
	1 = SQLTest.EmployeeDb.Person
	2 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		StringProperty(0, FirstName)
	1 = 
		StringPath(
			ObjectProperty(0, Father)
			StringProperty(-1, FirstName)
		)
	2 = 
		StringPath(
			ObjectCast(
				ObjectProperty(0, Father)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Department)
			StringProperty(-1, Name)
		)
)
Join(
	Inner
	Join(
		Inner
		IndexScan(
			auto
			0
			FirstName
			StringDynamicRange(
			)
			LogicalValue(TRUE)
			Ascending
		)
		ReferenceLookup(
			1
			ObjectProperty(0, Father)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		2
		ObjectPath(
			ObjectCast(
				ObjectThis(1)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Department)
		)
		ComparisonString(
			Equal
			StringProperty(2, Name)
			StringLiteral(Server)
		)
	)
)

ExpectedResult: 
 ! 0:String ! 1:String ! 2:String ! 
 | Lovisa | PETER | Server | 


<NEXT>
Description: Implicit joins using path expression with cast (single object projection)
QueryString: select cast(p.Father as SQLTest.EmployeeDb.Employee).Department from SQLTest.EmployeeDb.Person p where cast(p.Father as SQLTest.EmployeeDb.Employee).Department.Name = 'Server'
CompositeResultObjects: False
SingleObjectPathProjection: True
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Person
	1 = SQLTest.EmployeeDb.Person
	2 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectPath(
			ObjectCast(
				ObjectProperty(0, Father)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Department)
		)
)
Join(
	Inner
	Join(
		Inner
		IndexScan(
			auto
			0
			FirstName
			StringDynamicRange(
			)
			LogicalValue(TRUE)
			Ascending
		)
		ReferenceLookup(
			1
			ObjectProperty(0, Father)
			LogicalValue(TRUE)
		)
	)
	ReferenceLookup(
		2
		ObjectPath(
			ObjectCast(
				ObjectThis(1)
				SQLTest.EmployeeDb.Employee
			)
			ObjectProperty(-1, Department)
		)
		ComparisonString(
			Equal
			StringProperty(2, Name)
			StringLiteral(Server)
		)
	)
)

ExpectedResult: 
 ! Object ! 
 | 9 | 


<NEXT>
Description: Null and not NullObject should be returned
QueryString: select e, d from SQLTest.EmployeeDb.Employee e left join Department d on e.Department = d
SingleObjectProjection: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(0)
	1 = 
		ObjectThis(1)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! 0:Object ! 1:Object ! 
 | 13 | <NULL> | 
 | 14 | 7 | 
 | 15 | 9 | 
 | 16 | 9 | 
 | 17 | 9 | 
 | 18 | 8 | 
 | 20 | 9 | 
 | 21 | 7 | 
 | 22 | 8 | 


<NEXT>
Description: Null and not NullObject should be returned (single object projection)
QueryString: select d from SQLTest.EmployeeDb.Employee e left join Department d on e.Department = d
CompositeResultObjects: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectThis(1)
)
Join(
	LeftOuter
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ReferenceLookup(
		1
		ObjectProperty(0, Department)
		LogicalValue(TRUE)
	)
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 7 | 
 | 7 | 
 | 8 | 
 | 8 | 
 | 9 | 
 | 9 | 
 | 9 | 
 | 9 | 

=== Fetch ====

<NEXT>
Description: Fetch on sort result over indexed property
QueryString: select e from SalaryEmployee e order by SalaryInt16 fetch ?
VariableValues: Int32:2;
ShouldBeReordered: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt16
	0
	SalaryInt16
	IntegerDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 20 | 
 | 21 | 

 <NEXT>
Description: Fetch with sort grouped query on indexed object property
QueryString: select manager, count(firstname) from SQLTest.EmployeeDb.employee group by manager order by manager fetch ?
VariableValues: Int32:2;
SingleObjectProjection: False
IncludesLiteral: True
ShouldBeReordered: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = 
		TemporaryType(
			0 : Object
			1 : Decimal
		)
)
Projection(
	0 = 
		ObjectProperty(1, 0)
	1 = 
		DecimalProperty(1, 1)
)
Sort(
	Aggregation(
		1
		Sort(
			IndexScan(
				auto
				0
				FirstName
				StringDynamicRange(
				)
				LogicalValue(TRUE)
				Ascending
			)
			MultiComparer(
				ObjectComparer(
					ObjectProperty(0, Manager)
					Ascending
				)
			)
		)
		MultiComparer(
			ObjectComparer(
				ObjectProperty(0, Manager)
				Ascending
			)
		)
		SetFunctions(
			DecimalSetFunction(
			COUNT
				StringProperty(0, FirstName)
			)
		)
		LogicalValue(TRUE)
	)
	ObjectComparer(
		ObjectProperty(1, 0)
		Ascending
	)
)

ExpectedResult: 
 ! 0:Object ! 1:Decimal ! 
 | <NULL> | 2 | 
 | 13 | 1 | 

<NEXT>
Description: Offset with where clause.
QueryString: select e from salaryemployee e where salaryint32 > ? offset ?
VariableValues: Int32:10; Int32:1;
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.SalaryEmployee
)
Projection(
	0 = 
		ObjectThis(0)
)
IndexScan(
	SalaryEmployee_SalaryInt32
	0
	SalaryInt32
	IntegerDynamicRange(
		NumericalRangePoint(
			GreaterThan
			NumericalVariable(10)
		)
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | 22 | 

<NEXT>
Description: Offset with simple path expression query
QueryString: select location from department offset ?
VariableValues: Int32:2;
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectProperty(0, Location)
)
IndexScan(
	auto
	0
	Description
	StringDynamicRange(
	)
	LogicalValue(TRUE)
	Ascending
)

ExpectedResult: 
 ! Object ! 
 | <NULL> | 
 | 2 | 

<NEXT>
Description: Offset with join
QueryString: select e1 from SQLTest.EmployeeDb.employee e1, SQLTest.EmployeeDb.employee e2 where e1.hiredate > e2.hiredate and e1.manager = e2.manager fetch ? offset ?
VariableValues: Int32:2; Int32:2;
ShouldBeReordered: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
)
Join(
	Inner
	IndexScan(
		auto
		0
		FirstName
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	FullTableScan(
		1
		LogicalOperation(
			AND
			ComparisonDateTime(
				GreaterThan
				DateTimeProperty(0, HireDate)
				DateTimeProperty(1, HireDate)
			)
			ComparisonObject(
				Equal
				ObjectProperty(0, Manager)
				ObjectProperty(1, Manager)
			)
		)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | 15 | 
 | 21 | 

<NEXT>
Description: Offset with simple path expression query and sorting
QueryString: select location from department order by location offset ?
VariableValues: Int32:2;
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Department
)
Projection(
	0 = 
		ObjectProperty(0, Location)
)
Sort(
	IndexScan(
		auto
		0
		Description
		StringDynamicRange(
		)
		LogicalValue(TRUE)
		Ascending
	)
	ObjectComparer(
		ObjectProperty(0, Location)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | 2 | 
 | 5 | 

<NEXT>
Description: Offset with join and sorting
QueryString: select e1 from SQLTest.EmployeeDb.employee e1, SQLTest.EmployeeDb.employee e2 where e1.hiredate > e2.hiredate and e1.manager = e2.manager order by e1 fetch ? offset ?
VariableValues: Int32:2; Int32:2;
ShouldBeReordered: False
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Employee
	1 = SQLTest.EmployeeDb.Employee
)
Projection(
	0 = 
		ObjectThis(0)
)
Sort(
	Join(
		Inner
		IndexScan(
			auto
			0
			FirstName
			StringDynamicRange(
			)
			LogicalValue(TRUE)
			Ascending
		)
		FullTableScan(
			1
			LogicalOperation(
				AND
				ComparisonDateTime(
					GreaterThan
					DateTimeProperty(0, HireDate)
					DateTimeProperty(1, HireDate)
				)
				ComparisonObject(
					Equal
					ObjectProperty(0, Manager)
					ObjectProperty(1, Manager)
				)
			)
			Ascending
		)
	)
	ObjectComparer(
		ObjectThis(0)
		Ascending
	)
)

ExpectedResult: 
 ! Object ! 
 | 21 | 
 | 22 | 

<NEXT>
Description: Aggregate without grouping
QueryString: select count(Description) from Location where Type > ?
VariableValues: Int16:1;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			StringProperty(0, Description)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 
 | 5 | 

<NEXT>
Description: Aggregate without grouping with fetch, true
QueryString: select count(Type) from Location where Type > ? fetch ?
VariableValues: Int16:1; Int32:2;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			IntegerProperty(0, Type)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 
 | 5 | 

<NEXT>
Description: Aggregate without grouping with fetch, false
QueryString: select count(Type) from Location where Type > ? fetch ?
VariableValues: Int16:1; Int32:0;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			IntegerProperty(0, Type)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 

<NEXT>
Description: Aggregate without grouping with offset, true
QueryString: select count(Name) from Location where Type > ? offset ?
VariableValues: Int16:1; Int32:0;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			StringProperty(0, Name)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 
 | 5 | 

<NEXT>
Description: Aggregate without grouping with offset, false
QueryString: select count(Name) from Location where Type > ? offset ?
VariableValues: Int16:1; Int32:2;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			StringProperty(0, Name)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 

<NEXT>
Description: Aggregate without grouping with fetch and offset, true
QueryString: select count(Description) from Location where Type > ? fetch ? offset ?
VariableValues: Int16:1; Int64:1; Int32:0;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			StringProperty(0, Description)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 
 | 5 | 

<NEXT>
Description: Aggregate without grouping with fetch and offset, false
QueryString: select count(Description) from Location where Type > ? fetch ? offset ?
VariableValues: Int16:1; Int64:2; Int32:2;
IncludesLiteral: True
ExpectedExecutionPlan: 
Tables(
	0 = SQLTest.EmployeeDb.Location
	1 = 
		TemporaryType(
			0 : Decimal
		)
)
Projection(
	0 = 
		DecimalProperty(1, 0)
)
Aggregation(
	1
	IndexScan(
		Location_Type
		0
		Type
		IntegerDynamicRange(
			NumericalRangePoint(
				GreaterThan
				NumericalVariable(1)
			)
		)
		LogicalValue(TRUE)
		Ascending
	)
	MultiComparer(
	)
	SetFunctions(
		DecimalSetFunction(
		COUNT
			StringProperty(0, Description)
		)
	)
	LogicalValue(TRUE)
)

ExpectedResult: 
 ! Decimal ! 
