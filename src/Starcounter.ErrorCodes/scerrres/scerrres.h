#pragma once
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
 *
 */
//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//


//
// Define the severity codes
//


//
// MessageId: SCERRUNSPECIFIED
//
// MessageText:
//
// ScErrUnspecified (SCERR999): An unspecified error caused the operation to fail.%0
//
#define SCERRUNSPECIFIED                 999L

//
// MessageId: SCERRBADARGUMENTS
//
// MessageText:
//
// ScErrBadArguments (SCERR1001): One or more arguments was invalid.%0
//
#define SCERRBADARGUMENTS                1001L

// Runtime error occuring when accessing code that needs to be enhanced in order to work, but for some reason hasn't,
//
// MessageId: SCERRCODENOTENHANCED
//
// MessageText:
//
// ScErrCodeNotEnhanced (SCERR1002): Code not enhanced.%0
//
#define SCERRCODENOTENHANCED             1002L

//
// MessageId: SCERROUTOFMEMORY
//
// MessageText:
//
// ScErrOutOfMemory (SCERR1003): Operation failed because needed memory couldn't be allocated.%0
//
#define SCERROUTOFMEMORY                 1003L

// This can either indicate that the thread is temporarily detached from the scheduler or that it isn't a worker thread. Only certain operations differs between the two.
//
// MessageId: SCERRTHREADNOTATTACHED
//
// MessageText:
//
// ScErrThreadNotAttached (SCERR1004): The operation failed because the current thread wasn't attached to the scheduler.%0
//
#define SCERRTHREADNOTATTACHED           1004L

//
// MessageId: SCERRNOTSUPPORTED
//
// MessageText:
//
// ScErrNotSupported (SCERR1005): The requested operation is not supported on the specific object.%0
//
#define SCERRNOTSUPPORTED                1005L

//
// MessageId: SCERRNOTAWORKERTHREAD
//
// MessageText:
//
// ScErrNotAWorkerThread (SCERR1006): The operation failed because the calling thread isn't a worker thread.%0
//
#define SCERRNOTAWORKERTHREAD            1006L

//
// MessageId: SCERRTHREADNOTDETACHED
//
// MessageText:
//
// ScErrThreadNotDetached (SCERR1007): The operation failed because the current thread was attached to the scheduler and detached thread was expected.%0
//
#define SCERRTHREADNOTDETACHED           1007L

//
// MessageId: SCERRTHREADYIELDBLOCKED
//
// MessageText:
//
// ScErrThreadYieldBlocked (SCERR1008): The operation failed because it required the thread to yield but yield was blocked.%0
//
#define SCERRTHREADYIELDBLOCKED          1008L

//
// MessageId: SCERRCOUNTERMISMATCH
//
// MessageText:
//
// ScErrCounterMismatch (SCERR1009): Generic error code for counter mismatch.%0
//
#define SCERRCOUNTERMISMATCH             1009L

//
// MessageId: SCERRCOUNTEROVERFLOW
//
// MessageText:
//
// ScErrCounterOverflow (SCERR1010): Generic error code for counter overflow.%0
//
#define SCERRCOUNTEROVERFLOW             1010L

//
// MessageId: SCERRSTACKOVERFLOW
//
// MessageText:
//
// ScErrStackOverflow (SCERR1011): A stack overflow has been detected.%0
//
#define SCERRSTACKOVERFLOW               1011L

//
// MessageId: SCERRWAITTIMEOUT
//
// MessageText:
//
// ScErrWaitTimeout (SCERR1012): The wait timed out before the object was signaled.%0
//
#define SCERRWAITTIMEOUT                 1012L

// This error can occur when a large number of worker threads are blocked.
//
// MessageId: SCERRMAXTHREADSREACHED
//
// MessageText:
//
// ScErrMaxThreadsReached (SCERR1013): The operation failed because the maximum number of worker threads has been reached and the operation required the scheduler to create additional worker threads.%0
//
#define SCERRMAXTHREADSREACHED           1013L

//
// MessageId: SCERRCANTCREATEUUID
//
// MessageText:
//
// ScErrCantCreateUuid (SCERR1014): Failed to generate an UUID.%0
//
#define SCERRCANTCREATEUUID              1014L

//
// MessageId: SCERRMUTEXNOTOWNED
//
// MessageText:
//
// ScErrMutexNotOwned (SCERR1016): Operation failed because of an attempt to release ownership of a mutex not owned by the current thread.%0
//
#define SCERRMUTEXNOTOWNED               1016L

//
// MessageId: SCERRWOULDBLOCK
//
// MessageText:
//
// ScErrWouldBlock (SCERR1017): A non blocking operation failed because if would be required to block.%0
//
#define SCERRWOULDBLOCK                  1017L

// A cooperatively scheduled worker thread is considered unresponsive when it hasn't yielded for more then a minute but this error isn't generated unless the thread has been unresponsive for a user configured period of time (2 minutes by default). If a thread is detected to be unresponsive but not long enough for the error to be generated, a warning is generated instead.
// The error is likely caused by an infinite loop or a deadlock but could also be caused by the thread doing something that doesn't give it the opportunity to yield for a very long period of time (which also is a real problem since the stall timeout is configured in minutes).
//
// MessageId: SCERRUNRESPOSIVETHREADSTALL
//
// MessageText:
//
// ScErrUnresposiveThreadStall (SCERR1018): A cooperatively scheduled worker thread has been unresponsive for an unacceptably long period of time.%0
//
#define SCERRUNRESPOSIVETHREADSTALL      1018L

// The error is likely an indication of a deadlock or a highly contested lock held for a very long period of time.
//
// MessageId: SCERRTHREADSBLOCKEDSTALL
//
// MessageText:
//
// ScErrThreadsBlockedStall (SCERR1019): All threads available to the scheduler has been blocked for an unacceptably long period of time.%0
//
#define SCERRTHREADSBLOCKEDSTALL         1019L

// Error currently only raised when exclusive environment ownership hasn't been released when task terminated. This should not occur.
//
// MessageId: SCERRTASKCLEANUPINCOMPLETE
//
// MessageText:
//
// ScErrTaskCleanupIncomplete (SCERR1020): A task still held resource when terminating that should have been released before the task terminated.%0
//
#define SCERRTASKCLEANUPINCOMPLETE       1020L

//
// MessageId: SCERRUNYIELDINGTHREADSTALL
//
// MessageText:
//
// ScErrUnyieldingThreadStall (SCERR1021): A cooperatively scheduled worker thread has been unwilling to yield for an unacceptably long period of time.%0
//
#define SCERRUNYIELDINGTHREADSTALL       1021L

//
// MessageId: SCERRTHREADAUTODETACHED
//
// MessageText:
//
// ScErrThreadAutoDetached (SCERR1022): Use of reattach function for manually detached threads on auto detached thread.%0
//
#define SCERRTHREADAUTODETACHED          1022L

//
// MessageId: SCERRTHREADNOTAUTODETACHED
//
// MessageText:
//
// ScErrThreadNotAutoDetached (SCERR1023): Use of reattach function for auto detached threads on manually detached thread.%0
//
#define SCERRTHREADNOTAUTODETACHED       1023L

//
// MessageId: SCERRDEBUGVERIFYFAILED
//
// MessageText:
//
// ScErrDebugVerifyFailed (SCERR1024): Generic error code indicating that debug verification failed.%0
//
#define SCERRDEBUGVERIFYFAILED           1024L

//
// MessageId: SCERRINVALIDOPERATION
//
// MessageText:
//
// ScErrInvalidOperation (SCERR1025): Operation invalid for the object's current state.%0
//
#define SCERRINVALIDOPERATION            1025L

//
// MessageId: SCERRINPUTQUEUEFULL
//
// MessageText:
//
// ScErrInputQueueFull (SCERR1026): Operation failed because the target input queue was full.%0
//
#define SCERRINPUTQUEUEFULL              1026L

//
// MessageId: SCERRNOTIMPLEMENTED
//
// MessageText:
//
// ScErrNotImplemented (SCERR1027): The method, operation or feature is not implemented.%0
//
#define SCERRNOTIMPLEMENTED              1027L

//
// MessageId: SCERRENVVARIABLENOTACCESSIBLE
//
// MessageText:
//
// ScErrEnvVariableNotAccessible (SCERR1028): Access to an environment variable was not permitted due to the current security settings.%0
//
#define SCERRENVVARIABLENOTACCESSIBLE    1028L

//
// MessageId: SCERRBINDIRENVNOTFOUND
//
// MessageText:
//
// ScErrBinDirEnvNotFound (SCERR1029): The environment variable holding the path to the Starcounter installation directory was not found.%0
//
#define SCERRBINDIRENVNOTFOUND           1029L

//
// MessageId: SCERRBADCOMMANDLINEFORMAT
//
// MessageText:
//
// ScErrBadCommandLineFormat (SCERR1030): The format of the command-line was invalid.%0
//
#define SCERRBADCOMMANDLINEFORMAT        1030L

//
// MessageId: SCERRBADCOMMANDLINESYNTAX
//
// MessageText:
//
// ScErrBadCommandLineSyntax (SCERR1031): Command-line arguments didn't match the defined syntax.%0
//
#define SCERRBADCOMMANDLINESYNTAX        1031L

//
// MessageId: SCERRBADPOSTSHARPLICENSE
//
// MessageText:
//
// ScErrBadPostSharpLicense (SCERR1032): The license key used to initialize the PostSharp library was invalid.%0
//
#define SCERRBADPOSTSHARPLICENSE         1032L

//
// MessageId: SCERRWRONGERRORMESSAGEFORMAT
//
// MessageText:
//
// ScErrWrongErrorMessageFormat (SCERR1033): Parsing an error message string failed due to an incorrect message format.%0
//
#define SCERRWRONGERRORMESSAGEFORMAT     1033L

//
// MessageId: SCERROPERATIONCANCELLED
//
// MessageText:
//
// ScErrOperationCancelled (SCERR1034): The operation was cancelled.%0
//
#define SCERROPERATIONCANCELLED          1034L

//
// MessageId: SCERRAPPALREADYSTARTED
//
// MessageText:
//
// ScErrAppAlreadyStarted (SCERR2001): A Starcounter process with the specified name is already started.%0
//
#define SCERRAPPALREADYSTARTED           2001L

// Applies if the specified directory doesn't exists or is invalid (for example if the specified path indicates a file), or if a base directory isn't specified when one is required.
//
// MessageId: SCERRBADBASEDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadBaseDirectoryConfig (SCERR2002): Base directory (baseDirectory) missing from config or invalid.%0
//
#define SCERRBADBASEDIRECTORYCONFIG      2002L

// Applies if the specified directory doesn't exists or is invalid (for example if the specified path indicates a file).
//
// MessageId: SCERRBADTEMPDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadTempDirectoryConfig (SCERR2003): Temp directory (tempDirectory) missing from config or invalid.%0
//
#define SCERRBADTEMPDIRECTORYCONFIG      2003L

// Applies if the specified directory doesn't exists or is invalid (for example if the specified path indicates a file), or if a image directory isn't specified when one is required.
//
// MessageId: SCERRBADIMAGEDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadImageDirectoryConfig (SCERR2004): Image directory (imageDirectory) missing from config or invalid.%0
//
#define SCERRBADIMAGEDIRECTORYCONFIG     2004L

// Applies if the specified directory doesn't exists or is invalid (for example if the specified path indicates a file), or if a transaction log directory isn't specified when one is required.
//
// MessageId: SCERRBADTLOGDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadTLogDirectoryConfig (SCERR2005): The transaction log directory (transactionLogDirectory) is missing from config or invalid.%0
//
#define SCERRBADTLOGDIRECTORYCONFIG      2005L

//
// MessageId: SCERRCANTINITIALIZECLR
//
// MessageText:
//
// ScErrCantInitializeClr (SCERR2012): Unable to initialize the CLR.%0
//
#define SCERRCANTINITIALIZECLR           2012L

//
// MessageId: SCERRCANTLOADHOSTENVIRONMENT
//
// MessageText:
//
// ScErrCantLoadHostEnvironment (SCERR2013): Unable to load host environment.%0
//
#define SCERRCANTLOADHOSTENVIRONMENT     2013L

// Most likely caused by a faulty installation.
//
// MessageId: SCERRLOGMODULENOTFOUND
//
// MessageText:
//
// ScErrLogModuleNotFound (SCERR2014): The operation failed because sccorelog.dll or one of the functions it exports couldn't be loaded.%0
//
#define SCERRLOGMODULENOTFOUND           2014L

//
// MessageId: SCERRIMAGESTORAGEMISMATCH
//
// MessageText:
//
// ScErrImageStorageMismatch (SCERR2015): The properties of the different disk drives used to store the image files don't have compatible configuration (do they have the same sector sizes?).%0
//
#define SCERRIMAGESTORAGEMISMATCH        2015L

//
// MessageId: SCERRIMAGESTORAGEINCOMPATIBLE
//
// MessageText:
//
// ScErrImageStorageIncompatible (SCERR2016): The properties of the disk drive doesn't match the database image (is the disk drive is configured for a different sector size than the image is built for?).%0
//
#define SCERRIMAGESTORAGEINCOMPATIBLE    2016L

//
// MessageId: SCERRWRONGDATABASEVERSION
//
// MessageText:
//
// ScErrWrongDatabaseVersion (SCERR2017): The database files are build for a different Starcounter version and are not compatible with the current version.%0
//
#define SCERRWRONGDATABASEVERSION        2017L

// This error code is obsolete in current version.
//
// MessageId: SCERRCANTGETPRIVILEGESNEEDED
//
// MessageText:
//
// ScErrCantGetPrivilegesNeeded (SCERR2018): Could not acquire the privileges needed for the operation to complete successfully.%0
//
#define SCERRCANTGETPRIVILEGESNEEDED     2018L

// This means that one of the image files, the transaction log or all three files were created for different databases.
//
// MessageId: SCERRDATABASEFILEMISMATCH
//
// MessageText:
//
// ScErrDatabaseFileMismatch (SCERR2022): Attempt to load database files from different databases was detected.%0
//
#define SCERRDATABASEFILEMISMATCH        2022L

//
// MessageId: SCERRDATABASELANGUNSUPPORTED
//
// MessageText:
//
// ScErrDatabaseLangUnsupported (SCERR2023): One of more of the languages the database is configured for isn't supported by the current system.%0
//
#define SCERRDATABASELANGUNSUPPORTED     2023L

// General error produced by the code loader component. This error indicates that an operation during startup requiered some code to be accessed via the .NET reflection engine and that the loader cound not satisfy the request because of an error fetching the needed data. This usually indicates version mismatches or missing pe-files in the runtime library. The error lines up with one (or several) more specific errors. The later contains more detailed information about what specific code that couldnt load and can be found in the error log. This error ends up in the critical log (causing the database to fail startup). A corresponding and more specific error at the same time is written to the error log, describing what assembly failed and how to get even more error information.
//
// MessageId: SCERRCODELOADERERROR
//
// MessageText:
//
// ScErrCodeLoaderError (SCERR2027): Code loder error.%0
//
#define SCERRCODELOADERERROR             2027L

// The code loader requested to iterate types in a given (loaded) assembly, but this operation resulted in an error. This usually indicates some kind of reference error where one assembly or module references (direct or indirect) a type that was implied for the former to load properly. Results in a code loader error in the critical error log. See about this above. In companion with this error, Starcounter writes out what assembly failed to load. This might be enough for the developer, but if it isn't, even more information is availible. To get this additional and extended error information, the error in the error log comes equipped with a reference number (in the form of a GUID). This reference number can be used to find the information lining up with the given exception. To search for this information by reference, consult the Starcounter.Notice log. In the complementary log the following can be found:
// - Number of types declared in the failing assembly, and how many of these that wheren't possible to load.
// - Which of the above types that was possible to load (and from that, it should be clear which ones could not)
// - The full set of assemblies currently loaded into the database.
// - Exception messages (including file name of the target) for each type in the faulty assembly, indicating the broken link.
// - Fusion log for each exception message above.
//
// MessageId: SCERRTYPESLOADERROR
//
// MessageText:
//
// ScErrTypesLoadError (SCERR2029): Error inspecting assembly.%0
//
#define SCERRTYPESLOADERROR              2029L

// All specific weaver related errors use this general weaving error as an umbrella to communicate their existence to the user. That is, this general weaving error will be found in the critical logging branch of errors and all specific errors will be found in the extended error logging system (the error log). When this error is found in the critical error log, consult the error log for a corresponding ScErrWeavingFailed error. That error will head a list of more specific errors that are the real source for this error.
//
// MessageId: SCERRWEAVINGERROR
//
// MessageText:
//
// ScErrWeavingError (SCERR2030): At least one error has been detected during weaving of the application code.%0
//
#define SCERRWEAVINGERROR                2030L

// Indicates that the specified server name is to long (a server name is currently limited to 31 characters) or contains invalid characters.
//
// MessageId: SCERRINVALIDSERVERNAME
//
// MessageText:
//
// ScErrInvalidServerName (SCERR2031): The server name is too long (max 31 chars) or contains invalid characters.%0
//
#define SCERRINVALIDSERVERNAME           2031L

// The shutdown thread got stuck in user code and was aborted.
//
// MessageId: SCERRSHUTDOWNTIMEDOUT
//
// MessageText:
//
// ScErrShutdownTimedOut (SCERR2032): Shutdown timed out: Stuck in user code.%0
//
#define SCERRSHUTDOWNTIMEDOUT            2032L

// Indicates that the configured number of virtual CPUs wasn't supported. Currently no more than 4 virtual CPUs is supported in the x64 version and no more then a 1 virtual CPU is supported in the x86 version.
//
// MessageId: SCERRBADSCHEDCOUNTCONFIG
//
// MessageText:
//
// ScErrBadSchedCountConfig (SCERR2035): Too many virtual CPUs configured.%0
//
#define SCERRBADSCHEDCOUNTCONFIG         2035L

// The transaction log file is versioned and must match the version of the loading transaction logging runtime library when the database is started. If versions differ, this error will be in the error log and the database will fail to load.
//
// MessageId: SCERRWRONGTLOGVERSION
//
// MessageText:
//
// ScErrWrongTLogVersion (SCERR2036): Wrong transaction log version.%0
//
#define SCERRWRONGTLOGVERSION            2036L

// Configuration given for either an unload operation or a reload counterpart violated some constraint. What type of operation (unload/reload) the error originated from will be indicated by the context, a parachute error for respective routine.
// In current version, all configuration is done internally so this error should not occur. In previous versions it could occur because of bad settings in configuration for unload/reload.
//
// MessageId: SCERRBADREBUILDCONFIG
//
// MessageText:
//
// ScErrBadRebuildConfig (SCERR2037): Bad unload/reload configuration.%0
//
#define SCERRBADREBUILDCONFIG            2037L

//
// MessageId: SCERRBADTLOGSIZECONFIG
//
// MessageText:
//
// ScErrBadTLogSizeConfig (SCERR2043): The specified transaction log size is either smaller then the minimum size, larger then the maximum size or not aligned with the disk sector size.%0
//
#define SCERRBADTLOGSIZECONFIG           2043L

//
// MessageId: SCERRBADDISKSECTORSIZECONFIG
//
// MessageText:
//
// ScErrBadDiskSectorSizeConfig (SCERR2044): The specified disk sector size is not compatible with storage.%0
//
#define SCERRBADDISKSECTORSIZECONFIG     2044L

//
// MessageId: SCERRSHRINKIMAGENOTSUPPORTED
//
// MessageText:
//
// ScErrShrinkImageNotSupported (SCERR2045): The specified new image size is smaller then the current image size. Making the image smaller is not allowed.%0
//
#define SCERRSHRINKIMAGENOTSUPPORTED     2045L

//
// MessageId: SCERRBADIMAGESIZECONFIG
//
// MessageText:
//
// ScErrBadImageSizeConfig (SCERR2046): The specified image size is either smaller then the minimum size, larger then the maximum size or not aligned with the database block size.%0
//
#define SCERRBADIMAGESIZECONFIG          2046L

//
// MessageId: SCERRDATABASEALREADYEXISTS
//
// MessageText:
//
// ScErrDatabaseAlreadyExists (SCERR2047): A database with the specified name already exists.%0
//
#define SCERRDATABASEALREADYEXISTS       2047L

// Most likely caused by a faulty installation.
//
// MessageId: SCERRMODULENOTFOUND
//
// MessageText:
//
// ScErrModuleNotFound (SCERR2048): The operation failed because an expected DLL module couldn't be loaded.%0
//
#define SCERRMODULENOTFOUND              2048L

// Consult the system error code to find out more about what failed.
//
// MessageId: SCERRPARSINGAPPARGS
//
// MessageText:
//
// ScErrParsingAppArgs (SCERR2049): When parsing the application arguments to scdbs.exe, the system routine parsing it reported an error.%0
//
#define SCERRPARSINGAPPARGS              2049L

// Consult the documentation to see what arguments Starcounter encforces, accepts and what constraints apply.
//
// MessageId: SCERRTOOFEWAPPARGS
//
// MessageText:
//
// ScErrTooFewAppArgs (SCERR2050): The number of arguments passed to scdbs.exe did not include all arguments required.%0
//
#define SCERRTOOFEWAPPARGS               2050L

// Consult the documentation to see what arguments Starcounter encforces, accepts and what constraints apply.
//
// MessageId: SCERRAPPARGSSEMANTICVIOLATION
//
// MessageText:
//
// ScErrAppArgsSemanticViolation (SCERR2051): All arguments passed to scdbs.exe did not confirm to the constraints, or some of them were found incompatible.%0
//
#define SCERRAPPARGSSEMANTICVIOLATION    2051L

//
// MessageId: SCERRUNLOADEMPTYDATABASE
//
// MessageText:
//
// ScErrUnloadEmptyDatabase (SCERR2052): The -unload directive specified as a server application argument can not be used when the database is empty and not initialized.%0
//
#define SCERRUNLOADEMPTYDATABASE         2052L

//
// MessageId: SCERRRLDPOPULATEDDATABASE
//
// MessageText:
//
// ScErrRldPopulatedDatabase (SCERR2053): The -reload directive specified as a server application argument can not be used when the database is allready populated.%0
//
#define SCERRRLDPOPULATEDDATABASE        2053L

// Most likely caused by a faulty installation.
//
// MessageId: SCERRFUNCEXPORTNOTFOUND
//
// MessageText:
//
// ScErrFuncExportNotFound (SCERR2054): The operation failed because an expected function export from a module dependent upon was not found.%0
//
#define SCERRFUNCEXPORTNOTFOUND          2054L

// Backup directory is currently the same as output directory.
//
// MessageId: SCERRBADBACKUPDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadBackupDirectoryConfig (SCERR2055): Bad backup directory config. Either the configured directory does not exist or the directory path is to long.%0
//
#define SCERRBADBACKUPDIRECTORYCONFIG    2055L

//
// MessageId: SCERRBADLOGDIRECTORYCONFIG
//
// MessageText:
//
// ScErrBadLogDirectoryConfig (SCERR2056): Bad log directory config. Either the configuration does not exist or the configured directory isn't valid.%0
//
#define SCERRBADLOGDIRECTORYCONFIG       2056L

//
// MessageId: SCERRCOMPAREEMPTYDATABASE
//
// MessageText:
//
// ScErrCompareEmptyDatabase (SCERR2057): The server was started, instructed to execute a compare of application and core schemas, and when the database was examined, the server detected it to not being bound to any previous application, i.e. containing no schema.%0
//
#define SCERRCOMPAREEMPTYDATABASE        2057L

// The transaction/redo log is considered uninitialized after it has been created and before it has successfully been started at least once.
//
// MessageId: SCERRTLOGNOTINITIALIZED
//
// MessageText:
//
// ScErrTLogNotInitialized (SCERR2058): An operation failed due to the transaction/redo log not being initialized.%0
//
#define SCERRTLOGNOTINITIALIZED          2058L

// Error occurs if unable to acquire the shared object used to control ownership of the database environment on startup.
// Could indicate that the memory manager is unresponsive (scpmm.exe). Try again after terminating this process.
//
// MessageId: SCERRACQUIREDBCONTROLTIMEOUT
//
// MessageText:
//
// ScErrAcquireDbControlTimeOut (SCERR2059): Attempt to acquire control of the database environment timed out.%0
//
#define SCERRACQUIREDBCONTROLTIMEOUT     2059L

// Error occurs if unable create activity monitor shared buffer timed out.
// Could indicate that the activity monitor is unresponsive (scactmon.exe) and has therefore not released the buffer. Try again after terminating the process.
//
// MessageId: SCERRCREATEACTMONBUFTIMEOUT
//
// MessageText:
//
// ScErrCreateActMonBufTimeOut (SCERR2060): Attempt to create activity monitor shared buffer timed out.%0
//
#define SCERRCREATEACTMONBUFTIMEOUT      2060L

// Check so that the user that runs the database or server has the priviledge to create/open globally named objects, "SeCreateGlobalPrivilege".
// Corresponds to windows error ERROR_ACCESS_DENIED.
//
// MessageId: SCERRDBSTATEACCESSDENIED
//
// MessageText:
//
// ScErrDbStateAccessDenied (SCERR2061): Allocating shared memory for database state failed. Access was denied.%0
//
#define SCERRDBSTATEACCESSDENIED         2061L

//
// MessageId: SCERRBADIMAGEFILECKSUMLOAD
//
// MessageText:
//
// ScErrBadImageFileCksumLoad (SCERR2063): Checksum mismatch detected in image file when image file was loaded into memory.%0
//
#define SCERRBADIMAGEFILECKSUMLOAD       2063L

// When the client runtime was trying to load the library that communicates with Starcounter databases, a library with the same name ("sccoredb") was found already loaded.
//
// MessageId: SCERRCLIENTBACKENDALREADYLOADED
//
// MessageText:
//
// ScErrClientBackendAlreadyLoaded (SCERR2064): Client application communication library was already loaded.%0
//
#define SCERRCLIENTBACKENDALREADYLOADED  2064L

// When the client runtime was trying to load the library that communicates with Starcounter databases, the library was not found loaded after initialization.
//
// MessageId: SCERRCLIENTBACKENDNOTLOADED
//
// MessageText:
//
// ScErrClientBackendNotLoaded (SCERR2065): Client application communication library failed to load.%0
//
#define SCERRCLIENTBACKENDNOTLOADED      2065L

// When the client runtime was trying to load the library that communicates with Starcounter databases, the library was found loaded from the wrong path.
//
// MessageId: SCERRCLIENTBACKENDWRONGPATH
//
// MessageText:
//
// ScErrClientBackendWrongPath (SCERR2066): Client application communication library was loaded from the wrong path.%0
//
#define SCERRCLIENTBACKENDWRONGPATH      2066L

// Shared memory monitor process is started by each Starcounter server and is used to correctly free clients' shared memory resources.
//
// MessageId: SCERRSTARTSHAREDMEMORYMONITOR
//
// MessageText:
//
// ScErrStartSharedMemoryMonitor (SCERR2067): Problems starting shared memory monitor process.%0
//
#define SCERRSTARTSHAREDMEMORYMONITOR    2067L

//
// MessageId: SCERRWEAVERPROJECTFILENOTFOUND
//
// MessageText:
//
// ScErrWeaverProjectFileNotFound (SCERR2068): A project file the weaver engine depends on could not be found. Either it was deleted or the program hosting the weaver did not resolve its path to the correct installation directory.%0
//
#define SCERRWEAVERPROJECTFILENOTFOUND   2068L

//
// MessageId: SCERRCONSTRUCTDBSHMPARAMNAME
//
// MessageText:
//
// ScErrConstructDbShmParamName (SCERR2069): The database intends to open the database shared memory parameters, but failed when trying to concatenate the database name prefix with the database name.%0
//
#define SCERRCONSTRUCTDBSHMPARAMNAME     2069L

//
// MessageId: SCERRDBDATADIRPATHINVALIDMBCHAR
//
// MessageText:
//
// ScErrDbDataDirPathInvalidMBChar (SCERR2070): The database intends to open the shared memory object with the database shared memory parameters, but failed because of an illegal char in the db_data_dir_path in the psetup parameter.%0
//
#define SCERRDBDATADIRPATHINVALIDMBCHAR  2070L

//
// MessageId: SCERRDBSHMPARAMNAMEINVALIDWCHAR
//
// MessageText:
//
// ScErrDbShmParamNameInvalidWChar (SCERR2071): The database intends to open the shared memory object with the database shared memory parameters, but failed because a wide character that cannot be converted into a multibyte character was encountered.%0
//
#define SCERRDBSHMPARAMNAMEINVALIDWCHAR  2071L

//
// MessageId: SCERRCONSTRUCTSEGMENTNAMESEQNO
//
// MessageText:
//
// ScErrConstructSegmentNameSeqNo (SCERR2075): Failed to construct the segment name with sequence number.%0
//
#define SCERRCONSTRUCTSEGMENTNAMESEQNO   2075L

//
// MessageId: SCERRSEGMENTNAMEINVALIDWCHAR
//
// MessageText:
//
// ScErrSegmentNameInvalidWChar (SCERR2076): The database intends to get the sequence number and append it to the segment name, but failed because a wide character that cannot be converted into a multibyte character was encountered.%0
//
#define SCERRSEGMENTNAMEINVALIDWCHAR     2076L

//
// MessageId: SCERRCONSTRMONITORINTERFACENAME
//
// MessageText:
//
// ScErrConstrMonitorInterfaceName (SCERR2077): The database intends to register with the monitor, but it failed because constructing the monitor interface name would result in buffer overflow.%0
//
#define SCERRCONSTRMONITORINTERFACENAME  2077L

//
// MessageId: SCERRDBMAPMONITORINTERFACEINSHM
//
// MessageText:
//
// ScErrDbMapMonitorInterfaceInShm (SCERR2078): The database intends to register with the monitor, but failed to map the monitor interface in shared memory.%0
//
#define SCERRDBMAPMONITORINTERFACEINSHM  2078L

//
// MessageId: SCERRDBACQUIREOWNERID
//
// MessageText:
//
// ScErrDBAcquireOwnerID (SCERR2080): The database tried to register with the monitor, but failed to acquire an owner ID.%0
//
#define SCERRDBACQUIREOWNERID            2080L

//
// MessageId: SCERRCCONSTRUCTDBSHMPARAMNAME
//
// MessageText:
//
// ScErrCConstructDbShmParamName (SCERR2081): The client intends to open the database shared memory parameters, but failed when trying to concatenate the database name prefix with the database name.%0
//
#define SCERRCCONSTRUCTDBSHMPARAMNAME    2081L

//
// MessageId: SCERRCCONSTRMONITORINTERFACENAME
//
// MessageText:
//
// ScErrCConstrMonitorInterfaceName (SCERR2082): The client intends to register with the monitor, but failed because constructing the monitor interface name would result in buffer overflow.%0
//
#define SCERRCCONSTRMONITORINTERFACENAME 2082L

//
// MessageId: SCERRCACQUIREOWNERID
//
// MessageText:
//
// ScErrCAcquireOwnerID (SCERR2083): The client tried to register with the monitor, but failed to acquire an owner ID.%0
//
#define SCERRCACQUIREOWNERID             2083L

//
// MessageId: SCERRCLIENTOPENDBSHMSEGMENT
//
// MessageText:
//
// ScErrClientOpenDbShmSegment (SCERR2084): The client intends to open the database shared memory segment, but failed because it is not initialized yet.%0
//
#define SCERRCLIENTOPENDBSHMSEGMENT      2084L

//
// MessageId: SCERRCCONSTRDBSHMSEGMENTNAME
//
// MessageText:
//
// ScErrCConstrDbShmSegmentName (SCERR2085): The client intends to open the database shared memory segment, but failed because constructing the name of the database shared memory segment would result in buffer overflow.%0
//
#define SCERRCCONSTRDBSHMSEGMENTNAME     2085L

//
// MessageId: SCERRCLIENTACQUIRECLIENTNUMBER
//
// MessageText:
//
// ScErrClientAcquireClientNumber (SCERR2086): The client failed to initialize because it could not acquire a client number.%0
//
#define SCERRCLIENTACQUIRECLIENTNUMBER   2086L

//
// MessageId: SCERRUNKNOWNEXCEPTTHROWNINSETUP
//
// MessageText:
//
// ScErrUnknownExceptThrownInSetup (SCERR2087): An unknown exception was thrown by the database when trying something in the call to setup during the initialization phase.%0
//
#define SCERRUNKNOWNEXCEPTTHROWNINSETUP  2087L

// If there is no monitor (ScConnMonitor.exe) running in the same terminal server session as the database process, this is likely the cause of the error. If the database is to be started in session 0, it may help to start the Starcounter System Server service. If the database is to be started in session 1, it may help to start the Starcounter Administrator.
//
// MessageId: SCERRDBOPENMONITORINTERFACE
//
// MessageText:
//
// ScErrDbOpenMonitorInterface (SCERR2088): The database intends to register with the monitor, but it failed to open the monitor interface.%0
//
#define SCERRDBOPENMONITORINTERFACE      2088L

//
// MessageId: SCERRDBCREATEDBSHMPARAMETERS
//
// MessageText:
//
// ScErrDbCreateDbShmParameters (SCERR2089): The database failed to create the database shared memory parameters file.%0
//
#define SCERRDBCREATEDBSHMPARAMETERS     2089L

//
// MessageId: SCERRCREATEDBSHMPARAMETERS
//
// MessageText:
//
// ScErrCreateDbShmParameters (SCERR2090): Failed to create the database shared memory parameters file.%0
//
#define SCERRCREATEDBSHMPARAMETERS       2090L

//
// MessageId: SCERROPENDBSHMPARAMETERS
//
// MessageText:
//
// ScErrOpenDbShmParameters (SCERR2091): Failed to open the database shared memory parameters file.%0
//
#define SCERROPENDBSHMPARAMETERS         2091L

//
// MessageId: SCERRMAPDBSHMPARAMETERSINSHM
//
// MessageText:
//
// ScErrMapDbShmParametersInShm (SCERR2092): Failed to map the database shared memory parameters in shared memory.%0
//
#define SCERRMAPDBSHMPARAMETERSINSHM     2092L

//
// MessageId: SCERROPENMONITORINTERFACE
//
// MessageText:
//
// ScErrOpenMonitorInterface (SCERR2094): Failed to open monitor interface.%0
//
#define SCERROPENMONITORINTERFACE        2094L

//
// MessageId: SCERRMAPMONITORINTERFACEINSHM
//
// MessageText:
//
// ScErrMapMonitorInterfaceInShm (SCERR2095): Failed to map monitor interface in shared memory.%0
//
#define SCERRMAPMONITORINTERFACEINSHM    2095L

//
// MessageId: SCERRDBMAPDBSHMPARAMETERSINSHM
//
// MessageText:
//
// ScErrDbMapDbShmParametersInShm (SCERR2096): The database failed to map the database shared memory parameters in shared memory.%0
//
#define SCERRDBMAPDBSHMPARAMETERSINSHM   2096L

//
// MessageId: SCERRCOPENDBSHMPARAMETERS
//
// MessageText:
//
// ScErrCOpenDbShmParameters (SCERR2097): The client failed to open the database shared memory parameters file.%0
//
#define SCERRCOPENDBSHMPARAMETERS        2097L

//
// MessageId: SCERRCMAPDBSHMPARAMETERSINSHM
//
// MessageText:
//
// ScErrCMapDbShmParametersInShm (SCERR2098): The client failed to map the database shared memory parameters in shared memory.%0
//
#define SCERRCMAPDBSHMPARAMETERSINSHM    2098L

//
// MessageId: SCERRDBOPENDEBUGFILE
//
// MessageText:
//
// ScErrDbOpenDebugFile (SCERR2099): The database failed to open the debug file.%0
//
#define SCERRDBOPENDEBUGFILE             2099L

//
// MessageId: SCERRDBRELEASEOWNERID
//
// MessageText:
//
// ScErrDbReleaseOwnerID (SCERR2100): The database tried to unregister with the monitor, but failed to release its owner ID.%0
//
#define SCERRDBRELEASEOWNERID            2100L

//
// MessageId: SCERRCRELEASEOWNERID
//
// MessageText:
//
// ScErrCReleaseOwnerID (SCERR2101): The client tried to unregister with the monitor, but failed to release its owner ID.%0
//
#define SCERRCRELEASEOWNERID             2101L

//
// MessageId: SCERRDBACQUIREOWNERIDTIMEOUT
//
// MessageText:
//
// ScErrDbAcquireOwnerIDTimeout (SCERR2102): The database tried to register with the monitor, but failed to acquire an owner ID because a timeout occurred.%0
//
#define SCERRDBACQUIREOWNERIDTIMEOUT     2102L

//
// MessageId: SCERRCACQUIREOWNERIDTIMEOUT
//
// MessageText:
//
// ScErrCAcquireOwnerIDTimeout (SCERR2103): The client tried to register with the monitor, but failed to acquire an owner ID because a timeout occurred.%0
//
#define SCERRCACQUIREOWNERIDTIMEOUT      2103L

//
// MessageId: SCERRDBRELEASEOWNERIDTIMEOUT
//
// MessageText:
//
// ScErrDbReleaseOwnerIDTimeout (SCERR2104): The database tried to unregister with the monitor, but failed to release its owner ID because a timeout occurred.%0
//
#define SCERRDBRELEASEOWNERIDTIMEOUT     2104L

//
// MessageId: SCERRCRELEASEOWNERIDTIMEOUT
//
// MessageText:
//
// ScErrCReleaseOwnerIDTimeout (SCERR2105): The client tried to unregister with the monitor, but failed to release its owner ID because a timeout occurred.%0
//
#define SCERRCRELEASEOWNERIDTIMEOUT      2105L

// You can queue a job on scheduler with id from 0 to n-1, where n is a number of logical processors in the system.
//
// MessageId: SCERRBADSCHEDIDSUPPLIED
//
// MessageText:
//
// ScErrBadSchedIdSupplied (SCERR2106): Trying to queue a job on scheduler with incorrect id.%0
//
#define SCERRBADSCHEDIDSUPPLIED          2106L

//
// MessageId: SCERRCACQUIREOWNERIDTIMEOUT2
//
// MessageText:
//
// ScErrCAcquireOwnerIDTimeout2 (SCERR2107): The client tried to register with the monitor, but failed to acquire an owner ID because a timeout occurred.%0
//
#define SCERRCACQUIREOWNERIDTIMEOUT2     2107L

//
// MessageId: SCERRDBALREADYSTARTED
//
// MessageText:
//
// ScErrDbAlreadyStarted (SCERR2108): A Starcounter database with the specified name is already started.%0
//
#define SCERRDBALREADYSTARTED            2108L

// Generic error indicating that the configuration of a database is invalid preventing the database from being accessible.
//
// MessageId: SCERRBADDATABASECONFIG
//
// MessageText:
//
// ScErrBadDatabaseConfig (SCERR2109): Invalid configuration prevents the database from being accessible.%0
//
#define SCERRBADDATABASECONFIG           2109L

// Network gateway process is started by each Starcounter server and is used to provide communication for Starcounter with outside world.
//
// MessageId: SCERRSTARTNETWORKGATEWAY
//
// MessageText:
//
// ScErrStartNetworkGateway (SCERR2110): Problems starting network gateway process.%0
//
#define SCERRSTARTNETWORKGATEWAY         2110L

//
// MessageId: SCERRBADCHUNKSNUMBERCONFIG
//
// MessageText:
//
// ScErrBadChunksNumberConfig (SCERR2111): Shared memory chunks number is missing in database configuration file or has invalid value.%0
//
#define SCERRBADCHUNKSNUMBERCONFIG       2111L

//
// MessageId: SCERRTLOGSTORAGEINCOMPATIBLE
//
// MessageText:
//
// ScErrTLogStorageIncompatible (SCERR2112): The properties of the disk drive doesn't match the transaction log (is the disk drive is configured for a different sector size than the transaction log is built for?).%0
//
#define SCERRTLOGSTORAGEINCOMPATIBLE     2112L

// Usually implies that the object referenced by the handle has been freed.
//
// MessageId: SCERRINVALIDHANDLE
//
// MessageText:
//
// ScErrInvalidHandle (SCERR3001): The specified handle is invalid.%0
//
#define SCERRINVALIDHANDLE               3001L

//
// MessageId: SCERRNOUSERADAPTERREFERENCES
//
// MessageText:
//
// ScErrNoUserAdapterReferences (SCERR3002): Attempt to release a user reference to an adapter failed because no user references was registered.%0
//
#define SCERRNOUSERADAPTERREFERENCES     3002L

// Error is raised when configuring a channel. This is usually done using values from named port configuration (I/O handler configuration) but if so, configuration should already have been validated and this error should not occur.
//
// MessageId: SCERRBADCHANNELOPTIONVALUE
//
// MessageText:
//
// ScErrBadChannelOptionValue (SCERR3003): Operation to set an option failed because the value of an option couldn't be set to the specified value.%0
//
#define SCERRBADCHANNELOPTIONVALUE       3003L

//
// MessageId: SCERRCANTLOCKMEMORY
//
// MessageText:
//
// ScErrCantLockMemory (SCERR3006): The operation couldn't be completed because memory couldn't be locked.%0
//
#define SCERRCANTLOCKMEMORY              3006L

//
// MessageId: SCERRCHANNELCLOSED
//
// MessageText:
//
// ScErrChannelClosed (SCERR3010): Operation couldn't be completed because the channel has been closed.%0
//
#define SCERRCHANNELCLOSED               3010L

// A new read operation can not be posted and certain options can not be set until the operation has completed.
//
// MessageId: SCERRCHANNELREADING
//
// MessageText:
//
// ScErrChannelReading (SCERR3011): Operation failed because an read has been posted and pending completion.%0
//
#define SCERRCHANNELREADING              3011L

//
// MessageId: SCERRCONNECTTIMEDOUT
//
// MessageText:
//
// ScErrConnectTimedOut (SCERR3012): Connection timed out because the remote party didn't respond within an acceptable abount of time.%0
//
#define SCERRCONNECTTIMEDOUT             3012L

// This is usually the result when communication could be established with the remote system but the current system wasn't excepted as a client. An example is when trying to connect to a specific port and address and the addressed system was found but no one was accepting connection requests on that port.
//
// MessageId: SCERRCONNECTIONREFUSED
//
// MessageText:
//
// ScErrConnectionRefused (SCERR3013): A connection to a remote endpoint could not be established because the target system actively refused it.%0
//
#define SCERRCONNECTIONREFUSED           3013L

// Operation failed because the channel couldn't be bound to the specified end point since it wasn't a valid end point.
//
// MessageId: SCERRENDPOINTINVALID
//
// MessageText:
//
// ScErrEndPointInvalid (SCERR3014): Tried to bind to an invalid endpoint%0
//
#define SCERRENDPOINTINVALID             3014L

// Operation failed because the a channel couldn't be bound to the specified end point since it already was occupied.
//
// MessageId: SCERRENDPOINTOCCUPIED
//
// MessageText:
//
// ScErrEndPointOccupied (SCERR3015): The endpoint is occupied%0
//
#define SCERRENDPOINTOCCUPIED            3015L

// A connection couldn't be established because the specified end point couldn't be reached. When this error occurs it's probably because the current machine isn't connected to a network or only connected to a local network.
//
// MessageId: SCERRENDPOINTUNREACHABLE
//
// MessageText:
//
// ScErrEndPointUnreachable (SCERR3016): The endpoint couldn't be reached.%0
//
#define SCERRENDPOINTUNREACHABLE         3016L

//
// MessageId: SCERRLISTENERCLOSED
//
// MessageText:
//
// ScErrListenerClosed (SCERR3018): Operation couldn't be completed because the listener has been closed.%0
//
#define SCERRLISTENERCLOSED              3018L

//
// MessageId: SCERRREADBUFFEREXCEEDED
//
// MessageText:
//
// ScErrReadBufferExceeded (SCERR3019): Channel read operation failed because the message received was larger than allowed.%0
//
#define SCERRREADBUFFEREXCEEDED          3019L

//
// MessageId: SCERRTOMANYADAPTERREFERENCES
//
// MessageText:
//
// ScErrToManyAdapterReferences (SCERR3020): Operation could not be completed because there the limit of references to the accessed I/O adapter has been reached.%0
//
#define SCERRTOMANYADAPTERREFERENCES     3020L

// This error occurs when trying to write a message containing 0 value bytes when 0 bytes is used as message terminator.
//
// MessageId: SCERRUNWRITABLEMESSAGE
//
// MessageText:
//
// ScErrUnwritableMessage (SCERR3021): Operation couldn't be completed because the contents of the message couldn't be sent through a channel.%0
//
#define SCERRUNWRITABLEMESSAGE           3021L

//
// MessageId: SCERRLOGSCONNECTIONCLOSED
//
// MessageText:
//
// ScErrLogsConnectionClosed (SCERR3022): Connection to log server closed.%0
//
#define SCERRLOGSCONNECTIONCLOSED        3022L

//
// MessageId: SCERRUNKNOWNCHANNELOPTION
//
// MessageText:
//
// ScErrUnknownChannelOption (SCERR3023): Operation failed because no option with the specified name was availible.%0
//
#define SCERRUNKNOWNCHANNELOPTION        3023L

// Operation couldn't be completed because the contents of a message being read from by a channel couldn't be interpreted by the channel. Indicates that a message of an invalid format was passed to the process. The channel is closed when this error is detected since the input stream must be considered corrupted.
//
// MessageId: SCERRUNREADABLEMESSAGE
//
// MessageText:
//
// ScErrUnreadableMessage (SCERR3024): Received a malformed message%0
//
#define SCERRUNREADABLEMESSAGE           3024L

//
// MessageId: SCERROBJECTNOTOWNED
//
// MessageText:
//
// ScErrObjectNotOwned (SCERR3025): An operation failed because the object that only allows access by the owning thread wasn't owned by the current thread.%0
//
#define SCERROBJECTNOTOWNED              3025L

// Another process holds the memory file open. Could be a conflict with a client application reading server statistics although if the client application is properly implemented this is highly unlikely. In this case the issues should be resolved by trying again to start the server.
//
// MessageId: SCERRCANTCREATEPROCESSSHARE
//
// MessageText:
//
// ScErrCantCreateProcessShare (SCERR3026): The memory file used to share server information already existed and the process could therefore not claim ownership of the object.%0
//
#define SCERRCANTCREATEPROCESSSHARE      3026L

//
// MessageId: SCERRCANTOPENPROCESSSHARE
//
// MessageText:
//
// ScErrCantOpenProcessShare (SCERR3027): The memory file used to share server information could not be opened. Most likely an indication that the server with the specified name isn't online.%0
//
#define SCERRCANTOPENPROCESSSHARE        3027L

//
// MessageId: SCERRCANTCREATEADAPTER
//
// MessageText:
//
// ScErrCantCreateAdapter (SCERR3029): Operation could not complete because of failure to create an I/O adapter. Occurs when the maximum number of I/O adapters has been reached.%0
//
#define SCERRCANTCREATEADAPTER           3029L

//
// MessageId: SCERRNOTENOUGHDISKSPACE
//
// MessageText:
//
// ScErrNotEnoughDiskSpace (SCERR3031): Operation failed due to insufficient disk space.%0
//
#define SCERRNOTENOUGHDISKSPACE          3031L

//
// MessageId: SCERRBADPROCESSSHAREVERSION
//
// MessageText:
//
// ScErrBadProcessShareVersion (SCERR3032): The memory file used to share server information was of an incompatible version.%0
//
#define SCERRBADPROCESSSHAREVERSION      3032L

//
// MessageId: SCERRCTIMEOUTPUSHREQUESTMESSAGE
//
// MessageText:
//
// ScErrCTimeoutPushRequestMessage (SCERR3033): A timeout occurred because the client could not push a request message to the channels in queue, because it is full. The database have not popped any request message from the channel within the timeout period.%0
//
#define SCERRCTIMEOUTPUSHREQUESTMESSAGE  3033L

//
// MessageId: SCERRCTIMEOUTPOPRESPONSEMESSAGE
//
// MessageText:
//
// ScErrCTimeoutPopResponseMessage (SCERR3034): A timeout occurred because the client could not pop a response message from the channels out queue, because it is empty. The database have not pushed any response message to the channel within the timeout period.%0
//
#define SCERRCTIMEOUTPOPRESPONSEMESSAGE  3034L

//
// MessageId: SCERRDATABASEISNOTLOADED
//
// MessageText:
//
// ScErrDatabaseIsNotLoaded (SCERR3035): Database connect failed because the database was not loaded.%0
//
#define SCERRDATABASEISNOTLOADED         3035L

//
// MessageId: SCERRACQUIRELINKEDCHUNKS
//
// MessageText:
//
// ScErrAcquireLinkedChunks (SCERR3036): Not enough free shared memory. Enough memory chunks could not be acquired to hold the whole message.%0
//
#define SCERRACQUIRELINKEDCHUNKS         3036L

// String heap is used to store type and field names in the kernel. The maximum string heap size if fixed so the only way to resolve this is reduce the number of types and fields store in the database.
//
// MessageId: SCERRSTRINGHEAPOUTOFSPACE
//
// MessageText:
//
// ScErrStringHeapOutOfSpace (SCERR4002): No more space in string heap.%0
//
#define SCERRSTRINGHEAPOUTOFSPACE        4002L

// Operation failed because no transaction was attached to the thread when the operation only could be executed within the context of a transaction (this applies to most database operations). Note that this error can occur even if the transaction isn't activly detached from the running thread, should another thread force-claim the ownership of the transaction (by for example committing or rolling back the transaction).
//
// MessageId: SCERRNOTRANSACTIONATTACHED
//
// MessageText:
//
// ScErrNoTransactionAttached (SCERR4003): Operation must be performed in the context of a valid transaction%0
//
#define SCERRNOTRANSACTIONATTACHED       4003L

//
// MessageId: SCERRNOTANEXTENSIONOFTYPE
//
// MessageText:
//
// ScErrNotAnExtensionOfType (SCERR4008): The specified extension is not an extension of the specific type.%0
//
#define SCERRNOTANEXTENSIONOFTYPE        4008L

// Indicates that schema creation failed. The reason why schema creation failed is logged before the error is raised.
//
// MessageId: SCERRCANTCREATESCHEMA
//
// MessageText:
//
// ScErrCantCreateSchema (SCERR4009): Unable to create database schema%0
//
#define SCERRCANTCREATESCHEMA            4009L

//
// MessageId: SCERRNOTPROPERRELATIONATTR
//
// MessageText:
//
// ScErrNotProperRelationAttr (SCERR4011): Indicates that an relation property wasn't properly declared.%0
//
#define SCERRNOTPROPERRELATIONATTR       4011L

//
// MessageId: SCERRUNSUPPORTEDATTRIBUTETYPE
//
// MessageText:
//
// ScErrUnsupportedAttributeType (SCERR4012): The data type is not supported. The data type of a field or property in an Entity class is not supported by the database.%0
//
#define SCERRUNSUPPORTEDATTRIBUTETYPE    4012L

//
// MessageId: SCERRTOMANYATTRIBUTES
//
// MessageText:
//
// ScErrToManyAttributes (SCERR4013): A type had to many attributes.%0
//
#define SCERRTOMANYATTRIBUTES            4013L

// If this error occurs it indicates a bug in the managed binding.
//
// MessageId: SCERRDELETEPENDING
//
// MessageText:
//
// ScErrDeletePending (SCERR4016): The operation failed because a delete is pending (issued but not finalized).%0
//
#define SCERRDELETEPENDING               4016L

//
// MessageId: SCERROBJECTNOTATYPE
//
// MessageText:
//
// ScErrObjectNotAType (SCERR4019): Instantiation of a object failed because the object wasn't a registered type.%0
//
#define SCERROBJECTNOTATYPE              4019L

//
// MessageId: SCERRREADONLYDATABASE
//
// MessageText:
//
// ScErrReadOnlyDatabase (SCERR4020): The database is read-only.%0
//
#define SCERRREADONLYDATABASE            4020L

// Probably indicates that the reference counter is out of sync.
//
// MessageId: SCERRNOTRANSREFTORELEASE
//
// MessageText:
//
// ScErrNoTransRefToRelease (SCERR4022): An attempt to release an reference that wasn't registered was intercepted.%0
//
#define SCERRNOTRANSREFTORELEASE         4022L

// Only a limited number of references can be registered (the reference counter is a 16-bit integer).
//
// MessageId: SCERRTOMANYTRANSACTIONREFS
//
// MessageText:
//
// ScErrToManyTransactionRefs (SCERR4024): Too many references registered by the transaction.%0
//
#define SCERRTOMANYTRANSACTIONREFS       4024L

//
// MessageId: SCERROBJECTILLEGALDURABILITY
//
// MessageText:
//
// ScErrObjectIllegalDurability (SCERR4025): A change in the durability of an object was requested, but the object was in a state where the durability couldn't be changed.%0
//
#define SCERROBJECTILLEGALDURABILITY     4025L

// The most likely case of this error is that the image file does not exists in the configured director or is locked by another process. The reason for why the image file couldn't be opened is logged seperatly.
//
// MessageId: SCERRCANTOPENIMAGEFILE
//
// MessageText:
//
// ScErrCantOpenImageFile (SCERR4028): One of database the image files of the database could not be opened.%0
//
#define SCERRCANTOPENIMAGEFILE           4028L

// The reason for the failure is logged seperatly."
//
// MessageId: SCERRCANTREADIMAGEFILE
//
// MessageText:
//
// ScErrCantReadImageFile (SCERR4029): An error occured when attempting to read from an image file.%0
//
#define SCERRCANTREADIMAGEFILE           4029L

// The reason for the failure is logged seperatly."
//
// MessageId: SCERRCANTWRITEIMAGEFILE
//
// MessageText:
//
// ScErrCantWriteImageFile (SCERR4030): An error occured when attempting to write to an image file.%0
//
#define SCERRCANTWRITEIMAGEFILE          4030L

// Transaction failed because the current transaction was locked on the thread. This error occures if trying to change the current transaction of modify the state of the current transaction in a context where this isn't allowed (for example when executing a trigger).
//
// MessageId: SCERRTRANSACTIONLOCKEDONTHREAD
//
// MessageText:
//
// ScErrTransactionLockedOnThread (SCERR4031): Can't modify the state of the transaction.%0
//
#define SCERRTRANSACTIONLOCKEDONTHREAD   4031L

//
// MessageId: SCERRNOTPROPERCOMMITHOOKTYPE
//
// MessageText:
//
// ScErrNotProperCommitHookType (SCERR4033): The commit hook type is properly declared (doesn't adhere to the constraints of commit hook types).%0
//
#define SCERRNOTPROPERCOMMITHOOKTYPE     4033L

// This error code is for example set when there is an error in a commit hook which in turn causes the commit to fail.
//
// MessageId: SCERRERRORINHOOKCALLBACK
//
// MessageText:
//
// ScErrErrorInHookCallback (SCERR4034): The operation failed because an error was detected in a hook callback function.%0
//
#define SCERRERRORINHOOKCALLBACK         4034L

//
// MessageId: SCERRITERATORNOTOWNED
//
// MessageText:
//
// ScErrIteratorNotOwned (SCERR4035): A cursor operation failed because the cursor wasn't owned by the current thread and transaction.%0
//
#define SCERRITERATORNOTOWNED            4035L

// This could either be a declarative violation or one what was caused during runtime due to a callback function that let an exception slip loose. Individual codes for plugin violations are logged separatly; this is the common error that is propagated to user code.
//
// MessageId: SCERRPLUGINCODEVIOLATION
//
// MessageText:
//
// ScErrPluginCodeViolation (SCERR4036): A violation in plugin code was detected.%0
//
#define SCERRPLUGINCODEVIOLATION         4036L

//
// MessageId: SCERRPLUGINMISSINGDEFAULTCTOR
//
// MessageText:
//
// ScErrPluginMissingDefaultCtor (SCERR4037): A plugin type lacks a default constructor.%0
//
#define SCERRPLUGINMISSINGDEFAULTCTOR    4037L

// Note that errors occuring due to the runtime (code access for ex) should be treated separatly if possible.
//
// MessageId: SCERRPLUGININVOCATIONEXCEPTION
//
// MessageText:
//
// ScErrPluginInvocationException (SCERR4038): An exception was not handled by a plugin callback or a plugin constructor.%0
//
#define SCERRPLUGININVOCATIONEXCEPTION   4038L

// Hooks that implements custom filtering of targets must obey the constraints of targets as specified by the hooking documentation.
//
// MessageId: SCERRINVALIDHOOKTARGET
//
// MessageText:
//
// ScErrInvalidHookTarget (SCERR4039): The target declared foor a commit hooks is not valid hook.%0
//
#define SCERRINVALIDHOOKTARGET           4039L

// Indicates an attempt to attach a transaction to a thread when the already is attached to another thread.
//
// MessageId: SCERRTRANSACTIONALREADYBOUND
//
// MessageText:
//
// ScErrTransactionAlreadyBound (SCERR4040): The transaction is already attached to another thread.%0
//
#define SCERRTRANSACTIONALREADYBOUND     4040L

// Information error connecting a sample of errors (always at least one) that is the cause of a general weaver error. Weaving errors use a reference approach, meaning that this error will inform the user about a unique reference that can be used to connect all errors and notices that are the underlying source for this error. With that reference it will be easy to find out more specific error information, assisting in correcting the problems that was discovered.
//
// MessageId: SCERRWEAVINGFAILED
//
// MessageText:
//
// ScErrWeavingFailed (SCERR4041): General weaver error.%0
//
#define SCERRWEAVINGFAILED               4041L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRMISSINGDEFINITION
//
// MessageText:
//
// ScErrMissingDefinition (SCERR4042): An entity class in the deployed application was not part of the previously created core database schema.%0
//
#define SCERRMISSINGDEFINITION           4042L

// Maps to ATV01
//
// MessageId: SCERRREFFORBIDDENUSERCODE
//
// MessageText:
//
// ScErrRefForbiddenUserCode (SCERR4043): User code referenced a type, field or method decorated with the HideFromApplications attribute%0
//
#define SCERRREFFORBIDDENUSERCODE        4043L

// Illegal field assignment. This error will be the result of user code assigning a construct in Starcounter that doesnt allow explicit assignment. Examples includes reference lists and sequence number fields. (Maps to ATV03)
//
// MessageId: SCERRILLEGALATTRIBUTEASSIGN
//
// MessageText:
//
// ScErrIllegalAttributeAssign (SCERR4044): The field may not be explicitly assigned.%0
//
#define SCERRILLEGALATTRIBUTEASSIGN      4044L

// A type claimed to be a type "known" by Starcounter by providing a custom attribute KnownType, but the proof it supplied wasnt a proof that Starcounter recognized. (Maps to ATV04)
//
// MessageId: SCERRUNTRUSTEDKNOWNTYPE
//
// MessageText:
//
// ScErrUntrustedKnownType (SCERR4045): An unrecognized type used the KnownType attribute.%0
//
#define SCERRUNTRUSTEDKNOWNTYPE          4045L

// Maps to DCV01.
//
// MessageId: SCERRDBCLASSCANTBEGENERIC
//
// MessageText:
//
// ScErrDbClassCantBeGeneric (SCERR4046): A database class was declared as a generic, which is not allowed.%0
//
#define SCERRDBCLASSCANTBEGENERIC        4046L

// Maps to DCV02.
//
// MessageId: SCERRILLEGALFINALIZER
//
// MessageText:
//
// ScErrIllegalFinalizer (SCERR4047): A database class contained a finalizer, something currently not supported.%0
//
#define SCERRILLEGALFINALIZER            4047L

// This name has been reserved by Starcounter. (Maps to DCV03)
//
// MessageId: SCERRILLEGALTYPEREFDECL
//
// MessageText:
//
// ScErrIllegalTypeRefDecl (SCERR4048): A database class contained a field declaration where the field was named __typeRef.%0
//
#define SCERRILLEGALTYPEREFDECL          4048L

// The "initialization" part of the constructor (i.e., the part before the base constructor is called) should be simple enough:
// - May not declare lexical scopes (impossible in C#)
// - May not declare exception handlers (impossible in C#)
// - May not contain branching instructions (like constructs <condition>? <true> : <false> in C#).
// Maps to DCV04.
//
// MessageId: SCERRTOCOMPLEXCTOR
//
// MessageText:
//
// ScErrToComplexCtor (SCERR4049): The instance initializer was too complex. Assign values inside the instance constructor instead.%0
//
#define SCERRTOCOMPLEXCTOR               4049L

// Maps to DCV06.
//
// MessageId: SCERRFIELDREDECLARATION
//
// MessageText:
//
// ScErrFieldRedeclaration (SCERR4050): A database class declared a persistent field that has already been declared in one of the parent classes.%0
//
#define SCERRFIELDREDECLARATION          4050L

// An extension class was discovered and that class declared a constructor other than the default contructor. Extension classes are not allowed to declare any other constructors than the default contructor. (Maps to ECV01)
//
// MessageId: SCERRILLEGALEXTCTOR
//
// MessageText:
//
// ScErrIllegalExtCtor (SCERR4051): Extension classes may only have default constructors.%0
//
#define SCERRILLEGALEXTCTOR              4051L

// Code that explicitly instantiated a Starcounter extension class was discovered. This is not allowed. (Maps to ECV02)
//
// MessageId: SCERRILLEGALEXTCREATION
//
// MessageText:
//
// ScErrIllegalExtCreation (SCERR4052): May not explicitly create instances of extension classes.%0
//
#define SCERRILLEGALEXTCREATION          4052L

// This is currently not allowed. Note: I can't really remember why we have this limitation? We should remove it if it's there for no particular reason. (Maps to ECV03)
//
// MessageId: SCERRILLEGALEXTCTORBODY
//
// MessageText:
//
// ScErrIllegalExtCtorBody (SCERR4053): The constructor in an extension class contained user code.%0
//
#define SCERRILLEGALEXTCTORBODY          4053L

// Maps to ECV04.
//
// MessageId: SCERREXTNOTSEALED
//
// MessageText:
//
// ScErrExtNotSealed (SCERR4054): An extension class that wasn't declared as "sealed" was found.%0
//
#define SCERREXTNOTSEALED                4054L

// A Society Object class was discovered as a kind (by extending Something.Kind) but it was named something other than "Kind".
// Note: As long as we provide a tight integration with Society Objects and we validate their code constrains in modules that targets their framework, I guess it is fair to have a set of error codes for those violations as well. However, these might be considered to be removed/moved in the future. (Maps to KCV02)
//
// MessageId: SCERRKINDWRONGNAME
//
// MessageText:
//
// ScErrKindWrongName (SCERR4055): A Kind class named something other than "Kind" was found.%0
//
#define SCERRKINDWRONGNAME               4055L

// All kind classes must be declared inside a Society Object concept class. A kind was found that wasn't. (Maps to KCV03)
//
// MessageId: SCERRKINDMISSINGCONCEPT
//
// MessageText:
//
// ScErrKindMissingConcept (SCERR4056): A Kind class missing an enclosing concept class was found.%0
//
#define SCERRKINDMISSINGCONCEPT          4056L

// A kind class belonging to concept A must be derived from the closest declared kind class of A's base concept. A class that violated this was found. (Maps to KCV04)
//
// MessageId: SCERRKINDILLEGALPARENT
//
// MessageText:
//
// ScErrKindIllegalParent (SCERR4057): A Kind class was derived from an inappropriate base class.%0
//
#define SCERRKINDILLEGALPARENT           4057L

// A kind class must have a default constructor, either an explicit one or the one provided by the compiler. (Maps to KCV05)
//
// MessageId: SCERRKINDMISSINGCTOR
//
// MessageText:
//
// ScErrKindMissingCtor (SCERR4058): A Kind class missing a default constructor was found.%0
//
#define SCERRKINDMISSINGCTOR             4058L

// Maps to KCV06.
//
// MessageId: SCERRKINDMISSINGPARENT
//
// MessageText:
//
// ScErrKindMissingParent (SCERR4059): Classes named "Kind" declared within Society Object concept classes must inherit its parent Kind.%0
//
#define SCERRKINDMISSINGPARENT           4059L

// Maps to KCV09.
//
// MessageId: SCERRKINDWRONGVISIBILITY
//
// MessageText:
//
// ScErrKindWrongVisibility (SCERR4060): Kind classes must at least have the "protected" visibility.%0
//
#define SCERRKINDWRONGVISIBILITY         4060L

// A persistent field was equipped with an initialization statement (for example "public int = 0;"), but the statement was to complex for the current version of the code weaver to interpret. Consult weaver documentation about what initialization constructs are supported, and watch out for later versions of Starcounter, being able to support more complex initializations. (Maps to PFV02)
//
// MessageId: SCERRFIELDCOMPLEXINIT
//
// MessageText:
//
// ScErrFieldComplexInit (SCERR4061): Too complex field initializer in entity class. Initialize it in the constructor instead.%0
//
#define SCERRFIELDCOMPLEXINIT            4061L

// A few restrictions regarding methods with reference parameters of persistent fields currently applies. When this error occurs, look at the method signature of the target method (part of the error message) and see if it can be implemented differently until there is support for more complex field-by-reference cases in later versions of the database. For more information about this, contact Starcounter. (Maps to PFV21)
//
// MessageId: SCERRFIELDREFMETHOD
//
// MessageText:
//
// ScErrFieldRefMethod (SCERR4062): Starcounter can't handle the reference parameters in a certain method.%0
//
#define SCERRFIELDREFMETHOD              4062L

// A field was declared as a synonym, but the field it was declared as a synonym for could not be located by the loader. Make sure your synonym targets are accessible as fields in the current class (or a baseclass) and that they are also persistent. (Maps to PFV06)
//
// MessageId: SCERRSYNNOTARGET
//
// MessageText:
//
// ScErrSynNoTarget (SCERR4066): A field was declared as a synonym to a non-existent field.%0
//
#define SCERRSYNNOTARGET                 4066L

// There was a mismatch between a synonym and the target it specified. A synonym target must always be assignable for the synonym field and if and of the fields are instrict fields, the type must be a perfect match. (Maps to PFV07)
//
// MessageId: SCERRSYNTYPEMISMATCH
//
// MessageText:
//
// ScErrSynTypeMismatch (SCERR4067): Mismatch between a synonym's type and the synonym's target's type.%0
//
#define SCERRSYNTYPEMISMATCH             4067L

// When a synonym references a target in another type that its own, the synonym is not allowed to have a wider visibility than the target. (Maps to PFV08)
//
// MessageId: SCERRSYNVISIBILITYMISMATCH
//
// MessageText:
//
// ScErrSynVisibilityMismatch (SCERR4068): A synonym was found that was more visible than its target.%0
//
#define SCERRSYNVISIBILITYMISMATCH       4068L

// When a synonym references a target in another type that its own, the synonym must be readonly if the target is readonly. (Maps to PFV09)
//
// MessageId: SCERRSYNREADONLYMISMATCH
//
// MessageText:
//
// ScErrSynReadOnlyMismatch (SCERR4069): A non-readonly synonym to a readonly field was found.%0
//
#define SCERRSYNREADONLYMISMATCH         4069L

// When a synonym references a target, the target must be a persistent field and nothing else. (Maps to PFV12)
//
// MessageId: SCERRSYNTARGETNOTPERSISTENT
//
// MessageText:
//
// ScErrSynTargetNotPersistent (SCERR4070): A synonym targeted a non-persistent field.%0
//
#define SCERRSYNTARGETNOTPERSISTENT      4070L

// When a synonym references a target, and the target is in another type, the target must never have the private visibility. (Maps to PFV20)
//
// MessageId: SCERRSYNPRIVATETARGET
//
// MessageText:
//
// ScErrSynPrivateTarget (SCERR4071): Can't declare synonyms to private fields.%0
//
#define SCERRSYNPRIVATETARGET            4071L

// A persistent property (in a known assembly) was declared. It supplied a reference to a target database field, but that field was not found when queried for by the loader. (Maps to PPV02)
//
// MessageId: SCERRPERSPROPNOTARGET
//
// MessageText:
//
// ScErrPersPropNoTarget (SCERR4077): Field not found.%0
//
#define SCERRPERSPROPNOTARGET            4077L

// A class was being discovered by the analyzer and while analyzing, the analyzer detected that a type with the same name (full name) was allready discovered. (Maps to DCV07)
//
// MessageId: SCERRTYPENAMEDUPLICATE
//
// MessageText:
//
// ScErrTypeNameDuplicate (SCERR4078): Two classes of the same full name were found.%0
//
#define SCERRTYPENAMEDUPLICATE           4078L

// Indicates an attempt to access an object that for some reason doesn't exist. This error is raised if accessing or attempting to modify an object that has been deleted in another transaction before the start of the current transaction. This error is also used when attempting to access removed objects that exist outside the scope of transactions (like an index) or when accessing removed entity object without any notion of transactions (applies to certain metadata functions).
//
// MessageId: SCERROBJECTDOESNTEXIST
//
// MessageText:
//
// ScErrObjectDoesntExist (SCERR4083): A transaction tried to access an object that has been deleted (or which for some reason doesn't exist).%0
//
#define SCERROBJECTDOESNTEXIST           4083L

//
// MessageId: SCERRTRANSACTIONNOTOWNED
//
// MessageText:
//
// ScErrTransactionNotOwned (SCERR4084): A transaction operation failed because the transaction wasn't owned by the current virtual processor.%0
//
#define SCERRTRANSACTIONNOTOWNED         4084L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRATTRNOKERNELFIELD
//
// MessageText:
//
// ScErrAttrNoKernelField (SCERR4085): An entity class in the deployed application declared a field not part of the previously created core database schema.%0
//
#define SCERRATTRNOKERNELFIELD           4085L

//
// MessageId: SCERRUNLOADFAILED
//
// MessageText:
//
// ScErrUnloadFailed (SCERR4086): The unload routine failed to execute.%0
//
#define SCERRUNLOADFAILED                4086L

//
// MessageId: SCERRRELOADFAILED
//
// MessageText:
//
// ScErrReloadFailed (SCERR4087): The database reload routine failed to execute.%0
//
#define SCERRRELOADFAILED                4087L

// Occurs when attempting to manually abort a transaction that isn't the current transaction and the transaction that was to be aborted already was aborted.
//
// MessageId: SCERRTRANSACTIONALREADYABORTED
//
// MessageText:
//
// ScErrTransactionAlreadyAborted (SCERR4088): Transaction abort failed because the transaction already was aborted.%0
//
#define SCERRTRANSACTIONALREADYABORTED   4088L

//
// MessageId: SCERRTRANSACTIONSCOPEOWNED
//
// MessageText:
//
// ScErrTransactionScopeOwned (SCERR4089): Context not accessible because it's owned by a scope.%0
//
#define SCERRTRANSACTIONSCOPEOWNED       4089L

// This error is raised by transaction scopes if they are unable to restart a conflicted transaction.
//
// MessageId: SCERRUNHANDLEDTRANSACTCONFLICT
//
// MessageText:
//
// ScErrUnhandledTransactConflict (SCERR4090): The operation failed because of an unhandled transaction conflict.%0
//
#define SCERRUNHANDLEDTRANSACTCONFLICT   4090L

// Maximum size allowed for binary data is 4080 bytes (4096 - 16).
//
// MessageId: SCERRBINARYVALUEEXCEEDSMAXSIZE
//
// MessageText:
//
// ScErrBinaryValueExceedsMaxSize (SCERR4091): Binary data exceeds maximum size.%0
//
#define SCERRBINARYVALUEEXCEEDSMAXSIZE   4091L

//
// MessageId: SCERRREADONLYTRANSACTION
//
// MessageText:
//
// ScErrReadOnlyTransaction (SCERR4093): The transaction is readonly and cannot be changed to write-mode.%0
//
#define SCERRREADONLYTRANSACTION         4093L

// When specifying renaming instructions for classes and fields, Starcounter forces them to be part of the legacy schema, the one the renaming applies to. There are several probable causes for this error, all of them relating to bad specification of the previous name, and they will be listed on the documentation, helping developers understand what might have caused the error to be raised.
//
// MessageId: SCERRRENAMEMISSINGSOURCE
//
// MessageText:
//
// ScErrRenameMissingSource (SCERR4099): A renamed token (class/field) specifies a previous name not part of the old schema.%0
//
#define SCERRRENAMEMISSINGSOURCE         4099L

//
// MessageId: SCERRMEMORYMANAGERISDEAD
//
// MessageText:
//
// ScErrMemoryManagerIsDead (SCERR4101): The memory manager has terminated unexpectedly.%0
//
#define SCERRMEMORYMANAGERISDEAD         4101L

//
// MessageId: SCERRNOTTHESAMEDATABASE
//
// MessageText:
//
// ScErrNotTheSameDatabase (SCERR4103): When reloading the database; the memory manager has detected that the image files represents another database the the one in memory, or another generation of it.%0
//
#define SCERRNOTTHESAMEDATABASE          4103L

//
// MessageId: SCERRCANTWRITETRANSACTIONLOG
//
// MessageText:
//
// ScErrCantWriteTransactionLog (SCERR4104): An error occured when writing to the redo log.%0
//
#define SCERRCANTWRITETRANSACTIONLOG     4104L

//
// MessageId: SCERRCANTOPENDUMPFILE
//
// MessageText:
//
// ScErrCantOpenDumpFile (SCERR4105): Reload failed because the process was unable to open the dump file.%0
//
#define SCERRCANTOPENDUMPFILE            4105L

//
// MessageId: SCERRCANTOPENTRANSACTIONLOG
//
// MessageText:
//
// ScErrCantOpenTransactionLog (SCERR4106): Unable to open transaction log.%0
//
#define SCERRCANTOPENTRANSACTIONLOG      4106L

//
// MessageId: SCERRCANTEXPANDIMAGEFILE
//
// MessageText:
//
// ScErrCantExpandImageFile (SCERR4107): Could not expand image file.%0
//
#define SCERRCANTEXPANDIMAGEFILE         4107L

//
// MessageId: SCERRCANTCREATEIMAGEFILE
//
// MessageText:
//
// ScErrCantCreateImageFile (SCERR4108): Could not create image file.%0
//
#define SCERRCANTCREATEIMAGEFILE         4108L

//
// MessageId: SCERRCANTCREATETRANSACTIONLOG
//
// MessageText:
//
// ScErrCantCreateTransactionLog (SCERR4109): Could not create transaction log.%0
//
#define SCERRCANTCREATETRANSACTIONLOG    4109L

//
// MessageId: SCERRUNLOADFAILEDDUMPEXISTS
//
// MessageText:
//
// ScErrUnloadFailedDumpExists (SCERR4111): The unload routine failed to execute because a dump with the specified name already exists.%0
//
#define SCERRUNLOADFAILEDDUMPEXISTS      4111L

//
// MessageId: SCERRINVALIDRELOADINSTRUCTSET
//
// MessageText:
//
// ScErrInvalidReloadInstructSet (SCERR4112): When initializing the reload, the reload instruction set unexpectedly was proved invalid.%0
//
#define SCERRINVALIDRELOADINSTRUCTSET    4112L

//
// MessageId: SCERRRELOADBUGV1NULLABLEAI63
//
// MessageText:
//
// ScErrReloadBugV1NullableAI63 (SCERR4113): When rebuilding (dump ver 1), a known and un-recoverable error was detected. Please contact Starcounter for guidance.%0
//
#define SCERRRELOADBUGV1NULLABLEAI63     4113L

//
// MessageId: SCERRRELOADUNSUPFIELDCONVERSION
//
// MessageText:
//
// ScErrReloadUnsupFieldConversion (SCERR4114): Unsupported field conversion during rebuild.%0
//
#define SCERRRELOADUNSUPFIELDCONVERSION  4114L

//
// MessageId: SCERRRELOADCONVERSIONOVERFLOW
//
// MessageText:
//
// ScErrReloadConversionOverflow (SCERR4115): Conversion overflow during rebuild.%0
//
#define SCERRRELOADCONVERSIONOVERFLOW    4115L

//
// MessageId: SCERRDUMPVERSIONNOTSUPPORTED
//
// MessageText:
//
// ScErrDumpVersionNotSupported (SCERR4116): When rebuilding, a version of the dump was not supported.%0
//
#define SCERRDUMPVERSIONNOTSUPPORTED     4116L

//
// MessageId: SCERRCANTFINDIMAGEFILE
//
// MessageText:
//
// ScErrCantFindImageFile (SCERR4117): One or both of the image files are missing.%0
//
#define SCERRCANTFINDIMAGEFILE           4117L

// Check so that the user that runs the server has read and write access to the file and that the file isn't read-only.
// Corresponds to windows error ERROR_ACCESS_DENIED.
//
// MessageId: SCERRCANTACCESSIMAGEFILE
//
// MessageText:
//
// ScErrCantAccessImageFile (SCERR4118): One or both of the image files aren't accessible by the process.%0
//
#define SCERRCANTACCESSIMAGEFILE         4118L

// Corresponds to windows error ERROR_SHARING_VIOLATION.
//
// MessageId: SCERRIMAGEFILELOCKED
//
// MessageText:
//
// ScErrImageFileLocked (SCERR4119): One or both of the image files are locked by another process.%0
//
#define SCERRIMAGEFILELOCKED             4119L

//
// MessageId: SCERRCANTFINDTRANSACTIONLOG
//
// MessageText:
//
// ScErrCantFindTransactionLog (SCERR4120): The transaction log is missing.%0
//
#define SCERRCANTFINDTRANSACTIONLOG      4120L

// Check so that the user that runs the server has read and write access to the file and that the file isn't read-only.
// Corresponds to windows error ERROR_ACCESS_DENIED.
//
// MessageId: SCERRCANTACCESSTRANSACTIONLOG
//
// MessageText:
//
// ScErrCantAccessTransactionLog (SCERR4121): The transaction log isn't accessible by the process.%0
//
#define SCERRCANTACCESSTRANSACTIONLOG    4121L

// Corresponds to windows error ERROR_SHARING_VIOLATION.
//
// MessageId: SCERRTRANSACTIONLOGLOCKED
//
// MessageText:
//
// ScErrTransactionLogLocked (SCERR4122): The transaction log is locked by another process.%0
//
#define SCERRTRANSACTIONLOGLOCKED        4122L

// Check so that the user that runs the server has read and write access to the file and that the file isn't read-only.
// Corresponds to windows error ERROR_ACCESS_DENIED.
//
// MessageId: SCERRCANTACCESSDUMPFILE
//
// MessageText:
//
// ScErrCantAccessDumpFile (SCERR4123): Reload failed because the dump file weren't accessible by the process.%0
//
#define SCERRCANTACCESSDUMPFILE          4123L

// Corresponds to windows error ERROR_SHARING_VIOLATION.
//
// MessageId: SCERRDUMPFILELOCKED
//
// MessageText:
//
// ScErrDumpFileLocked (SCERR4124): Reload failed because the dump file was locked by another process.%0
//
#define SCERRDUMPFILELOCKED              4124L

// The log will also contain which constraint or constraints that was violated.
//
// MessageId: SCERRRELOADCONSTRAINTVIOLATION
//
// MessageText:
//
// ScErrReloadConstraintViolation (SCERR4125): The reload completed successfully but reload data violated one or more constraints.%0
//
#define SCERRRELOADCONSTRAINTVIOLATION   4125L

// Minimum version for File transactions is 6 (Windows Vista/Server 2008).
//
// MessageId: SCERRFILETRANSNOTSUPPORTED
//
// MessageText:
//
// ScErrFileTransNotSupported (SCERR4126): File transactions cannot be used on this platform version.%0
//
#define SCERRFILETRANSNOTSUPPORTED       4126L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRTYPEBASEDEVIATION
//
// MessageText:
//
// ScErrTypeBaseDeviation (SCERR4127): An entity type declared a base class that did not match the base class previously bound to the core database schema.%0
//
#define SCERRTYPEBASEDEVIATION           4127L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
// This error code is used for deviating signatures on persistent fields declared in regular entity classes as well as in Starcounter extension classes.
//
// MessageId: SCERRFIELDSIGNATUREDEVIATION
//
// MessageText:
//
// ScErrFieldSignatureDeviation (SCERR4128): A database type declared a persistent field that did not match the signature of the attribute in the core schema.%0
//
#define SCERRFIELDSIGNATUREDEVIATION     4128L

// During schema deviation detection, at least one violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRSCHEMADEVIATION
//
// MessageText:
//
// ScErrSchemaDeviation (SCERR4129): Schema deviations were found when comparing the deployed application to the core schema in the database. Individual deviations detected have been logged. To find these logs, use the activity ID property of this message as a reference.%0
//
#define SCERRSCHEMADEVIATION             4129L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERREXTFIELDMISSINGCORE
//
// MessageText:
//
// ScErrExtFieldMissingCore (SCERR4130): An extension class in the deployed application declared a field not part of the previously created core database schema. This is caused by addition of fields, inproper renaming of fields or if the extended class of the extension was altered.%0
//
#define SCERREXTFIELDMISSINGCORE         4130L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRINDEXDECLARATIONDEVIATION
//
// MessageText:
//
// ScErrIndexDeclarationDeviation (SCERR4131): An index was declared but either not part of the core database schema or the signature of that index did not match the signature of the index in the core.%0
//
#define SCERRINDEXDECLARATIONDEVIATION   4131L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that a class was either removed or improperly renamed. To remedy the symptom, a database rebuild must be performed.
//
// MessageId: SCERRMISSINGENTITYCLASS
//
// MessageText:
//
// ScErrMissingEntityClass (SCERR4132): A database definition in the current core database schema have no corresponding entity class in the deployed application.%0
//
#define SCERRMISSINGENTITYCLASS          4132L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that a field was either removed or improperly renamed. To remedy the symptom, a database rebuild must be performed.
//
// MessageId: SCERRMISSINGPERSISTENTFIELD
//
// MessageText:
//
// ScErrMissingPersistentField (SCERR4133): A database attribute in the current core database schema have no corresponding persistent field in the deployed application.%0
//
#define SCERRMISSINGPERSISTENTFIELD      4133L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that an extension class was either removed, improperly renamed or was redefined to extend another class than it extended originally. To remedy the symptom, a database rebuild must be performed.
//
// MessageId: SCERRMISSINGEXTENSIONCLASS
//
// MessageText:
//
// ScErrMissingExtensionClass (SCERR4134): In the core database schema, an entity class was extended by an extension class that have no corresponding class in the deployed application.%0
//
#define SCERRMISSINGEXTENSIONCLASS       4134L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that an index previously defined have been removed/renamed. To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRINDEXDECLARATIONMISSING
//
// MessageText:
//
// ScErrIndexDeclarationMissing (SCERR4135): An index was defined in the core database schema but it has no corresponding index declaration in the deployed application.%0
//
#define SCERRINDEXDECLARATIONMISSING     4135L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that either a new hook was added or that a callback on an existing hook was added. To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRHOOKCALLBACKNOTBOUND
//
// MessageText:
//
// ScErrHookCallbackNotBound (SCERR4136): At least one commit hook part of the deployed application defined a callback that was not previously bound to the core database definition of the target being hooked.%0
//
#define SCERRHOOKCALLBACKNOTBOUND        4136L

// During schema deviation detection, a violation was found, indicating that the deployed database application code structure was different than the metadata found in the core.
// The reason for this error is that a hook either was removed completly, referenced another target than it was originally, or that a particular callback of such a hook was removed. To remedy this symptom, a database rebuild must be performed.
//
// MessageId: SCERRHOOKCALLBACKNOTINSTALLED
//
// MessageText:
//
// ScErrHookCallbackNotInstalled (SCERR4137): At least one hook part of the deployed application was missing. The core keeps track of what hooks and callbacks are installed and when a core definition was inspected, a callback was previously bound but no longer part of the deployed application.%0
//
#define SCERRHOOKCALLBACKNOTINSTALLED    4137L

//
// MessageId: SCERRITERATORCLOSED
//
// MessageText:
//
// ScErrIteratorClosed (SCERR4139): A interator operation failed because the iterator was closed.%0
//
#define SCERRITERATORCLOSED              4139L

//
// MessageId: SCERRCANTBACKUPOUTOFMEMORY
//
// MessageText:
//
// ScErrCantBackupOutOfMemory (SCERR4141): The checkpoint image file could not be backed up because of failure to allocate needed resources.%0
//
#define SCERRCANTBACKUPOUTOFMEMORY       4141L

//
// MessageId: SCERRCANTBACKUPALREADYEXISTS
//
// MessageText:
//
// ScErrCantBackupAlreadyExists (SCERR4142): The checkpoint image file could not be backed up because a backup with the same timestamp already existed.%0
//
#define SCERRCANTBACKUPALREADYEXISTS     4142L

//
// MessageId: SCERRCANTBACKUPDISKFULL
//
// MessageText:
//
// ScErrCantBackupDiskFull (SCERR4143): The checkpoint image file could not be backed up because there wasn't enough room om the target disk.%0
//
#define SCERRCANTBACKUPDISKFULL          4143L

// The reason for why the image file couldn't be backed up is logged seperatly.
//
// MessageId: SCERRCANTBACKUPUNEXPERROR
//
// MessageText:
//
// ScErrCantBackupUnexpError (SCERR4144): The checkpoint image file could not be backed up as a result of an OS error.%0
//
#define SCERRCANTBACKUPUNEXPERROR        4144L

//
// MessageId: SCERRCANTVERIFYBACKUPFILE
//
// MessageText:
//
// ScErrCantVerifyBackupFile (SCERR4145): Backup file could not be verified.%0
//
#define SCERRCANTVERIFYBACKUPFILE        4145L

//
// MessageId: SCERRCANTFINDBACKUPFILE
//
// MessageText:
//
// ScErrCantFindBackupFile (SCERR4146): Backup file could not be found.%0
//
#define SCERRCANTFINDBACKUPFILE          4146L

//
// MessageId: SCERRCANTACCESSBACKUPFILE
//
// MessageText:
//
// ScErrCantAccessBackupFile (SCERR4147): Backup file isn't accessible by the process.%0
//
#define SCERRCANTACCESSBACKUPFILE        4147L

//
// MessageId: SCERRVERIFYIMAGEMAGICFAILED
//
// MessageText:
//
// ScErrVerifyImageMagicFailed (SCERR4148): Verification of image file against magic number failed. The file could not be identified as an image file.%0
//
#define SCERRVERIFYIMAGEMAGICFAILED      4148L

//
// MessageId: SCERRVERIFYBACKUPMAGICFAILED
//
// MessageText:
//
// ScErrVerifyBackupMagicFailed (SCERR4149): Verification of backup file against magic number failed. The file could not be identified as a backup file.%0
//
#define SCERRVERIFYBACKUPMAGICFAILED     4149L

//
// MessageId: SCERRCANTFINDMAINTRANSLOGFILE
//
// MessageText:
//
// ScErrCantFindMainTransLogFile (SCERR4150): When inspecting a set of physical redo log files in a multi-file transaction log setup, the server was not able to find the main redo log, indexed 0 (zero). The reason for this indicates that the main redo log file have been tampered with on the server, either it has been deleted or moved.%0
//
#define SCERRCANTFINDMAINTRANSLOGFILE    4150L

//
// MessageId: SCERRTRANSLOGFILECOUNTMISMATCH
//
// MessageText:
//
// ScErrTransLogFileCountMismatch (SCERR4151): When inspecting a set of physical redo log files in a multi-file transaction log setup, the server found that the count expected did not match the number of redo logs found. The reason for this indicates that physical files have been tampered with on the server, usually that one of more files have been deleted or moved.%0
//
#define SCERRTRANSLOGFILECOUNTMISMATCH   4151L

//
// MessageId: SCERRTRANSLOGCANTFINDREFFILE
//
// MessageText:
//
// ScErrTransLogCantFindRefFile (SCERR4152): The physical redo log file referenced by the image opened was not part of the set of file identified as logs. This is most likely caused by the file being renamed or possibly deleted.%0
//
#define SCERRTRANSLOGCANTFINDREFFILE     4152L

//
// MessageId: SCERRLBINARYVALUEEXCEEDMAXSIZE
//
// MessageText:
//
// ScErrLBinaryValueExceedMaxSize (SCERR4153): Large binary data exceeds maximum size.%0
//
#define SCERRLBINARYVALUEEXCEEDMAXSIZE   4153L

// The maximum size is set so that it's unlikely to be exceeded. If storing a larger string is needed then it will have to be stored as a large binary.
// The maximum size of a string in characters is affected by contents of the string and varies between different collations. This since it's the size of the string packed that is restricted.
//
// MessageId: SCERRSTRINGVALUEEXCEEDSMAXSIZE
//
// MessageText:
//
// ScErrStringValueExceedsMaxSize (SCERR4154): String data exceeds maximum size.%0
//
#define SCERRSTRINGVALUEEXCEEDSMAXSIZE   4154L

// This error may indicate a bug in the string formatter or data corruption.
//
// MessageId: SCERRSTRINGCONVERSIONFAILED
//
// MessageText:
//
// ScErrStringConversionFailed (SCERR4155): An error occured when converting string to or from native format.%0
//
#define SCERRSTRINGCONVERSIONFAILED      4155L

//
// MessageId: SCERRSEARCHKEYEXCEEDSMAXSIZE
//
// MessageText:
//
// ScErrSearchKeyExceedsMaxSize (SCERR4156): Search key data exceeds maximum allowed size.%0
//
#define SCERRSEARCHKEYEXCEEDSMAXSIZE     4156L

//
// MessageId: SCERRONLYDURINGSCHEMAUPDATE
//
// MessageText:
//
// ScErrOnlyDuringSchemaUpdate (SCERR4157): Operation is only supported during schema update.%0
//
#define SCERRONLYDURINGSCHEMAUPDATE      4157L

// Can occur either when processing commit hooks or a delete hook. Caused either by the thread ending the hook operation manually detached (which should not occur) or if an out of memory or similar occurs while attempting to reattach an auto detached thread.
//
// MessageId: SCERRREATTACHFAILEDBADDBSTATE
//
// MessageText:
//
// ScErrReattachFailedBadDbState (SCERR4158): A thread detached during database operation and failed to reattach leaving the server process in an inconsistent state.%0
//
#define SCERRREATTACHFAILEDBADDBSTATE    4158L

//
// MessageId: SCERRCANTINITCHECKPOUTOFMEMORY
//
// MessageText:
//
// ScErrCantInitCheckpOutOfMemory (SCERR4159): Checkpoint process could not be initialized because of failure to allocated needed resources from OS.%0
//
#define SCERRCANTINITCHECKPOUTOFMEMORY   4159L

// The reason for why the checkpoint process could not be initialized is logged seperatly.
//
// MessageId: SCERRCANTINITCHECKPUNEXPERROR
//
// MessageText:
//
// ScErrCantInitCheckpUnexpError (SCERR4160): Checkpoint process could not be initialized because of an unexpected OS error.%0
//
#define SCERRCANTINITCHECKPUNEXPERROR    4160L

//
// MessageId: SCERRNOTDURINGSCHEMAUPDATE
//
// MessageText:
//
// ScErrNotDuringSchemaUpdate (SCERR4161): Operation is not supported during schema update.%0
//
#define SCERRNOTDURINGSCHEMAUPDATE       4161L

// If this error occurs it indicates a bug in the managed binding.
//
// MessageId: SCERRCOMMITPENDING
//
// MessageText:
//
// ScErrCommitPending (SCERR4162): The operation failed because a transaction commit is pending (issued but not finalized).%0
//
#define SCERRCOMMITPENDING               4162L

//
// MessageId: SCERROUTOFTHREADBUFFER
//
// MessageText:
//
// ScErrOutOfThreadBuffer (SCERR4163): The operation failed because the maximum size of the thread buffer was exceeded.%0
//
#define SCERROUTOFTHREADBUFFER           4163L

// The error is usually due to a previous I/O error. If so that error will have been written to log.
//
// MessageId: SCERRCODEGENERATIONFAILED
//
// MessageText:
//
// ScErrCodeGenerationFailed (SCERR4164): Code generation failed.%0
//
#define SCERRCODEGENERATIONFAILED        4164L

//
// MessageId: SCERRINDEXONTYPENOTSUPPORTED
//
// MessageText:
//
// ScErrIndexOnTypeNotSupported (SCERR4166): Index on type of specified attribute not supported.%0
//
#define SCERRINDEXONTYPENOTSUPPORTED     4166L

//
// MessageId: SCERRTOMANYATTRIBUTESONINDEX
//
// MessageText:
//
// ScErrToManyAttributesOnIndex (SCERR4167): The number of attributes specified exceeds the maximum number of attributes supported in a combined index.%0
//
#define SCERRTOMANYATTRIBUTESONINDEX     4167L

//
// MessageId: SCERRNOATTRIBUTESONINDEX
//
// MessageText:
//
// ScErrNoAttributesOnIndex (SCERR4168): No attributes specified on index creation.%0
//
#define SCERRNOATTRIBUTESONINDEX         4168L

//
// MessageId: SCERRINVALIDINDEXSORTMASK
//
// MessageText:
//
// ScErrInvalidIndexSortMask (SCERR4169): Invalid sort mask specified on index creation.%0
//
#define SCERRINVALIDINDEXSORTMASK        4169L

// The size of a definition depends on the number and type of attributes and the number and type indexes. Reducing the number of attributes and/or indexes might help resolve this problem.
//
// MessageId: SCERRDEFINITIONTOLARGE
//
// MessageText:
//
// ScErrDefinitionToLarge (SCERR4170): The size of the defintion exceeded the maximum definition size.%0
//
#define SCERRDEFINITIONTOLARGE           4170L

//
// MessageId: SCERRRELOADFAILSTRINGCONVERT
//
// MessageText:
//
// ScErrReloadFailStringConvert (SCERR4173): String conversion failed during rebuild.%0
//
#define SCERRRELOADFAILSTRINGCONVERT     4173L

// Occurs when transaction attempts to access an object that isn't accessible from the specific transaction.
// This could mean that the object either didn't exist when the transaction started, was deleted within the scope of the transaction or was created within the scope of another transaction not yet committed.
// It could also mean that the referenced object isn't accessible to the current transaction because it belongs to another container.
// Only simple reads generates this error. If the error is detected in a write the transaction is aborted. See ScErrInvalidObjectAccessAbort.
//
// MessageId: SCERRINVALIDOBJECTACCESS
//
// MessageText:
//
// ScErrInvalidObjectAccess (SCERR4174): The operation failed because of an invalid object access.%0
//
#define SCERRINVALIDOBJECTACCESS         4174L

// Occurs when for example a string attribute is accessed as an integer.
//
// MessageId: SCERRSCHEMACODEMISMATCH
//
// MessageText:
//
// ScErrSchemaCodeMismatch (SCERR4177): Operation failed be because input does not match schema.%0
//
#define SCERRSCHEMACODEMISMATCH          4177L

//
// MessageId: SCERRSETUPDYNCODEENVFAILED
//
// MessageText:
//
// ScErrSetupDynCodeEnvFailed (SCERR4178): Failed to setup dynamic code environment.%0
//
#define SCERRSETUPDYNCODEENVFAILED       4178L

// The error is usually due to a previous I/O error. If so that error will have been written to log.
//
// MessageId: SCERRLOADDYNAMICCODEFAILED
//
// MessageText:
//
// ScErrLoadDynamicCodeFailed (SCERR4179): Failed to load a dynamically generated library.%0
//
#define SCERRLOADDYNAMICCODEFAILED       4179L

//
// MessageId: SCERRCANTREADTRANSACTIONLOG
//
// MessageText:
//
// ScErrCantReadTransactionLog (SCERR4180): An error occured when reading from the redo log.%0
//
#define SCERRCANTREADTRANSACTIONLOG      4180L

// A persistent property (in a known assembly) was declared. It specified a mapping to a database field in the core, but that field was not found when the class and it's ancestors where analyzed.
//
// MessageId: SCERRPERSPROPWRONGCOREREF
//
// MessageText:
//
// ScErrPersPropWrongCoreRef (SCERR4181): A PersistentProperty declaration referenced a field in the core that was not found.%0
//
#define SCERRPERSPROPWRONGCOREREF        4181L

// Only a limited number of open iterators is allowed at any given time. To avoid this error be sure to close iterators (releasing the result set) when done with them and don't keep to many iterators referenced at any given time.
//
// MessageId: SCERRTOMANYOPENITERATORS
//
// MessageText:
//
// ScErrToManyOpenIterators (SCERR4182): Too many open iterators registered with the current thread.%0
//
#define SCERRTOMANYOPENITERATORS         4182L

//
// MessageId: SCERRCANTGENERATEDYNLIBNAME
//
// MessageText:
//
// ScErrCantGenerateDynLibName (SCERR4183): Unable to generate a name for dynamically generated library.%0
//
#define SCERRCANTGENERATEDYNLIBNAME      4183L

//
// MessageId: SCERRNOTAREPTRANSACTION
//
// MessageText:
//
// ScErrNotARepTransaction (SCERR4184): Operation is only allowed by a REP transaction.%0
//
#define SCERRNOTAREPTRANSACTION          4184L

//
// MessageId: SCERRNOTIFREPTRANSACTION
//
// MessageText:
//
// ScErrNotIfRepTransaction (SCERR4185): Operation is not allowed by a REP transaction.%0
//
#define SCERRNOTIFREPTRANSACTION         4185L

// This error occurs when the memory manager was unable to create a memory file for storing database data either when loading image or expanding database memory. If the failure is caused by an OS error code is logged seperatly. The error could also occur because the maximum number of memory files kept by the memory manager has been reached.
// If the memory manager fails to create a memory file because it was unable to allocate sufficient memory from the OS then a ScErrOUT_OF_MEMORY will be raised.
//
// MessageId: SCERRCANTCREATEDBMEMORYFILE
//
// MessageText:
//
// ScErrCantCreateDbMemoryFile (SCERR4186): The memory manager was unable to create a memory file to store database memory.%0
//
#define SCERRCANTCREATEDBMEMORYFILE      4186L

//
// MessageId: SCERRNAMEDINDEXALREADYEXISTS
//
// MessageText:
//
// ScErrNamedIndexAlreadyExists (SCERR4187): An index with the specified name already exists.%0
//
#define SCERRNAMEDINDEXALREADYEXISTS     4187L

//
// MessageId: SCERRMETADATACLASSDELETE
//
// MessageText:
//
// ScErrMetadataClassDelete (SCERR4188): Metadata objects cannot be deleted.%0
//
#define SCERRMETADATACLASSDELETE         4188L

//
// MessageId: SCERRCANTINITFLUSHOUTOFMEMORY
//
// MessageText:
//
// ScErrCantInitFlushOutOfMemory (SCERR4189): Flush process could not be initialized because of failure to allocated needed resources from OS.%0
//
#define SCERRCANTINITFLUSHOUTOFMEMORY    4189L

// The reason for why the checkpoint process could not be initialized is logged seperatly.
//
// MessageId: SCERRCANTINITFLUSHUNEXPERROR
//
// MessageText:
//
// ScErrCantInitFlushUnexpError (SCERR4190): Flush process could not be initialized because of an unexpected OS error.%0
//
#define SCERRCANTINITFLUSHUNEXPERROR     4190L

//
// MessageId: SCERRBADMEMORYCKSUMCHECKP
//
// MessageText:
//
// ScErrBadMemoryCksumCheckp (SCERR4191): Checksum mismatch detected in database memory on checkpoint.%0
//
#define SCERRBADMEMORYCKSUMCHECKP        4191L

//
// MessageId: SCERRBADIMAGEFILECKSUMCHECKP
//
// MessageText:
//
// ScErrBadImageFileCksumCheckp (SCERR4192): Checksum mismatch detected in image file on checkpoint.%0
//
#define SCERRBADIMAGEFILECKSUMCHECKP     4192L

//
// MessageId: SCERRBADIMAGEFILECKSUMBACKUP
//
// MessageText:
//
// ScErrBadImageFileCksumBackup (SCERR4193): Checksum mismatch detected in image file on backup.%0
//
#define SCERRBADIMAGEFILECKSUMBACKUP     4193L

//
// MessageId: SCERRIMAGEFILEALREADYEXISTS
//
// MessageText:
//
// ScErrImageFileAlreadyExists (SCERR4194): A new image file could not be created because a file with the specific name already exists.%0
//
#define SCERRIMAGEFILEALREADYEXISTS      4194L

//
// MessageId: SCERRIMAGEEXEPAGESIZEMISMATCH
//
// MessageText:
//
// ScErrImageExePageSizeMismatch (SCERR4195): The image page size does not match the page size of the executable.%0
//
#define SCERRIMAGEEXEPAGESIZEMISMATCH    4195L

//
// MessageId: SCERRBACKUPEXEPAGESIZEMISMATCH
//
// MessageText:
//
// ScErrBackupExePagesizeMismatch (SCERR4196): The backup page size does not match the page size of the executable.%0
//
#define SCERRBACKUPEXEPAGESIZEMISMATCH   4196L

//
// MessageId: SCERROUTPUTBUFFERTOSMALL
//
// MessageText:
//
// ScErrOutputBufferToSmall (SCERR4197): Operation failed because the output buffer was to small for the output.%0
//
#define SCERROUTPUTBUFFERTOSMALL         4197L

//
// MessageId: SCERRINDEXNAMETOOLONG
//
// MessageText:
//
// ScErrIndexNameTooLong (SCERR4198): Index creation failed because the specified index name was too long.%0
//
#define SCERRINDEXNAMETOOLONG            4198L

//
// MessageId: SCERRNOTWITHINATRANSACTION
//
// MessageText:
//
// ScErrNotWithinATransaction (SCERR4199): Operation failed because a transaction was attached to the thread and the operation was not allowed whtin a transaction.%0
//
#define SCERRNOTWITHINATRANSACTION       4199L

//
// MessageId: SCERRINVALIDINDEXNAME
//
// MessageText:
//
// ScErrInvalidIndexName (SCERR4200): Index creation failed because the specified index name was of an invalid format.%0
//
#define SCERRINVALIDINDEXNAME            4200L

// Connecting to databases using Db.Connect is currently only supported from client applications. When executing inside a database, a connect is not needed since the code is implicitly connected to the running database.
//
// MessageId: SCERRCONNECTINSIDEDATABASE
//
// MessageText:
//
// ScErrConnectInsideDatabase (SCERR4201): Connect failed because it was called from code running inside a database.%0
//
#define SCERRCONNECTINSIDEDATABASE       4201L

// To use entity types in a client application, the client runtime must be aware of their code types. All the entity types in a given assembly is instantly known the first type one of them is referenced, as they are implicitly registering themself with the runtime. However, if a type is used in an SQL statement and has not previously been referenced by it's code type, the query will fail with this error.
// To remedy this, you can explicitly add the entity types in a given assembly by issuing Db.Current.EnableClientAssembly(Assembly).
//
// MessageId: SCERRCLIENTENTITYTYPEUNKNOWN
//
// MessageText:
//
// ScErrClientEntityTypeUnknown (SCERR4202): The SQL statement referenced a class/table whose code type was not found on the client. Missing type: "{0}". Please add the assembly defining this type using Db.Current.EnableClientAssembly(Assembly), for example using Db.Current.EnableClientAssembly(typeof({0}).Assembly).{1}SQL: "{2}".%0
//
#define SCERRCLIENTENTITYTYPEUNKNOWN     4202L

// This error usually indicates that a client has not successfully called Db.Connect before it used a Starcounter method that needed to access something in the database.
// Example of methods that can cause this error if they are called without the client first have successfully called Db.Connect is: Db.SQL, SqlResult.GetEnumerator, new T where T is an entity type.
//
// MessageId: SCERRCLIENTBACKENDNOTINITIALIZED
//
// MessageText:
//
// ScErrClientBackendNotInitialized (SCERR4203): A method call failed because the client backend was not yet established.%0
//
#define SCERRCLIENTBACKENDNOTINITIALIZED 4203L

// To use Starcounter binaries in a client application, the build system must prepare the code for client access during compilation. This is normally done in Visual Studio, under the project property page "Starcounter" in a Starcounter Library project. Make sure you set the "Enable access from external process" to TRUE.
//
// MessageId: SCERRASSEMBLYNOTPREPAREDFORCLIENT
//
// MessageText:
//
// ScErrAssemblyNotPreparedForClient (SCERR4204): The assembly was not compiled/weaved for access from a client application.%0
//
#define SCERRASSEMBLYNOTPREPAREDFORCLIENT 4204L

//
// MessageId: SCERRINVALIDCLIENTCONNECTSTRING
//
// MessageText:
//
// ScErrInvalidClientConnectString (SCERR4205): The database connection string is incorrect.%0
//
#define SCERRINVALIDCLIENTCONNECTSTRING  4205L

//
// MessageId: SCERRINSTANTIATEBINDINGNOTYPE
//
// MessageText:
//
// ScErrInstantiateBindingNoType (SCERR4206): The type- or extenstion binding "{0}" can not be instantiated because the code type is not known. Make sure the code type is assigned using the CodeType property.%0
//
#define SCERRINSTANTIATEBINDINGNOTYPE    4206L

//
// MessageId: SCERRINSTANTIATEABSTRACTBINDING
//
// MessageText:
//
// ScErrInstantiateAbstractBinding (SCERR4207): The type- or extenstion binding "{0}" can not be instantiated because it represents a type that is declared abstract.%0
//
#define SCERRINSTANTIATEABSTRACTBINDING  4207L

//
// MessageId: SCERRMAXNUMBEROFTABLESEXCEEDED
//
// MessageText:
//
// ScErrMaxNumberOfTablesExceeded (SCERR4208): Unable to create a new table because the maximum number of tables would be exceeded.%0
//
#define SCERRMAXNUMBEROFTABLESEXCEEDED   4208L

//
// MessageId: SCERRTABLENAMETOOLONG
//
// MessageText:
//
// ScErrTableNameTooLong (SCERR4209): Create or alter table failed because the specified table name was too long.%0
//
#define SCERRTABLENAMETOOLONG            4209L

//
// MessageId: SCERRINVALIDTABLENAME
//
// MessageText:
//
// ScErrInvalidTableName (SCERR4210): Create or alter table failed because the specified table name was of an invalid format.%0
//
#define SCERRINVALIDTABLENAME            4210L

//
// MessageId: SCERRCOLUMNNAMETOOLONG
//
// MessageText:
//
// ScErrColumnNameTooLong (SCERR4211): Create or alter table failed because the specified column name was too long.%0
//
#define SCERRCOLUMNNAMETOOLONG           4211L

//
// MessageId: SCERRINVALIDCOLUMNNAME
//
// MessageText:
//
// ScErrInvalidColumnName (SCERR4212): Create or alter table failed because the specified column name was of an invalid format.%0
//
#define SCERRINVALIDCOLUMNNAME           4212L

//
// MessageId: SCERRCOLUMNTYPEMUSTBENULLABLE
//
// MessageText:
//
// ScErrColumnTypeMustBeNullable (SCERR4213): Create or alter table failed because a column of a type that requires it to be nullable was not specified as nullable.%0
//
#define SCERRCOLUMNTYPEMUSTBENULLABLE    4213L

//
// MessageId: SCERRNAMEDTABLEALREADYEXISTS
//
// MessageText:
//
// ScErrNamedTableAlreadyExists (SCERR4214): Create table failed because a table with the specified name already exists.%0
//
#define SCERRNAMEDTABLEALREADYEXISTS     4214L

//
// MessageId: SCERRALREADYCONNECTEDTOOTHERDB
//
// MessageText:
//
// ScErrAlreadyConnectedToOtherDb (SCERR4215): Connecting failed because another database is already connected.%0
//
#define SCERRALREADYCONNECTEDTOOTHERDB   4215L

//
// MessageId: SCERRTABLEALREADYDROPPED
//
// MessageText:
//
// ScErrTableAlreadyDropped (SCERR4216): Failed to drop a table because it has already been dropped.%0
//
#define SCERRTABLEALREADYDROPPED         4216L

//
// MessageId: SCERRDBTERMINATEDGRACEFULLY
//
// MessageText:
//
// ScErrDbTerminatedGracefully (SCERR4217): The database process terminated gracefully.%0
//
#define SCERRDBTERMINATEDGRACEFULLY      4217L

//
// MessageId: SCERRDBTERMINATEDUNEXPECTEDLY
//
// MessageText:
//
// ScErrDbTerminatedUnexpectedly (SCERR4218): The database process terminated unexpectedly.%0
//
#define SCERRDBTERMINATEDUNEXPECTEDLY    4218L

//
// MessageId: SCERRUNKNOWNDBSTATE
//
// MessageText:
//
// ScErrUnknownDbState (SCERR4219): Unknown database state.%0
//
#define SCERRUNKNOWNDBSTATE              4219L

//
// MessageId: SCERRENTITYCLASSNOTPUBLIC
//
// MessageText:
//
// ScErrEntityClassNotPublic (SCERR4220): The class is not public. Entity classes must be declared with public visibility.%0
//
#define SCERRENTITYCLASSNOTPUBLIC        4220L

//
// MessageId: SCERRCOMMITNOTPENDING
//
// MessageText:
//
// ScErrCommitNotPending (SCERR4221): The operation failed because a transaction commit is not pending.%0
//
#define SCERRCOMMITNOTPENDING            4221L

//
// MessageId: SCERRCANTRESETABORT
//
// MessageText:
//
// ScErrCantResetAbort (SCERR4222): Transaction abort could not be reset.%0
//
#define SCERRCANTRESETABORT              4222L

//
// MessageId: SCERRCHECKPWAITFORLOGABORTED
//
// MessageText:
//
// ScErrCheckpWaitForLogAborted (SCERR4224): Wait for log writer to write log entries to disk before completing checkpoint was aborted.%0
//
#define SCERRCHECKPWAITFORLOGABORTED     4224L

//
// MessageId: SCERRCANTWRITEIMAGEFILEDISKFULL
//
// MessageText:
//
// ScErrCantWriteImageFileDiskFull (SCERR4225): Unable to write to image file because the write would expand the file and there is no space available on disk.%0
//
#define SCERRCANTWRITEIMAGEFILEDISKFULL  4225L

//
// MessageId: SCERRBADCOLUMNTYPE
//
// MessageText:
//
// ScErrBadColumnType (SCERR4226): An unknown column type was specified when creating a table.%0
//
#define SCERRBADCOLUMNTYPE               4226L

//
// MessageId: SCERRTRANSACTIONBOUND
//
// MessageText:
//
// ScErrTransactionBound (SCERR4227): The operation failed because the transaction was bound to a thread.%0
//
#define SCERRTRANSACTIONBOUND            4227L

//
// MessageId: SCERRTABLEDROPPED
//
// MessageText:
//
// ScErrTableDropped (SCERR4228): Failed alter table because it has been dropped.%0
//
#define SCERRTABLEDROPPED                4228L

//
// MessageId: SCERRINDEXNOTFOUND
//
// MessageText:
//
// ScErrIndexNotFound (SCERR4229): Index requested not found.%0
//
#define SCERRINDEXNOTFOUND               4229L

// The session with the id has either expired or never existed.
//
// MessageId: SCERRINVALIDSESSIONID
//
// MessageText:
//
// ScErrInvalidSessionId (SCERR5002): Specified session id not valid.%0
//
#define SCERRINVALIDSESSIONID            5002L

//
// MessageId: SCERRTRANSNOTREGISTEREDWITHSESN
//
// MessageText:
//
// ScErrTransNotRegisteredWithSesn (SCERR5003): The specific transaction is not registered with the session.%0
//
#define SCERRTRANSNOTREGISTEREDWITHSESN  5003L

//
// MessageId: SCERRMAXREGISTEREDTRANSREACHED
//
// MessageText:
//
// ScErrMaxRegisteredTransReached (SCERR5004): Unable to register transaction with session because the maximum number of transactions per session has already been reached.%0
//
#define SCERRMAXREGISTEREDTRANSREACHED   5004L

//
// MessageId: SCERRSESSIONINSIDEDATABASE
//
// MessageText:
//
// ScErrSessionInsideDatabase (SCERR5005): Operations on sessions are only available from clients, not code running inside a database.%0
//
#define SCERRSESSIONINSIDEDATABASE       5005L

//
// MessageId: SCERRUNEXPECTEDDISKACCESSERR
//
// MessageText:
//
// ScErrUnexpectedDiskAccessErr (SCERR6002): A call to an operating system level disk access API failed to execute.%0
//
#define SCERRUNEXPECTEDDISKACCESSERR     6002L

//
// MessageId: SCERRUNEXPECTEDFILEACCESSERR
//
// MessageText:
//
// ScErrUnexpectedFileAccessErr (SCERR6003): A call (other than read/write) to an operating system level file access API failed to execute.%0
//
#define SCERRUNEXPECTEDFILEACCESSERR     6003L

//
// MessageId: SCERRTRANSACTIONLOGCORRUPT
//
// MessageText:
//
// ScErrTransactionLogCorrupt (SCERR6005): Recovery detected the transaction log to be corrupt, recovery can't be completed. The log file needs to be rebuilded before the recovery can be completed.%0
//
#define SCERRTRANSACTIONLOGCORRUPT       6005L

//
// MessageId: SCERRUNEXPECTEDIMAGEFILEERROR
//
// MessageText:
//
// ScErrUnexpectedImageFileError (SCERR6006): An unexpected file I/O error occurred when writing to or reading from the image file.%0
//
#define SCERRUNEXPECTEDIMAGEFILEERROR    6006L

//
// MessageId: SCERRUNEXPECTEDIMAGEMMAPERROR
//
// MessageText:
//
// ScErrUnexpectedImageMMapError (SCERR6007): An unexpected error was detected when allocating memory for the database image.%0
//
#define SCERRUNEXPECTEDIMAGEMMAPERROR    6007L

//
// MessageId: SCERRUNEXPECTEDWAITERROR
//
// MessageText:
//
// ScErrUnexpectedWaitError (SCERR6008): An unexpected error was detected when waiting for a waitable object.%0
//
#define SCERRUNEXPECTEDWAITERROR         6008L

//
// MessageId: SCERRUNEXPERROROPENIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorOpenImageFile (SCERR6009): An unexpected file I/O error occurred when attempting to open an image file.%0
//
#define SCERRUNEXPERROROPENIMAGEFILE     6009L

//
// MessageId: SCERRUNEXPERRORREADIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorReadImageFile (SCERR6010): An unexpected file I/O error occurred when attempting to read from an image file.%0
//
#define SCERRUNEXPERRORREADIMAGEFILE     6010L

//
// MessageId: SCERRUNEXPERRORWRITEIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorWriteImageFile (SCERR6011): An unexpected file I/O error occurred when attempting to write to an image file.%0
//
#define SCERRUNEXPERRORWRITEIMAGEFILE    6011L

//
// MessageId: SCERRUNEXPERRORINITSHAREDOBJECT
//
// MessageText:
//
// ScErrUnexpErrorInitSharedObject (SCERR6012): An unexpected error occured when attempting to initialize a shared object.%0
//
#define SCERRUNEXPERRORINITSHAREDOBJECT  6012L

//
// MessageId: SCERRUNEXPERRORCREATETRANSLOG
//
// MessageText:
//
// ScErrUnexpErrorCreateTransLog (SCERR6013): An unexpected file I/O error occurred when attempting to create the redo log.%0
//
#define SCERRUNEXPERRORCREATETRANSLOG    6013L

//
// MessageId: SCERRUNEXPERROROPENTRANSLOG
//
// MessageText:
//
// ScErrUnexpErrorOpenTransLog (SCERR6014): An unexpected file I/O error occurred when attempting to open the redo log.%0
//
#define SCERRUNEXPERROROPENTRANSLOG      6014L

//
// MessageId: SCERRUNEXPERRORREADTRANSLOG
//
// MessageText:
//
// ScErrUnexpErrorReadTransLog (SCERR6015): An unexpected file I/O error occurred when attempting to read from the redo log.%0
//
#define SCERRUNEXPERRORREADTRANSLOG      6015L

//
// MessageId: SCERRUNEXPERRORWRITETRANSLOG
//
// MessageText:
//
// ScErrUnexpErrorWriteTransLog (SCERR6016): An unexpected file I/O error occurred when attempting to write to the redo log.%0
//
#define SCERRUNEXPERRORWRITETRANSLOG     6016L

//
// MessageId: SCERRUNEXPERROROPENDUMPFILE
//
// MessageText:
//
// ScErrUnexpErrorOpenDumpFile (SCERR6017): An unexpected file I/O error occurred when attempting to open a dump file (SCD or SCDX).%0
//
#define SCERRUNEXPERROROPENDUMPFILE      6017L

//
// MessageId: SCERRUNEXPERRORREADDUMPFILE
//
// MessageText:
//
// ScErrUnexpErrorReadDumpFile (SCERR6018): An unexpected file I/O error occurred when attempting to read a dump file (SCD or SCDX).%0
//
#define SCERRUNEXPERRORREADDUMPFILE      6018L

//
// MessageId: SCERRUNEXPERRORWRITEDUMPFILE
//
// MessageText:
//
// ScErrUnexpErrorWriteDumpFile (SCERR6019): An unexpected file I/O error occurred when attempting to write to dump file (SCD or SCDX).%0
//
#define SCERRUNEXPERRORWRITEDUMPFILE     6019L

//
// MessageId: SCERRUNEXPERROREXPANDIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorExpandImageFile (SCERR6020): An unexpected file I/O error occurred when attempting to expand an image file.%0
//
#define SCERRUNEXPERROREXPANDIMAGEFILE   6020L

//
// MessageId: SCERRUNEXPERRORCOPYIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorCopyImageFile (SCERR6021): An unexpected file I/O error occurred when attempting to copy an image file.%0
//
#define SCERRUNEXPERRORCOPYIMAGEFILE     6021L

//
// MessageId: SCERRUNEXPERRORCREATEIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrorCreateImageFile (SCERR6022): An unexpected file I/O error occurred when attempting to create an image file.%0
//
#define SCERRUNEXPERRORCREATEIMAGEFILE   6022L

//
// MessageId: SCERRIMAGEFILECORRUPT
//
// MessageText:
//
// ScErrImageFileCorrupt (SCERR6024): The image file is corrupt.%0
//
#define SCERRIMAGEFILECORRUPT            6024L

//
// MessageId: SCERRUNEXPERRORCREATEPROCESS
//
// MessageText:
//
// ScErrUnexpErrorCreateProcess (SCERR6026): An unexpected error occured when attempting to create a child process.%0
//
#define SCERRUNEXPERRORCREATEPROCESS     6026L

//
// MessageId: SCERRUNEXPERRORNAMEDUMPFILE
//
// MessageText:
//
// ScErrUnexpErrorNameDumpFile (SCERR6027): An unexpected file I/O error occurred when attempting to rename dump file from temporary to final name.%0
//
#define SCERRUNEXPERRORNAMEDUMPFILE      6027L

//
// MessageId: SCERRVERIFYDUMPMAGICFAILED
//
// MessageText:
//
// ScErrVerifyDumpMagicFailed (SCERR6028): When rebuilding, verifying the dump against the magic number failed.%0
//
#define SCERRVERIFYDUMPMAGICFAILED       6028L

// Name is created using API function GetTempFileName.
//
// MessageId: SCERRUNEXPERRORGETDUMPTMPNAME
//
// MessageText:
//
// ScErrUnexpErrorGetDumpTmpName (SCERR6029): An unexpected error occured when creating a temporary file name for dump.%0
//
#define SCERRUNEXPERRORGETDUMPTMPNAME    6029L

//
// MessageId: SCERRUNEXPERRORCREATEDUMPFILE
//
// MessageText:
//
// ScErrUnexpErrorCreateDumpFile (SCERR6030): An unexpected file I/O error occurred when attempting to create dump file (SCD or SCDX).%0
//
#define SCERRUNEXPERRORCREATEDUMPFILE    6030L

//
// MessageId: SCERRMEMORYMANAGERINCOHERENT
//
// MessageText:
//
// ScErrMemoryManagerIncoherent (SCERR6031): The server can't understand the memory manager.%0
//
#define SCERRMEMORYMANAGERINCOHERENT     6031L

//
// MessageId: SCERRUNEXPCHANNELREADERROR
//
// MessageText:
//
// ScErrUnexpChannelReadError (SCERR6032): An unexpected error was detected when initiating or completing a channel read.%0
//
#define SCERRUNEXPCHANNELREADERROR       6032L

//
// MessageId: SCERRUNEXPCHANNELWRITEERROR
//
// MessageText:
//
// ScErrUnexpChannelWriteError (SCERR6033): An unexpected error was detected when initiating or completing a channel write.%0
//
#define SCERRUNEXPCHANNELWRITEERROR      6033L

//
// MessageId: SCERRUNEXPCHANNELACCEPTERROR
//
// MessageText:
//
// ScErrUnexpChannelAcceptError (SCERR6034): An unexpected error was detected when initiating or completing a channel accept.%0
//
#define SCERRUNEXPCHANNELACCEPTERROR     6034L

//
// MessageId: SCERRUNEXPCHANNELCONNECTERROR
//
// MessageText:
//
// ScErrUnexpChannelConnectError (SCERR6035): An unexpected error was detected when initiating or completing a channel connect.%0
//
#define SCERRUNEXPCHANNELCONNECTERROR    6035L

//
// MessageId: SCERRUNEXPCHANNELCLOSEERROR
//
// MessageText:
//
// ScErrUnexpChannelCloseError (SCERR6036): An unexpected error was detected when initiating or completing a channel close.%0
//
#define SCERRUNEXPCHANNELCLOSEERROR      6036L

//
// MessageId: SCERRUNEXPLISTENERCREATEERROR
//
// MessageText:
//
// ScErrUnexpListenerCreateError (SCERR6037): An unexpected error was detected when creating a listener.%0
//
#define SCERRUNEXPLISTENERCREATEERROR    6037L

//
// MessageId: SCERRUNEXPLISTENERCLOSEERROR
//
// MessageText:
//
// ScErrUnexpListenerCloseError (SCERR6038): An unexpected error was detected when initiating or completing a listener close.%0
//
#define SCERRUNEXPLISTENERCLOSEERROR     6038L

//
// MessageId: SCERRUNEXPERROROPENFILELOG
//
// MessageText:
//
// ScErrUnexpErrorOpenFileLog (SCERR6039): An unexpected error was detected when opening the server file/trace log.%0
//
#define SCERRUNEXPERROROPENFILELOG       6039L

//
// MessageId: SCERRUNEXPERRINITBACKUPPROC
//
// MessageText:
//
// ScErrUnexpErrInitBackupProc (SCERR6041): An unexpected OS error occurred when attempting to initialize backup process.%0
//
#define SCERRUNEXPERRINITBACKUPPROC      6041L

//
// MessageId: SCERRUNEXPERRBACKUPIMAGEFILE
//
// MessageText:
//
// ScErrUnexpErrBackupImageFile (SCERR6042): An unexpected file I/O error occurred when attempting to backup an image file.%0
//
#define SCERRUNEXPERRBACKUPIMAGEFILE     6042L

//
// MessageId: SCERRUNEXPERROPENBACKUPFILE
//
// MessageText:
//
// ScErrUnexpErrOpenBackupFile (SCERR6043): An unexpected file I/O error occurred when attempting to open a backup file.%0
//
#define SCERRUNEXPERROPENBACKUPFILE      6043L

//
// MessageId: SCERRUNEXPERRFINDINGTRANSLOG
//
// MessageText:
//
// ScErrUnexpErrFindingTransLog (SCERR6044): An unexpected error occurred when attempting to find the redo log(s).%0
//
#define SCERRUNEXPERRFINDINGTRANSLOG     6044L

//
// MessageId: SCERRUNEXPERRTRANSLOGCOUNTZERO
//
// MessageText:
//
// ScErrUnexpErrTransLogCountZero (SCERR6045): An unexpected error occurred when reading the internal COUNT property of the physical main redo log. The value was 0 (zero).%0
//
#define SCERRUNEXPERRTRANSLOGCOUNTZERO   6045L

//
// MessageId: SCERRUNEXPERRILLEGALTLOGSECTREF
//
// MessageText:
//
// ScErrUnexpErrIllegalTLogSectRef (SCERR6046): The reference to the place where the next transaction should be written in the redo log, fetched from the image when loaded, was out of bounds with respect to the sector count of the given file.%0
//
#define SCERRUNEXPERRILLEGALTLOGSECTREF  6046L

//
// MessageId: SCERRUNEXPERRINITCHECKPPROC
//
// MessageText:
//
// ScErrUnexpErrInitCheckpProc (SCERR6047): An unexpected OS error occurred when attempting to initialize checkpoint process.%0
//
#define SCERRUNEXPERRINITCHECKPPROC      6047L

//
// MessageId: SCERRUNEXPERRORCOPYCODEFILE
//
// MessageText:
//
// ScErrUnexpErrorCopyCodeFile (SCERR6048): An unexpected file I/O error occurred when attempting to copy code generation base file.%0
//
#define SCERRUNEXPERRORCOPYCODEFILE      6048L

//
// MessageId: SCERRUNEXPERROROPENCODEFILE
//
// MessageText:
//
// ScErrUnexpErrorOpenCodeFile (SCERR6049): An unexpected file I/O error occurred when attempting to open code generation file.%0
//
#define SCERRUNEXPERROROPENCODEFILE      6049L

//
// MessageId: SCERRUNEXPERRORWRITECODEFILE
//
// MessageText:
//
// ScErrUnexpErrorWriteCodeFile (SCERR6050): An unexpected file I/O error occurred when attempting to write to code generation file.%0
//
#define SCERRUNEXPERRORWRITECODEFILE     6050L

// This error is probably due to a faulty installation. Likely the used compiler is not properly installed.
//
// MessageId: SCERRUNEXPERROREXECUTECOMPILE
//
// MessageText:
//
// ScErrUnexpErrorExecuteCompile (SCERR6051): An unexpected error occurred when attempting to compile code generation output.%0
//
#define SCERRUNEXPERROREXECUTECOMPILE    6051L

// This error should not occur. Please contact Starcounter support.
//
// MessageId: SCERRUNEXPECTEDCOMPILERERROR
//
// MessageText:
//
// ScErrUnexpectedCompilerError (SCERR6052): An unexpected error occurred was returned by the compiler when attempting to compile code generation output.%0
//
#define SCERRUNEXPECTEDCOMPILERERROR     6052L

//
// MessageId: SCERRUNEXPERRORCREATECODEDIR
//
// MessageText:
//
// ScErrUnexpErrorCreateCodeDir (SCERR6053): An unexpected error occurred when attempting to create directory for dynamically generated code.%0
//
#define SCERRUNEXPERRORCREATECODEDIR     6053L

//
// MessageId: SCERRUNEXPERRORLOADCODEFILE
//
// MessageText:
//
// ScErrUnexpErrorLoadCodeFile (SCERR6054): An unexpected error occurred when attempting to load dynamically generated code.%0
//
#define SCERRUNEXPERRORLOADCODEFILE      6054L

//
// MessageId: SCERRUNEXPERRORALLOCRESOURCE
//
// MessageText:
//
// ScErrUnexpErrorAllocResource (SCERR6055): An unexpected error occured when attempting to allocate a OS resource.%0
//
#define SCERRUNEXPERRORALLOCRESOURCE     6055L

//
// MessageId: SCERRUNEXPERRORFREERESOURCE
//
// MessageText:
//
// ScErrUnexpErrorFreeResource (SCERR6056): An unexpected error occured when attempting to release a OS resource.%0
//
#define SCERRUNEXPERRORFREERESOURCE      6056L

//
// MessageId: SCERRUNEXPERRORSETWAITEVENT
//
// MessageText:
//
// ScErrUnexpErrorSetWaitEvent (SCERR6057): An unexpected error occured when attempting set, reset or wait for an OS event.%0
//
#define SCERRUNEXPERRORSETWAITEVENT      6057L

//
// MessageId: SCERRUNEXPERRORCREATEDBMEMFILE
//
// MessageText:
//
// ScErrUnexpErrorCreateDbMemFile (SCERR6058): An unexpected error was detected when creating a memory file for database data.%0
//
#define SCERRUNEXPERRORCREATEDBMEMFILE   6058L

//
// MessageId: SCERRUNEXPMEMORYCKSUMCHECKP
//
// MessageText:
//
// ScErrUnexpMemoryCksumCheckp (SCERR6059): Checksum mismatch detected in database memory on checkpoint.%0
//
#define SCERRUNEXPMEMORYCKSUMCHECKP      6059L

//
// MessageId: SCERRUNEXPIMAGEFILECKSUMLOAD
//
// MessageText:
//
// ScErrUnexpImageFileCksumLoad (SCERR6060): Checksum mismatch detected in image file on load.%0
//
#define SCERRUNEXPIMAGEFILECKSUMLOAD     6060L

//
// MessageId: SCERRUNEXPIMAGEFILECKSUMCHECKP
//
// MessageText:
//
// ScErrUnexpImageFileCksumCheckp (SCERR6061): Checksum mismatch detected in image file on checkpoint.%0
//
#define SCERRUNEXPIMAGEFILECKSUMCHECKP   6061L

//
// MessageId: SCERRUNEXPIMAGEFILECKSUMBACKUP
//
// MessageText:
//
// ScErrUnexpImageFileCksumBackup (SCERR6062): Checksum mismatch detected in image file on backup.%0
//
#define SCERRUNEXPIMAGEFILECKSUMBACKUP   6062L

//
// MessageId: SCERRUNEXPERRINITFLUSHPROC
//
// MessageText:
//
// ScErrUnexpErrInitFlushProc (SCERR6063): An unexpected OS error occurred when attempting to initialize image write process.%0
//
#define SCERRUNEXPERRINITFLUSHPROC       6063L

//
// MessageId: SCERRUNEXPERRSETDLLDIRECTORY
//
// MessageText:
//
// ScErrUnexpErrSetDllDirectory (SCERR6064): An unexpected OS error occurred when attempting to initialize image write process.%0
//
#define SCERRUNEXPERRSETDLLDIRECTORY     6064L

//
// MessageId: SCERRSQLINTERNALERROR
//
// MessageText:
//
// ScErrSqlInternalError (SCERR7000): Unexpected internal error in SQL module.%0
//
#define SCERRSQLINTERNALERROR            7000L

// The schema file is used by external process StarcounterSQL.exe.
//
// MessageId: SCERRSQLEXPORTSCHEMAFAILED
//
// MessageText:
//
// ScErrSqlExportSchemaFailed (SCERR7001): SQL module was unable to write a schema file to the current temp directory.%0
//
#define SCERRSQLEXPORTSCHEMAFAILED       7001L

//
// MessageId: SCERRSQLSTARTPROCESSFAILED
//
// MessageText:
//
// ScErrSqlStartProcessFailed (SCERR7002): SQL module was unable to start external process StarcounterSQL.exe.%0
//
#define SCERRSQLSTARTPROCESSFAILED       7002L

//
// MessageId: SCERRSQLVERIFYPROCESSFAILED
//
// MessageText:
//
// ScErrSqlVerifyProcessFailed (SCERR7003): SQL module was unable to verify external process StarcounterSQL.exe.%0
//
#define SCERRSQLVERIFYPROCESSFAILED      7003L

//
// MessageId: SCERRSQLPROCESSQUERYFAILED
//
// MessageText:
//
// ScErrSqlProcessQueryFailed (SCERR7004): External process StarcounterSQL.exe was unable to process the current SQL query.%0
//
#define SCERRSQLPROCESSQUERYFAILED       7004L

//
// MessageId: SCERRQUERYOPTIMINTERNALERROR
//
// MessageText:
//
// ScErrQueryOptimInternalError (SCERR7006): Unexpected internal error in query optimization module.%0
//
#define SCERRQUERYOPTIMINTERNALERROR     7006L

//
// MessageId: SCERRQUERYEXECINTERNALERROR
//
// MessageText:
//
// ScErrQueryExecInternalError (SCERR7007): Unexpected internal error in query execution module.%0
//
#define SCERRQUERYEXECINTERNALERROR      7007L

// Since the SQL is case insensitive such case insensitive ambiguity can not be allowed.
//
// MessageId: SCERRSQLDUPLICATEDIDENTIFIER
//
// MessageText:
//
// ScErrSqlDuplicatedIdentifier (SCERR7008): More than one public identifier (class name, property name etc.) with the same case insensitive representation.%0
//
#define SCERRSQLDUPLICATEDIDENTIFIER     7008L

//
// MessageId: SCERRCONNCONNECTTODATABASE
//
// MessageText:
//
// ScErrConnConnectToDatabase (SCERR7009): Can't establish connection to specified database.%0
//
#define SCERRCONNCONNECTTODATABASE       7009L

//
// MessageId: SCERRCONNGETQUERYID
//
// MessageText:
//
// ScErrConnGetQueryID (SCERR7010): Error fetching unique SQL query identifier.%0
//
#define SCERRCONNGETQUERYID              7010L

//
// MessageId: SCERRCONNGETQUERYRESULTS
//
// MessageText:
//
// ScErrConnGetQueryResults (SCERR7011): Error fetching SQL query results.%0
//
#define SCERRCONNGETQUERYRESULTS         7011L

//
// MessageId: SCERRCONNGETNEXTRESULTSPAGE
//
// MessageText:
//
// ScErrConnGetNextResultsPage (SCERR7013): Error fetching SQL query results next page.%0
//
#define SCERRCONNGETNEXTRESULTSPAGE      7013L

//
// MessageId: SCERRCONNCLOSEENUM
//
// MessageText:
//
// ScErrConnCloseEnum (SCERR7014): Error closing open SQL enumerator.%0
//
#define SCERRCONNCLOSEENUM               7014L

//
// MessageId: SCERRCONNINITSQLFUNCTIONS
//
// MessageText:
//
// ScErrConnInitSqlFunctions (SCERR7015): Error initializing managed SQL function pointers.%0
//
#define SCERRCONNINITSQLFUNCTIONS        7015L

//
// MessageId: SCERRSINGLEOBJECTPROJECTION
//
// MessageText:
//
// ScErrSingleObjectProjection (SCERR7016): Only single object projection is allowed for SQL queries on the client.%0
//
#define SCERRSINGLEOBJECTPROJECTION      7016L

//
// MessageId: SCERRQUERYSTRINGTOOLONG
//
// MessageText:
//
// ScErrQueryStringTooLong (SCERR7017): The length of the query string exceeds the maximal length allowed.%0
//
#define SCERRQUERYSTRINGTOOLONG          7017L

//
// MessageId: SCERROFFSETKEYOUTOFPROCESSFETCH
//
// MessageText:
//
// ScErrOffsetKeyOutOfProcessFetch (SCERR7019): In out of database execution offset key can be obtained only for queries with FETCH statement.%0
//
#define SCERROFFSETKEYOUTOFPROCESSFETCH  7019L

//
// MessageId: SCERRQUERYWRONGPARAMTYPE
//
// MessageText:
//
// ScErrQueryWrongParamType (SCERR7020): Incorrect SQL parameter/variable type.%0
//
#define SCERRQUERYWRONGPARAMTYPE         7020L

//
// MessageId: SCERRSQLINCORRECTSYNTAX
//
// MessageText:
//
// ScErrSQLIncorrectSyntax (SCERR7021): Incorrect SQL syntax.%0
//
#define SCERRSQLINCORRECTSYNTAX          7021L

//
// MessageId: SCERRSQLNOTIMPLEMENTED
//
// MessageText:
//
// ScErrSQLNotImplemented (SCERR7022): Not yet implemented SQL feature.%0
//
#define SCERRSQLNOTIMPLEMENTED           7022L

//
// MessageId: SCERRSQLNOTSUPPORTED
//
// MessageText:
//
// ScErrSQLNotSupported (SCERR7023): Not supported SQL feature.%0
//
#define SCERRSQLNOTSUPPORTED             7023L

//
// MessageId: SCERRUNEXPERRSPRINTFSQLSYNTAX
//
// MessageText:
//
// ScErrUnexpErrSprintfSQLSyntax (SCERR7024): An unexpected error occurred in unmanaged SQL parser when attempting to format message for SQL syntax error.%0
//
#define SCERRUNEXPERRSPRINTFSQLSYNTAX    7024L

//
// MessageId: SCERRUNEXPSQLPARSER
//
// MessageText:
//
// ScErrUnexpSQLParser (SCERR7025): An unexpected error occurred in SQL Parser.%0
//
#define SCERRUNEXPSQLPARSER              7025L

//
// MessageId: SCERRSQLUNKNOWNNAME
//
// MessageText:
//
// ScErrSQLUnknownName (SCERR7026): Specified name of class, property or other object name does not exist in the database.%0
//
#define SCERRSQLUNKNOWNNAME              7026L

//
// MessageId: SCERRUNEXPSQLSCANNER
//
// MessageText:
//
// ScErrUnexpSQLScanner (SCERR7027): An unexpected error occurred in scanner of SQL Parser.%0
//
#define SCERRUNEXPSQLSCANNER             7027L

// A constraint violation is most likely caused by a bug, restarting a transaction that's aborted for this reason is therefore not advisable since it's very likely that the same error will occur again and again each time the transaction commits.
//
// MessageId: SCERRCONSTRAINTVIOLATIONABORT
//
// MessageText:
//
// ScErrConstraintViolationAbort (SCERR8001): A transaction was aborted because a constraint was violated.%0
//
#define SCERRCONSTRAINTVIOLATIONABORT    8001L

// Accessing an object that has been deleted before the transaction started could also cause the current transaction to abort because of a perceived conflict. This can happen if an object is accessed within another transaction then the transaction the object was fetched in and the object at that time has been deleted. The reason for this is that the database engine can't determine when the object was deleted and therefore assumes that the object existed when the transaction started because of the assumption that the reference was fetched within the current transaction. To avoid this one should only access objects fetched within the context of the current transaction is possible.
//
// MessageId: SCERRTRANSACTIONCONFLICTABORT
//
// MessageText:
//
// ScErrTransactionConflictAbort (SCERR8002): A transaction was aborted because it was in conflict with another transaction.%0
//
#define SCERRTRANSACTIONCONFLICTABORT    8002L

// Since the abort error is raised only if data is accessed within the context of the transaction after the transaction aborted, chances are that the occurence this error on user level will be rare. More commonly the user code will only have to deal with the exception causing the transaction to abort.
//
// MessageId: SCERRIMPLICITEXTERNALABORT
//
// MessageText:
//
// ScErrImplicitExternalAbort (SCERR8003): The transaction has been aborted by the framework because of an external event that suggested that the transaction should be considered invalid.%0
//
#define SCERRIMPLICITEXTERNALABORT       8003L

//
// MessageId: SCERREXPLICITEXTERNALABORT
//
// MessageText:
//
// ScErrExplicitExternalAbort (SCERR8004): The transaction has been explicitly aborted by user code.%0
//
#define SCERREXPLICITEXTERNALABORT       8004L

//
// MessageId: SCERROUTOFMEMORYABORT
//
// MessageText:
//
// ScErrOutOfMemoryAbort (SCERR8005): The transaction was aborted because of a failure to allocate memory.%0
//
#define SCERROUTOFMEMORYABORT            8005L

// Occurs when transaction attempts to access an object that isn't accessible from the specific transaction.
// This could mean that the object either didn't exist when the transaction started, was deleted within the scope of the transaction or was created within the scope of another transaction not yet committed.
// It could also mean that the referenced object isn't accessible to the current transaction because it belongs to another container.
// Simple read operations that fails because of an invalid object access does not abort the transaction but instead generates a ScErrInvalidObjectAccess error. error.
//
// MessageId: SCERRINVALIDOBJECTACCESSABORT
//
// MessageText:
//
// ScErrInvalidObjectAccessAbort (SCERR8006): The transaction was aborted because of an invalid object access.%0
//
#define SCERRINVALIDOBJECTACCESSABORT    8006L

// Occurs when for example a string attribute was written to as an integer. Should not occur unless there is a problem with the binding.
//
// MessageId: SCERRSCHEMACODEMISMATCHABORT
//
// MessageText:
//
// ScErrSchemaCodeMismatchAbort (SCERR8007): The transaction was aborted because pending writes didn't match the schema.%0
//
#define SCERRSCHEMACODEMISMATCHABORT     8007L

// Occurs when for example an attribute is written as an attribute of a certain type and later read or written as an attribute of a different type.
//
// MessageId: SCERRINCONSISTENTCODEABORT
//
// MessageText:
//
// ScErrInconsistentCodeAbort (SCERR8008): The transaction was aborted because code is inconsistent.%0
//
#define SCERRINCONSISTENTCODEABORT       8008L

//
// MessageId: SCERRPROTOTYPEDELETEABORT
//
// MessageText:
//
// ScErrPrototypeDeleteAbort (SCERR8009): The transaction was aborted because of an attempt to delete a prototype.%0
//
#define SCERRPROTOTYPEDELETEABORT        8009L

//
// MessageId: SCERROUTOFFILESTORAGEABORT
//
// MessageText:
//
// ScErrOutOfFileStorageAbort (SCERR8010): The transaction was aborted because of a failure to allocate file storage space.%0
//
#define SCERROUTOFFILESTORAGEABORT       8010L

//
// MessageId: SCERROUTOFSHAREDSTORAGEABORT
//
// MessageText:
//
// ScErrOutOfSharedStorageAbort (SCERR8012): The transaction was aborted because of a failure to allocate shared storage memory.%0
//
#define SCERROUTOFSHAREDSTORAGEABORT     8012L

//
// MessageId: SCERRUNEXPINTERNALERRORABORT
//
// MessageText:
//
// ScErrUnexpInternalErrorAbort (SCERR8013): The transaction was aborted because of an unexpected internal error.%0
//
#define SCERRUNEXPINTERNALERRORABORT     8013L

// This is most likely due to a bug in database binding, not in user code.
//
// MessageId: SCERRCODECONSTRVIOLATIONABORT
//
// MessageText:
//
// ScErrCodeConstrViolationAbort (SCERR8014): The transaction was aborted because code constraint violation. That is, the calling code did something is wasn't supposed to.%0
//
#define SCERRCODECONSTRVIOLATIONABORT    8014L

//
// MessageId: SCERRTRANSACTIONTOBIGABORT
//
// MessageText:
//
// ScErrTransactionToBigAbort (SCERR8015): The transaction was aborted since it violated the maximum size of transactions as allowed by the server.%0
//
#define SCERRTRANSACTIONTOBIGABORT       8015L

// The server runs in a mode that must assure all transactions are written to the log, and hence the alternative strategy to execute a checkpoint when the log overflows, could not be used.
//
// MessageId: SCERRLOGOVERFLOWABORT
//
// MessageText:
//
// ScErrLogOverflowAbort (SCERR8016): The transaction was aborted since writing it to disk would cause the log to overflow.%0
//
#define SCERRLOGOVERFLOWABORT            8016L

//
// MessageId: SCERROUTOFLOGMEMORYABORT
//
// MessageText:
//
// ScErrOutOfLogMemoryAbort (SCERR8017): The transaction was aborted because of a failure to allocate transaction log buffer space.%0
//
#define SCERROUTOFLOGMEMORYABORT         8017L

// The server runs in a mode that must assure that portions of the log ("spaces") are preserved until explicitly released. When the failed transaction was being verified against the underlying set of spaces, the server found that writing it would cause a preserved space to be overwritten, and hence the transaction had to be aborted.
// The cause for this situation is due to log space not being properly released, most likely by some custom component (such as a replicator) not behaving correctly.
//
// MessageId: SCERRNOWRITABLELOGSPACEABORT
//
// MessageText:
//
// ScErrNoWritableLogSpaceAbort (SCERR8032): The transaction was aborted since writing it to disk would cause a space marked for preservation would be overwritten.%0
//
#define SCERRNOWRITABLELOGSPACEABORT     8032L

//
// MessageId: SCERRLOGSPACEEVALFAILEDABORT
//
// MessageText:
//
// ScErrLogSpaceEvalFailedAbort (SCERR8033): The transaction was aborted because unable to evaluate if sufficient space for the log entry could be allocated in the log file.%0
//
#define SCERRLOGSPACEEVALFAILEDABORT     8033L

//
// MessageId: SCERRSERVERNOTFOUND
//
// MessageText:
//
// ScErrServerNotFound (SCERR10001): A server with the specified identity was not found.%0
//
#define SCERRSERVERNOTFOUND              10001L

//
// MessageId: SCERRDATABASENOTFOUND
//
// MessageText:
//
// ScErrDatabaseNotFound (SCERR10002): A database with the specified name was not found.%0
//
#define SCERRDATABASENOTFOUND            10002L

//
// MessageId: SCERRSERVERNOTRUNNING
//
// MessageText:
//
// ScErrServerNotRunning (SCERR10003): The server was not running.%0
//
#define SCERRSERVERNOTRUNNING            10003L

//
// MessageId: SCERRCANTSTARTDATABASE
//
// MessageText:
//
// ScErrCantStartDatabase (SCERR10004): Attempting to start the database failed.%0
//
#define SCERRCANTSTARTDATABASE           10004L

//
// MessageId: SCERRCANTDELETEMAINTENANCEDIR
//
// MessageText:
//
// ScErrCantDeleteMaintenanceDir (SCERR10005): When recovering a previous, not finished maintenance operation, the maintenance directory could not be deleted.%0
//
#define SCERRCANTDELETEMAINTENANCEDIR    10005L

//
// MessageId: SCERRCANTDELETEJOURNALWHENFILES
//
// MessageText:
//
// ScErrCantDeleteJournalWhenFiles (SCERR10006): When recovering a previous, not finished maintenance operation, the server refused to delete the maintenance journal because there were still files in the maintenance directory.%0
//
#define SCERRCANTDELETEJOURNALWHENFILES  10006L

//
// MessageId: SCERRDATABASEENGINETERMINATED
//
// MessageText:
//
// ScErrDatabaseEngineTerminated (SCERR10007): The server detected that the database engine executable (scdbs(w).exe) unexpectedly terminated during a management operation.%0
//
#define SCERRDATABASEENGINETERMINATED    10007L

//
// MessageId: SCERRUPDATEFAILEDTOUNLOAD
//
// MessageText:
//
// ScErrUpdateFailedToUnload (SCERR10008): When the server tried to unload the database during a code library update, unloading failed.%0
//
#define SCERRUPDATEFAILEDTOUNLOAD        10008L

//
// MessageId: SCERRUPDATEFAILED
//
// MessageText:
//
// ScErrUpdateFailed (SCERR10009): Failed to update the database user code library.%0
//
#define SCERRUPDATEFAILED                10009L

//
// MessageId: SCERRUPDATEFAILEDTOCREATEFILES
//
// MessageText:
//
// ScErrUpdateFailedToCreateFiles (SCERR10010): The server failed to create new database files during a code library update.%0
//
#define SCERRUPDATEFAILEDTOCREATEFILES   10010L

//
// MessageId: SCERRSERVERCOMMANDFAILED
//
// MessageText:
//
// ScErrServerCommandFailed (SCERR10011): The operation "{0}" failed.%0
//
#define SCERRSERVERCOMMANDFAILED         10011L

//
// MessageId: SCERRDATABASEDELETEFAILED
//
// MessageText:
//
// ScErrDatabaseDeleteFailed (SCERR10012): Failed to delete the database.%0
//
#define SCERRDATABASEDELETEFAILED        10012L

//
// MessageId: SCERRDATABASENOTSTOPPED
//
// MessageText:
//
// ScErrDatabaseNotStopped (SCERR10013): {0} failed because the database was not stopped.%0
//
#define SCERRDATABASENOTSTOPPED          10013L

//
// MessageId: SCERRWRONGDATABASEENGINECONFIG
//
// MessageText:
//
// ScErrWrongDatabaseEngineConfig (SCERR10014): The database configuration specified a database engine not part of the configured engines known by the server.%0
//
#define SCERRWRONGDATABASEENGINECONFIG   10014L

//
// MessageId: SCERRCONFENGINEEXENOTFOUND
//
// MessageText:
//
// ScErrConfEngineExeNotFound (SCERR10015): The engine executable file was not found in the location as specified in the servers engine configuration.%0
//
#define SCERRCONFENGINEEXENOTFOUND       10015L

//
// MessageId: SCERRUNEXPECTEDCOMMANDEXCEPTION
//
// MessageText:
//
// ScErrUnexpectedCommandException (SCERR10016): {0} failed due to an unexpected problem.%0
//
#define SCERRUNEXPECTEDCOMMANDEXCEPTION  10016L

//
// MessageId: SCERRINSTALLERVS2010NOTFOUND
//
// MessageText:
//
// ScErrInstallerVs2010NotFound (SCERR11002): Visual Studio 2010 is not found in the system. This component is required by Starcounter Visual Studio 2010 developer's integration.%0
//
#define SCERRINSTALLERVS2010NOTFOUND     11002L

//
// MessageId: SCERRINSTALLERVSTUDIOISRUNNING
//
// MessageText:
//
// ScErrInstallerVStudioIsRunning (SCERR11003): One or more instances of Microsoft Visual Studio (devenv.exe) are running. Please shut them down and press OK.%0
//
#define SCERRINSTALLERVSTUDIOISRUNNING   11003L

//
// MessageId: SCERRINSTALLERDXORVIDEOCARD
//
// MessageText:
//
// ScErrInstallerDXOrVideoCard (SCERR11004): Proper Microsoft DirectX version is not installed in the system. This component is required by Starcounter activity monitor component.%0
//
#define SCERRINSTALLERDXORVIDEOCARD      11004L

//
// MessageId: SCERRINSTALLERDXDIAGPROBLEM
//
// MessageText:
//
// ScErrInstallerDxDiagProblem (SCERR11005): DirectX diagnostic utility has exited with the error code.%0
//
#define SCERRINSTALLERDXDIAGPROBLEM      11005L

//
// MessageId: SCERRINSTALLERCORRUPTEDINIFILE
//
// MessageText:
//
// ScErrInstallerCorruptedIniFile (SCERR11006): Can't read keys from INI settings file.%0
//
#define SCERRINSTALLERCORRUPTEDINIFILE   11006L

//
// MessageId: SCERRINSTALLERCANTREADSETTINGVALUE
//
// MessageText:
//
// ScErrInstallerCantReadSettingValue (SCERR11007): Can't read value from INI settings file for a certain key.%0
//
#define SCERRINSTALLERCANTREADSETTINGVALUE 11007L

//
// MessageId: SCERRINSTALLERVSSAFEIMPORTSREGISTRY
//
// MessageText:
//
// ScErrInstallerVSSafeImportsRegistry (SCERR11008): Can't access the Visual Studio safe imports path in the registry. This component is required by Starcounter Visual Studio integration.%0
//
#define SCERRINSTALLERVSSAFEIMPORTSREGISTRY 11008L

//
// MessageId: SCERRINSTALLERSETUPVSINTEGRATION
//
// MessageText:
//
// ScErrInstallerSetupVsIntegration (SCERR11009): The Visual Studio integration setup returned an error.%0
//
#define SCERRINSTALLERSETUPVSINTEGRATION 11009L

//
// MessageId: SCERRINSTALLERVSTUDIO2008
//
// MessageText:
//
// ScErrInstallerVstudio2008 (SCERR11010): Running Visual Studio 2008 for Starcounter integration installation has failed.%0
//
#define SCERRINSTALLERVSTUDIO2008        11010L

//
// MessageId: SCERRINSTALLERREGEDIT
//
// MessageText:
//
// ScErrInstallerRegedit (SCERR11011): Running regedit for Starcounter integration installation has failed.%0
//
#define SCERRINSTALLERREGEDIT            11011L

//
// MessageId: SCERRINSTALLERPROCESSTIMEOUT
//
// MessageText:
//
// ScErrInstallerProcessTimeout (SCERR11012): One of the processes was not finished within allowed time interval.%0
//
#define SCERRINSTALLERPROCESSTIMEOUT     11012L

//
// MessageId: SCERRINSTALLERFIREWALLEXCEPTION
//
// MessageText:
//
// ScErrInstallerFirewallException (SCERR11013): Problem adding Windows Firewall exception.%0
//
#define SCERRINSTALLERFIREWALLEXCEPTION  11013L

//
// MessageId: SCERRINSTALLERWRONGSERVERSNUMBER
//
// MessageText:
//
// ScErrInstallerWrongServersNumber (SCERR11014): The number of installed servers differs from expected. Please properly uninstall previous Starcounter instance before starting a new installation.%0
//
#define SCERRINSTALLERWRONGSERVERSNUMBER 11014L

//
// MessageId: SCERRINSTALLERABORTED
//
// MessageText:
//
// ScErrInstallerAborted (SCERR11015): Installation process has been aborted.%0
//
#define SCERRINSTALLERABORTED            11015L

//
// MessageId: SCERRINSTALLERINTERNALPROBLEM
//
// MessageText:
//
// ScErrInstallerInternalProblem (SCERR11016): General installer internal exception type.%0
//
#define SCERRINSTALLERINTERNALPROBLEM    11016L

//
// MessageId: SCERRINSTALLERPROCESSWRONGERRORCODE
//
// MessageText:
//
// ScErrInstallerProcessWrongErrorCode (SCERR11017): One of the external processes didn't exit with correct exit code.%0
//
#define SCERRINSTALLERPROCESSWRONGERRORCODE 11017L

//
// MessageId: SCERRINSTALLERPROCESSTASKNOTACCOMP
//
// MessageText:
//
// ScErrInstallerProcessTaskNotAccomp (SCERR11018): One of the external processes didn't accomplish the indended task.%0
//
#define SCERRINSTALLERPROCESSTASKNOTACCOMP 11018L

//
// MessageId: SCERRINSTALLERVS2010NOTINITIALIZED
//
// MessageText:
//
// ScErrInstallerVs2010NotInitialized (SCERR11019): The Visual Studio 2010 IDE was never initialized. Please start Visual Studio once before you install.%0
//
#define SCERRINSTALLERVS2010NOTINITIALIZED 11019L

//
// MessageId: SCERRINSTALLERALREADYSTARTED
//
// MessageText:
//
// ScErrInstallerAlreadyStarted (SCERR11020): Another Starcounter setup instance is running.%0
//
#define SCERRINSTALLERALREADYSTARTED     11020L

//
// MessageId: SCERRVSIXENGINENOTFOUND
//
// MessageText:
//
// ScErrVSIXEngineNotFound (SCERR11026): The installer could not find the VSIX installer engine executable.%0
//
#define SCERRVSIXENGINENOTFOUND          11026L

//
// MessageId: SCERRVSIXPACKAGENOTFOUND
//
// MessageText:
//
// ScErrVSIXPackageNotFound (SCERR11027): The installer could not find the VSIX deployment package.%0
//
#define SCERRVSIXPACKAGENOTFOUND         11027L

//
// MessageId: SCERRVSIXENGINECOULDNOTSTART
//
// MessageText:
//
// ScErrVSIXEngineCouldNotStart (SCERR11028): The installer failed to launch the VSIX installer engine.%0
//
#define SCERRVSIXENGINECOULDNOTSTART     11028L

//
// MessageId: SCERRVSIXENGINETIMEDOUT
//
// MessageText:
//
// ScErrVSIXEngineTimedOut (SCERR11029): The VSIX installer engine did not complete in time.%0
//
#define SCERRVSIXENGINETIMEDOUT          11029L

//
// MessageId: SCERRVSIXENGINEFAILED
//
// MessageText:
//
// ScErrVSIXEngineFailed (SCERR11030): The VSIX installer engine failed to install or uninstall the deployment package.%0
//
#define SCERRVSIXENGINEFAILED            11030L

//
// MessageId: SCERRINSTALLERVS2012NOTFOUND
//
// MessageText:
//
// ScErrInstallerVs2012NotFound (SCERR11031): Visual Studio 2012 is not installed. This component is required by Starcounter Visual Studio 2012 developer's integration.%0
//
#define SCERRINSTALLERVS2012NOTFOUND     11031L

//
// MessageId: SCERRINSTALLERSAMEDIRECTORIES
//
// MessageText:
//
// ScErrInstallerSameDirectories (SCERR11032): At least two components have equal installation directories. All components should be installed in different directories.%0
//
#define SCERRINSTALLERSAMEDIRECTORIES    11032L

//
// MessageId: SCERRUNABLETODEPLOYMENT
//
// MessageText:
//
// ScErrUnableToDeployment (SCERR12001): Unable to deploy code library. The code library could not be deployed due to previous problems.%0
//
#define SCERRUNABLETODEPLOYMENT          12001L

//
// MessageId: SCERRUNEXPECTEDDEPLOYMENTEXCEPT
//
// MessageText:
//
// ScErrUnexpectedDeploymentExcept (SCERR12002): Unable to deploy code library. The code library could not be deployed due to an unexpected condition. Please restart Visual Studio using the /log switch or consult the help link to find additional help.%0
//
#define SCERRUNEXPECTEDDEPLOYMENTEXCEPT  12002L

//
// MessageId: SCERRCODELIBARYPATHNOSET
//
// MessageText:
//
// ScErrCodeLibaryPathNoSet (SCERR12003): Can't find code library file. The path to the code library archive was not set. Check your projects "ScArchive"-related properties or consult the help link to find additional help.%0
//
#define SCERRCODELIBARYPATHNOSET         12003L

//
// MessageId: SCERRCODELIBARYFILENOTFOUND
//
// MessageText:
//
// ScErrCodeLibaryFileNotFound (SCERR12004): Can't find code library file. The path to the code library archive referenced a file that was not found. Check your projects "ScArchive"-related properties or consult the help link to find additional help.%0
//
#define SCERRCODELIBARYFILENOTFOUND      12004L

//
// MessageId: SCERRWRONGCODELIBARYEXTENSION
//
// MessageText:
//
// ScErrWrongCodeLibaryExtension (SCERR12005): Can't find code library file. The path to the code library archive referenced a file type not supported. Check your projects "ScArchiveExtension" property or consult the help link to find additional help.%0
//
#define SCERRWRONGCODELIBARYEXTENSION    12005L

//
// MessageId: SCERRCODELIBINPUTDIRNOTFOUND
//
// MessageText:
//
// ScErrCodeLibInputDirNotFound (SCERR12006): The input directory does not exist.%0
//
#define SCERRCODELIBINPUTDIRNOTFOUND     12006L

//
// MessageId: SCERRCODELIBFAILEDNEWCACHEDIR
//
// MessageText:
//
// ScErrCodeLibFailedNewCacheDir (SCERR12007): The cache directory could not be created.%0
//
#define SCERRCODELIBFAILEDNEWCACHEDIR    12007L

//
// MessageId: SCERRWEAVERFILENOTFOUND
//
// MessageText:
//
// ScErrWeaverFileNotFound (SCERR12008): The specified file seem not to exist.%0
//
#define SCERRWEAVERFILENOTFOUND          12008L

//
// MessageId: SCERRWEAVERFILENOTSUPPORTED
//
// MessageText:
//
// ScErrWeaverFileNotSupported (SCERR12009): The specified files extension is not supported.%0
//
#define SCERRWEAVERFILENOTSUPPORTED      12009L

