<Window x:Class="Starcounter.InstallerWPF.DemoSequence.DemoSequenceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Starcounter.InstallerWPF.DemoSequence"
         Width="350" 
        SizeToContent="Height"
        WindowStartupLocation="CenterScreen"
        Topmost="True"
        ShowInTaskbar="False"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStyle="None"
        ResizeMode="NoResize"
        Title="DemoSequenceWindow" >


    <Window.CommandBindings>

        <CommandBinding Command="{x:Static local:DemoSequenceWindow.CloseRoutedCommand}" Executed="Executed_Close_Command" CanExecute="CanExecute_Close_Command" />
        <CommandBinding Command="NavigationCommands.GoToPage" CanExecute="CanExecute_GoToPage_Command" Executed="Executed_GoToPage_Command"  />

    </Window.CommandBindings>

    <Window.Resources>


        <Style TargetType="{x:Type local:BenchmarkDemoControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:BenchmarkDemoControl}">

                        <ControlTemplate.Resources>

                            <!-- Wait_Template -->
                            <DataTemplate x:Key="Wait_Template">

                                <Border Width="25" Height="25">
                                    <Border.Resources>

                                        <SolidColorBrush x:Key="SpinnerRectangleBrush" Color="Black"/>

                                        <Style TargetType="Rectangle">
                                            <Setter Property="RadiusX" Value="15"/>
                                            <Setter Property="RadiusY" Value="15"/>
                                            <Setter Property="Width" Value="70"/>
                                            <Setter Property="Height" Value="30"/>
                                            <Setter Property="Fill" Value="#ffffffff"/>
                                            <Setter Property="Canvas.Left" Value="230"/>
                                            <Setter Property="Canvas.Top" Value="135"/>
                                            <Setter Property="Opacity" Value="0.1"/>
                                        </Style>

                                        <Storyboard x:Key="canvasAnimation">
                                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" SpeedRatio="16" Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="22.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:2" Value="45"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:3" Value="67.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:4" Value="90"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:5" Value="112.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:6" Value="135"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:7" Value="157.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:8" Value="180"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:9" Value="202.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:10" Value="225"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:11" Value="247.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:12" Value="270"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:13" Value="292.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:14" Value="315"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:15" Value="337.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:16" Value="360"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </Border.Resources>

                                    <Viewbox>
                                        <Grid>
                                            <Canvas Height="300" Width="300" Background="Transparent" Name="PART_Canvas">

                                                <Canvas.Triggers>
                                                    <EventTrigger RoutedEvent="Canvas.Loaded">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard Storyboard="{StaticResource canvasAnimation}"/>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Canvas.Triggers>

                                                <!-- First quadrant -->
                                                <Rectangle Opacity="1" />

                                                <Rectangle Opacity="0.05" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="22.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.10" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="45" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.15" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="67.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Second quadrant -->
                                                <Rectangle Opacity="0.20" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="90" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.25">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="112.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.30" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="135" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.35" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="157.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Third quadrant -->
                                                <Rectangle Opacity="0.40">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="180" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.45">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="202.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.50">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="225" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.55">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="247.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Fourth quadrant -->
                                                <Rectangle Opacity="0.60">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="270" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.65">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="292.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.70">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="315" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.75">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="337.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>


                                                <Canvas.RenderTransform>
                                                    <RotateTransform Angle="0" CenterX="150" CenterY="150"/>
                                                </Canvas.RenderTransform>
                                            </Canvas>
                                        </Grid>
                                    </Viewbox>

                                </Border>

                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Unknown_template -->
                            <DataTemplate x:Key="benchmark_bottom_Blank_template">


                            </DataTemplate>


                            <!-- STATUS: benchmark_bottom_Unknown_template -->
                            <DataTemplate x:Key="benchmark_bottom_Unknown_template">
                                <TextBlock Foreground="White"  Text="benchmark_bottom_Unknown_template" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_VisualStudioStarting_template -->
                            <DataTemplate x:Key="benchmark_bottom_VisualStudioStarting_template">
                                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >

                                    <Grid.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Grid.Triggers>

                                    <StackPanel   Orientation="Horizontal">

                                        <TextBlock Foreground="White" Margin="5" Text="Loading project"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                                        <ContentPresenter Grid.Column="1" ContentTemplate="{StaticResource Wait_Template}" VerticalAlignment="Center" />
                                    </StackPanel>


                                </Grid>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_ReadyToBuild_template -->
                            <DataTemplate x:Key="benchmark_bottom_ReadyToBuild_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Margin="0" Foreground="White" Text="Press" VerticalAlignment="Center"/>

                                        <Border BorderBrush="Black" Background="White" VerticalAlignment="Center" CornerRadius="3" Padding="6,5,6,5" Margin="5">
                                            <TextBlock Text="Ctrl" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                        </Border>

                                        <TextBlock Margin="0" Foreground="White" Text="+" VerticalAlignment="Center"/>

                                        <Border BorderBrush="Black" Background="White" VerticalAlignment="Center" CornerRadius="3" Padding="6,5,6,5" Margin="5">
                                            <TextBlock Text="F5" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                        </Border>
                                        <TextBlock  Foreground="White" Margin="0,0,0,0" Text="inside Visual Studio to run" VerticalAlignment="Center"/>
                                    </StackPanel>


                                    <!--<TextBlock  Foreground="White" Text="Press" Margin="0,6,0,0"  />
                                <Grid Margin="5,0,5,0">
                                    <Image  Source="images/Key.png" Height="32" />
                                    <TextBlock Margin="0,0,0,4" FontWeight="Bold"  Foreground="Black" Text="F5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <TextBlock  Foreground="White" Margin="0,6,0,0" Text="inside Visual Studio to run"/>-->
                                </StackPanel>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Next_template -->
                            <DataTemplate x:Key="benchmark_bottom_Next_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>

                                    <Button Command="{x:Static local:BenchmarkDemoControl.NextRoutedCommand}" CommandParameter="kill" HorizontalAlignment="Right" Style="{DynamicResource Start_TabButton_Style}" VerticalContentAlignment="Stretch" >
                                        <Grid VerticalAlignment="Bottom" >
                                            <StackPanel Orientation="Horizontal">

                                                <TextBlock Foreground="White"  Text="Press" VerticalAlignment="Center"   />
                                                <Image Margin="5" Height="32" Stretch="Uniform" Source="images/stop_32x32.png" VerticalAlignment="Center"/>
                                                <TextBlock Foreground="White"  Text="to jump to the next demonstration"   VerticalAlignment="Center"   />
                                            </StackPanel>
                                        </Grid>
                                    </Button>

                                </StackPanel>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Exited_template -->
                            <DataTemplate x:Key="benchmark_bottom_Exited_template">
                                <TextBlock Foreground="White"  Text="benchmark_bottom_Unknown_template" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Running_template -->
                            <DataTemplate x:Key="benchmark_bottom_Running_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Margin="0" Foreground="White" Text="Demo is running" VerticalAlignment="Center"/>
                                    </StackPanel>

                                </StackPanel>
                            </DataTemplate>

                        </ControlTemplate.Resources>


                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Border TextElement.Foreground="White"  Padding="5" BorderBrush="#90ffffff" Background="#88000000" BorderThickness="2"  CornerRadius="10"  >

                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Image Margin="0,0,0,5" VerticalAlignment="Top"  Source="images/chartdocument_128x128.png" Height="100" Stretch="Uniform" />

                                    <StackPanel Grid.Column="1">
                                        <TextBlock Margin="3,3,0,0" TextWrapping="Wrap" Text="{Binding Title}" FontSize="17"/>
                                        <TextBlock Margin="3,3,3,3" TextWrapping="Wrap" Text="{Binding Description}"/>
                                    </StackPanel>

                                    <ContentPresenter  x:Name="PART_Status" Margin="5,5,5,5" Grid.Row="1"  Grid.ColumnSpan="2" Height="40"   />

                                </Grid>

                            </Border>


                            <Button Margin="0,10,0,0" Grid.Row="1" Command="{x:Static local:BenchmarkDemoControl.NextRoutedCommand}" Style="{DynamicResource SkippToNext_TabButton_Style}" HorizontalAlignment="Right" >
                                <!--<StackPanel Orientation="Horizontal" >
                                    <TextBlock Foreground="White"  Text="Next"  HorizontalAlignment="Center" VerticalAlignment="Center"   />
                                    <Image Margin="5,0,5,0" Height="32" Stretch="Uniform" Source="images/skipp_32x32.png" VerticalAlignment="Center"/>
                                </StackPanel>-->
                                <Image Margin="5,0,5,0" Height="32" Stretch="Uniform" Source="images/skipp_32x32.png" VerticalAlignment="Center"/>

                            </Button>


                        </Grid>


                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Unknown">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Unknown_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Starting">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_VisualStudioStarting_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Started">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_ReadyToBuild_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Next">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Next_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Exited">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Exited_template}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Running">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Running_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Blank">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Blank_template}" />
                            </DataTrigger>


                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type local:WebApplicationDemoControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:WebApplicationDemoControl}">

                        <ControlTemplate.Resources>

                            <!-- Wait_Template -->
                            <DataTemplate x:Key="Wait_Template">

                                <Border Width="25" Height="25">
                                    <Border.Resources>

                                        <SolidColorBrush x:Key="SpinnerRectangleBrush" Color="Black"/>

                                        <Style TargetType="Rectangle">
                                            <Setter Property="RadiusX" Value="15"/>
                                            <Setter Property="RadiusY" Value="15"/>
                                            <Setter Property="Width" Value="70"/>
                                            <Setter Property="Height" Value="30"/>
                                            <Setter Property="Fill" Value="#ffffffff"/>
                                            <Setter Property="Canvas.Left" Value="230"/>
                                            <Setter Property="Canvas.Top" Value="135"/>
                                            <Setter Property="Opacity" Value="0.1"/>
                                        </Style>

                                        <Storyboard x:Key="canvasAnimation">
                                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" SpeedRatio="16" Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="22.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:2" Value="45"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:3" Value="67.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:4" Value="90"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:5" Value="112.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:6" Value="135"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:7" Value="157.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:8" Value="180"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:9" Value="202.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:10" Value="225"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:11" Value="247.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:12" Value="270"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:13" Value="292.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:14" Value="315"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:15" Value="337.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:16" Value="360"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </Border.Resources>

                                    <Viewbox>
                                        <Grid>
                                            <Canvas Height="300" Width="300" Background="Transparent" Name="PART_Canvas">

                                                <Canvas.Triggers>
                                                    <EventTrigger RoutedEvent="Canvas.Loaded">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard Storyboard="{StaticResource canvasAnimation}"/>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </Canvas.Triggers>

                                                <!-- First quadrant -->
                                                <Rectangle Opacity="1" />

                                                <Rectangle Opacity="0.05" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="22.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.10" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="45" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.15" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="67.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Second quadrant -->
                                                <Rectangle Opacity="0.20" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="90" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <Rectangle Opacity="0.25">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="112.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.30" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="135" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.35" >
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="157.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Third quadrant -->
                                                <Rectangle Opacity="0.40">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="180" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.45">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="202.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.50">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="225" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.55">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="247.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <!-- Fourth quadrant -->
                                                <Rectangle Opacity="0.60">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="270" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.65">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="292.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.70">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="315" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Opacity="0.75">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform Angle="337.5" CenterX="-80" CenterY="15"/>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>


                                                <Canvas.RenderTransform>
                                                    <RotateTransform Angle="0" CenterX="150" CenterY="150"/>
                                                </Canvas.RenderTransform>
                                            </Canvas>
                                        </Grid>
                                    </Viewbox>

                                </Border>

                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Unknown_template -->
                            <DataTemplate x:Key="benchmark_bottom_Blank_template">


                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Unknown_template -->
                            <DataTemplate x:Key="benchmark_bottom_Unknown_template">


                                <TextBlock Foreground="White"  Text="benchmark_bottom_Unknown_template" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  />



                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_VisualStudioStarting_template -->
                            <DataTemplate x:Key="benchmark_bottom_VisualStudioStarting_template">
                                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >

                                    <Grid.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Grid.Triggers>

                                    <StackPanel   Orientation="Horizontal">

                                        <TextBlock Foreground="White" Margin="5" Text="Loading project"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                                        <ContentPresenter Grid.Column="1" ContentTemplate="{StaticResource Wait_Template}" VerticalAlignment="Center" />
                                    </StackPanel>


                                </Grid>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_ReadyToBuild_template -->
                            <DataTemplate x:Key="benchmark_bottom_ReadyToBuild_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Margin="0" Foreground="White" Text="Press" VerticalAlignment="Center"/>

                                        <Border BorderBrush="Black" Background="White" VerticalAlignment="Center" CornerRadius="3" Padding="6,5,6,5" Margin="5">
                                            <TextBlock Text="Ctrl" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                        </Border>

                                        <TextBlock Margin="0" Foreground="White" Text="+" VerticalAlignment="Center"/>

                                        <Border BorderBrush="Black" Background="White" VerticalAlignment="Center" CornerRadius="3" Padding="6,5,6,5" Margin="5">
                                            <TextBlock Text="F5" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                        </Border>
                                        <TextBlock  Foreground="White" Margin="0,0,0,0" Text="inside Visual Studio to run" VerticalAlignment="Center"/>
                                    </StackPanel>


                                    <!--<TextBlock  Foreground="White" Text="Press" Margin="0,6,0,0"  />
                                <Grid Margin="5,0,5,0">
                                    <Image  Source="images/Key.png" Height="32" />
                                    <TextBlock Margin="0,0,0,4" FontWeight="Bold"  Foreground="Black" Text="F5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <TextBlock  Foreground="White" Margin="0,6,0,0" Text="inside Visual Studio to run"/>-->
                                </StackPanel>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Next_template -->
                            <DataTemplate x:Key="benchmark_bottom_Next_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>

                                    <Button Command="{x:Static local:BenchmarkDemoControl.NextRoutedCommand}" HorizontalAlignment="Right" Style="{DynamicResource Start_TabButton_Style}" VerticalContentAlignment="Stretch" >
                                        <Grid VerticalAlignment="Bottom" >
                                            <StackPanel Orientation="Horizontal">

                                                <TextBlock Foreground="White"  Text="Press" VerticalAlignment="Center"   />
                                                <Image Margin="5" Height="32" Stretch="Uniform" Source="images/stop_32x32.png" VerticalAlignment="Center"/>
                                                <TextBlock Foreground="White"  Text="to skipp to the next demonstration"   VerticalAlignment="Center"   />
                                            </StackPanel>

                                        </Grid>
                                    </Button>

                                </StackPanel>
                            </DataTemplate>

                            <!-- STATUS: benchmark_bottom_Exited_template -->
                            <DataTemplate x:Key="benchmark_bottom_Exited_template">
                                <TextBlock Foreground="White"  Text="benchmark_bottom_Unknown_template" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                            </DataTemplate>


                            <!-- STATUS: benchmark_bottom_Running_template -->
                            <DataTemplate x:Key="benchmark_bottom_Running_template">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >

                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Margin="0" Foreground="White" Text="Project is running" VerticalAlignment="Center"/>
                                    </StackPanel>

                                </StackPanel>
                            </DataTemplate>

                        </ControlTemplate.Resources>


                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Border TextElement.Foreground="White"  Padding="5" BorderBrush="#90ffffff" Background="#88000000" BorderThickness="2"  CornerRadius="10"  >

                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Image Margin="0,0,0,5" VerticalAlignment="Top"  Source="images/internetdocument_128x128.png" Height="100" Stretch="Uniform" />

                                    <StackPanel Grid.Column="1">
                                        <TextBlock Margin="3,3,0,0" TextWrapping="Wrap" Text="{Binding Title}" FontSize="17"/>
                                        <TextBlock Margin="3,3,3,3" TextWrapping="Wrap" Text="{Binding Description}"/>
                                    </StackPanel>

                                    <ContentPresenter  x:Name="PART_Status" Margin="5,5,5,5" Grid.Row="1"  Grid.ColumnSpan="2" Height="40"   />


                                </Grid>

                            </Border>


                            <Button Margin="0,10,0,0" Grid.Row="1" Command="{x:Static local:BenchmarkDemoControl.NextRoutedCommand}" Style="{DynamicResource SkippToNext_TabButton_Style}" HorizontalAlignment="Right" >
                                <!--<StackPanel Orientation="Horizontal" >
                                    <TextBlock Foreground="White"  Text="The End"  HorizontalAlignment="Center" VerticalAlignment="Center"   />
                                    <Image Margin="5,0,5,0" Height="32" Stretch="Uniform" Source="images/skipp_32x32.png" VerticalAlignment="Center"/>
                                </StackPanel>-->
                                <Image Margin="5,0,5,0" Height="32" Stretch="Uniform" Source="images/skipp_32x32.png" VerticalAlignment="Center"/>
                            </Button>

                        </Grid>


                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Unknown">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Unknown_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Starting">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_VisualStudioStarting_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Started">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_ReadyToBuild_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Next">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Next_template}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Exited">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Exited_template}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Running">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Running_template}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=TemplateName}" Value="Blank">
                                <Setter TargetName="PART_Status" Property="ContentTemplate" Value="{StaticResource benchmark_bottom_Blank_template}" />
                            </DataTrigger>


                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="SkippToNext_TabButton_Style" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid   >
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FFE37676"   />
                            </Trigger>

                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>


                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>



        </Style>


        <Style x:Key="Close_TabButton_Style" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ToolTip" Value="Close"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid Width="16" Height="16" >
                            <ContentPresenter   SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />

                            <Viewbox>
                                <Grid>
                                    <Ellipse Fill="{TemplateBinding Background}" />

                                    <Path Fill="White" Stroke="Black" StrokeThickness="0" Data="M3,0 L5,0 5,3 8,3 8,5 5,5 5,8 3,8 3,5 0,5 0,3 3,3 3,0 " StrokeStartLineCap="Square" StrokeEndLineCap="Square">
                                        <Path.LayoutTransform>
                                            <RotateTransform Angle="45"/>
                                        </Path.LayoutTransform>
                                    </Path>
                                </Grid>
                            </Viewbox>


                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FFB10000"   />
                            </Trigger>

                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>


                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>



        </Style>


        <Style x:Key="Start_TabButton_Style" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ToolTip" Value="Close"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid   >
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FFE37676"   />
                            </Trigger>

                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>


                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>



        </Style>


        <Style x:Key="Link_Button_Style" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid Background="Transparent">
                            <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#FFd0d0d0"   />
                            </Trigger>

                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"   />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>



        </Style>


        <!--The End Template -->
        <DataTemplate x:Key="theend_template">

            <Border TextElement.Foreground="White"  Padding="5" BorderBrush="#90ffffff" Background="#88000000" BorderThickness="2"  CornerRadius="10"  >

                <Border.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>


                    <Image Margin="0,0,0,5" VerticalAlignment="Top"  Source="images/document_64x64.png" Height="100"  />
                    <Image Margin="0,15,0,5" VerticalAlignment="Top"  Source="images/starcounter_60x60.png" Height="60"  />

                    <StackPanel Grid.Column="1" Grid.Row="0" Grid.IsSharedSizeScope="True">
                        <TextBlock  Margin="3,3,0,0" TextWrapping="Wrap" Text="Starcounter" FontSize="17"/>
                        <TextBlock  Margin="3,3,0,0" TextWrapping="Wrap">
                            Visit our 
                            <Hyperlink Foreground="#FF6495ED" Command="NavigationCommands.GoToPage" CommandParameter="https://github.com/starcounter/starcounter/wiki">wiki</Hyperlink> 
                            for documentation and our <Hyperlink Foreground="#FF6495ED" Command="NavigationCommands.GoToPage" CommandParameter="http://www.starcounter.com/forum/">forum</Hyperlink>
                            for discussions.
                        </TextBlock>

                        <!--<Button HorizontalAlignment="Left" Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="https://github.com/starcounter/starcounter/wiki/">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image HorizontalAlignment="Left" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="images/icon_wiki.png" Stretch="None" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Wiki"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>

                        </Button>-->

                        <!--<Button  HorizontalAlignment="Left" Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="http://www.starcounter.com/forum/">


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image HorizontalAlignment="Left" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="images/icon_forum.png" Stretch="None" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Forum"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>



                        </Button>-->

                    </StackPanel>

                    <!--<UniformGrid Grid.IsSharedSizeScope="True"  Grid.Row="1" Grid.ColumnSpan="2" Rows="2" Columns="2" Margin="20,0,20,5" >

                        <Button Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="http://www.starcounter.com/">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image RenderOptions.BitmapScalingMode="NearestNeighbor" Width="26" Height="26" Source="images/starcounter_26x26.png" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Starcounter"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>

                        </Button>

                        <Button Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="http://www.starcounter.com/Blogs/">


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>


                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image Source="images/icon_blog.png" Stretch="None" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Our blog"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>
                        </Button>

                        <Button Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="https://github.com/starcounter/starcounter/wiki/">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image Source="images/icon_wiki.png" Stretch="None" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Wiki"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>

                        </Button>

                        <Button Style="{DynamicResource Link_Button_Style}" Command="NavigationCommands.GoToPage" CommandParameter="http://www.starcounter.com/forum/">


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="image"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="text"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Width="42" Height="26" >
                                    <Image Source="images/icon_forum.png" Stretch="None" />
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="5" Text="Forum"  HorizontalAlignment="Left" VerticalAlignment="Center" />

                            </Grid>



                        </Button>
                    </UniformGrid>-->

                </Grid>

            </Border>




        </DataTemplate>

        <Style x:Key="mainborder" TargetType="{x:Type Border}">
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Background" Value="#08000000"/>
            <Setter Property="BorderBrush" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>


                <!--<EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"   To="1" Duration="0:0:0.2" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>-->

                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>-->


            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid >

        <!-- Base -->
        <Border CornerRadius="15" Style="{DynamicResource mainborder}">

            <Border  BorderBrush="#30000000" BorderThickness="1" Margin="1"   CornerRadius="14">

                <Border  BorderBrush="#20000000" BorderThickness="1" Margin="1"   CornerRadius="12">

                    <Border  BorderBrush="#80000000" Background="#b8000000" BorderThickness="1" Margin="0"   CornerRadius="11">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Starcounter Demonstration" Margin="5" FontSize="18" Grid.Row="0" Foreground="White" HorizontalAlignment="Center" />
                            <Button Margin="5" Style="{DynamicResource Close_TabButton_Style}" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{x:Static local:DemoSequenceWindow.CloseRoutedCommand}" />

                            <ContentPresenter  x:Name="PART_Content" Margin="15,5,15,15"  Grid.Row="1"   />

                        </Grid>

                    </Border>

                </Border>

            </Border>

        </Border>


    </Grid>

</Window>
