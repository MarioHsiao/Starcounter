<Window x:Class="Starcounter.InstallerWPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Starcounter.InstallerWPF"
    xmlns:converters="clr-namespace:Starcounter.InstallerWPF.Converters"
    ResizeMode="NoResize"
    Foreground="White"
    SnapsToDevicePixels="true"
    TextOptions.TextFormattingMode="Display"        
    Title="Starcounter Setup" Width="776" Height="480">

    <Window.Resources>

        <converters:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <local:ValueToIsIndeterminate x:Key="valueToIsIndeterminate"/>



    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="NavigationCommands.NextPage" CanExecute="CanExecute_NextPage_Command" Executed="Executed_NextPage_Command"  />
        <CommandBinding Command="NavigationCommands.PreviousPage" CanExecute="CanExecute_PreviousPage_Command" Executed="Executed_PreviousPage_Command"  />
        <CommandBinding Command="NavigationCommands.GoToPage" CanExecute="CanExecute_GoToPage_Command" Executed="Executed_GoToPage_Command"  />
        <CommandBinding Command="ApplicationCommands.Close" CanExecute="CanExecute_Close_Command" Executed="Executed_Close_Command"  />
        <CommandBinding Command="ApplicationCommands.Open" CanExecute="CanExecute_ChooseFolder_Command" Executed="Executed_ChooseFolder_Command"/>
        <CommandBinding Command="{x:Static local:MainWindow.StartRoutedCommand}"  Executed="Executed_Start_Command" CanExecute="CanExecute_Start_Command" />
    </Window.CommandBindings>


    <Window.Background>
        <ImageBrush ImageSource="resources/carbon_wallpaper.jpg" Stretch="UniformToFill" Viewport="0,0,1,1" Viewbox="0,0,1,1" TileMode="Tile" />
    </Window.Background>

    <Grid SnapsToDevicePixels="True" >

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <!-- Content -->
        <Grid  Grid.Column="1">

            <Grid.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="776" To="0" Duration="0:0:0.7" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Grid.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Grid.RenderTransform>

            <ContentPresenter x:Name="PART_Content" Content="{Binding ElementName=pages_lb, Path=SelectedItem}" />
        </Grid>



        <AdornerDecorator  HorizontalAlignment="Stretch" Grid.ColumnSpan="2" >

            <Grid>


                <Polygon x:Name="marker" Fill="{DynamicResource LeftPanel_Background}" Stroke="Gold" StrokeThickness="0" HorizontalAlignment="Left" Grid.RowSpan="4">

                    <!--<Polygon.Fill>

                            <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#ef303030" Offset="0"/>
                                <GradientStop Color="#ef454545" Offset="0.4"/>
                                <GradientStop Color="#ef454545" Offset="0.6"/>
                                <GradientStop Color="#ef303030" Offset="1"/>
                            </LinearGradientBrush>
                        </Polygon.Fill>-->

                    <Polygon.RenderTransform>
                        <TranslateTransform X="0" Y="0" />
                    </Polygon.RenderTransform>

                    <Polygon.Effect>

                        <DropShadowEffect Direction="270" Opacity="1" Color="#FF000000" BlurRadius="10" ShadowDepth="5" />

                    </Polygon.Effect>

                </Polygon>



            </Grid>

        </AdornerDecorator>





        <!-- Left panel -->
        <Grid x:Name="grid_leftpanel" Width="205" >

            <Grid.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-205" To="0" Duration="0:0:0.7" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Grid.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Grid.RenderTransform>

            <Grid  >

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Logo -->
                <Grid Margin="0,-2,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top" >

                    <Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="None" Source="..\resources\SC_200.png" />

                </Grid>

                <!-- Devider -->
                <!--<Border Grid.Row="1" Margin="30,0,30,0" Height="2" Background="#15ffffff" BorderBrush="#50000000" BorderThickness="1,1,0,0"   />-->

                <ListBox IsSynchronizedWithCurrentItem="True" Margin="0,60,0,0" SelectionMode="Single" IsEnabled="False" x:Name="pages_lb" SelectedIndex="0" SelectionChanged="pages_lb_SelectionChanged" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, Path=Pages}" Grid.Row="2" Background="Transparent" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">

                    <ListBox.Resources>
                        <!-- Disabled color -->
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>-->

                        <!-- ### ListBox ###  -->
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="BorderThickness" Value="0" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <ScrollViewer  Focusable="false" >
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Background" Value="Transparent" />
                                            </Trigger>
                                            <Trigger Property="IsGrouping" Value="true">
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ListBox.Resources>

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="25,0,25,2.5"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Background" Value="{DynamicResource Selector_Background}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource Selector_Foreground}"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">

                                        <ContentPresenter x:Name="contentPresenter" Tag="{TemplateBinding Background}"  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"  Margin="{TemplateBinding Padding}" />


                                        <ControlTemplate.Triggers>

                                            <Trigger Property="IsSelected" Value="true">

                                                <Setter Property="TextElement.Foreground" Value="{DynamicResource Selector_Foreground_IsSelected}"/>
                                                <Setter Property="Background" Value="{DynamicResource Selector_Background_IsSelected}"/>
                                                <Setter Property="Tag" Value="{DynamicResource Selector_Background_IsSelected}"/>

                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Label Content="{Binding DisplayName}" Visibility="{Binding Converter={StaticResource booleanToVisibilityConverter}, ConverterParameter=true, Path=HasProgress}" Background="{TemplateBinding Tag}" Foreground="{TemplateBinding TextElement.Foreground}" Style="{DynamicResource ShadowLabelStyle}" />

                                <Grid Grid.Row="2" >

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <ProgressBar IsIndeterminate="{Binding Path=Progress, Converter={StaticResource valueToIsIndeterminate}}" Visibility="{Binding Converter={StaticResource booleanToVisibilityConverter}, Path=HasProgress}" Background="Black" BorderThickness="0" Value="{Binding Progress}" Height="15" Margin="0,4,0,2.5" />
                                    <TextBlock Foreground="White" Grid.Row="1" TextTrimming="WordEllipsis" TextWrapping="Wrap" Visibility="{Binding Converter={StaticResource booleanToVisibilityConverter}, Path=HasProgress}" Text="{Binding ProgressText}" Margin="1,2.5,0,0"  />
                                </Grid>


                            </Grid>

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>

                <!-- Devider -->
                <!--<Border Grid.Row="3" Margin="30,0,30,40" Height="2" Background="#15ffffff" BorderBrush="#50000000" BorderThickness="1,1,0,0"   />-->

            </Grid>

        </Grid>


    </Grid>

</Window>
