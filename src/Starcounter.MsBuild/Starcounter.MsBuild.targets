<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- 
      Keeping the codegen version directly here instead of reading it from the codegenerator
      to avoid that Starcounter.MsBuild.dll gets locked during compilation of Starcounter 
    -->
    <CSharpCodegenVersion>3</CSharpCodegenVersion>

    <!--<PrepareForBuildDependsOn>$(PrepareForBuildDependsOn);GetTypedJsonCSharpCodegenVersion</PrepareForBuildDependsOn>-->
    <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateTypedJsonCode</CoreCompileDependsOn>
    <CleanDependsOn>$(CleanDependsOn);CleanupOldJsonGeneratedFiles;CleanWeaverArtifacts</CleanDependsOn>
    <CoreBuildDependsOn>$(CoreBuildDependsOn);BuildTimeWeave</CoreBuildDependsOn>
  </PropertyGroup>

  <!-- Compile-time weaving related properties -->
  <PropertyGroup>
    <FullOutputPath>$(MSBuildProjectDirectory)\$(OutputPath)</FullOutputPath>
    <WeaverOutputDirectory>$(FullOutputPath).starcounter</WeaverOutputDirectory>
    <WeaverCacheDirectory Condition="( '$(WeaverCacheDirectory)' == '' )">$(WeaverOutputDirectory)\cache</WeaverCacheDirectory>
    <DisableWeaverCache Condition="( '$(DisableWeaverCache)' == '' )">false</DisableWeaverCache>
  </PropertyGroup>

  <ItemGroup>
    <AvailableItemName Include="TypedJSON"/>
  </ItemGroup>
  
  <UsingTask TaskName="Starcounter.Internal.MsBuild.JsonToTypedJsonCsMsBuildTask" AssemblyFile="$(StarcounterBin)\Starcounter.MsBuild.dll" />
  <UsingTask TaskName="Starcounter.Weaver.MsBuild.Weave" AssemblyFile="$(StarcounterBin)\Starcounter.Weaver.dll" />
  
  <!--<UsingTask TaskName="Starcounter.Internal.MsBuild.GetTypedJsonCSharpCodegenVersionTask" AssemblyFile="$(StarcounterBin)\Starcounter.MsBuild.dll" />-->

  <!--<Target Name="GetTypedJsonCSharpCodegenVersion">
    <GetTypedJsonCSharpCodegenVersionTask>
      <Output TaskParameter="CSharpCodegenVersion" PropertyName="CSharpCodegenVersion"></Output>
    </GetTypedJsonCSharpCodegenVersionTask>
  </Target>-->
  
  <Target Name="GenerateTypedJSONCode" Inputs="@(TypedJSON)" Outputs="@(TypedJSON->'$(IntermediateOutputPath)%(RelativeDir)%(FileName)-$(CSharpCodegenVersion)%(Extension).g.cs')">
    <JsonToTypedJsonCsMsBuildTask
       InputFiles="@(TypedJSON)"
       OutputFiles="@(TypedJSON->'$(IntermediateOutputPath)%(RelativeDir)%(FileName)-$(CSharpCodegenVersion)%(Extension).g.cs')" >
       <Output TaskParameter="OutputFiles" ItemName="TypedJSONFiles" />
    </JsonToTypedJsonCsMsBuildTask>
    <ItemGroup>
      <Compile Include="@(TypedJSONFiles)" />
    </ItemGroup>
  </Target>
  
  <!-- Cleans up JSON generated source files. -->
  <Target Name="CleanupOldJsonGeneratedFiles">
    <ItemGroup>
      <GeneratedFilesList Include="$(IntermediateOutputPath)**\*.json.g.cs" />
    </ItemGroup>
    <Delete Files="@(GeneratedFilesList)" />
  </Target>

  <Target Name="BuildTimeWeave" Condition="( '$(RunCompileTimeWeaver)' == 'true' )">
    
    <Weave 
      MSBuildArchitecture= "x64"
      AssemblyFile="$(TargetPath)"
      CacheDirectory="$(WeaverCacheDirectory)"
      DisableCache="$(DisableWeaverCache)"
      />
    
    <Message Text="Successfully weaved $(TargetPath)" />
    
  </Target>

  <!-- Cleans up cached weaver artifacts. -->
  <Target Name="CleanWeaverArtifacts" Condition="( '$(RunCompileTimeWeaver)' == 'true' )">
    
    <ItemGroup>
      <CachedWeaverFiles Include="$(WeaverCacheDirectory)\*.schema" />
      <CachedWeaverFiles Include="$(WeaverCacheDirectory)\*.dll" />
      <CachedWeaverFiles Include="$(WeaverCacheDirectory)\*.exe" />
      <CachedWeaverFiles Include="$(WeaverCacheDirectory)\*.pdb" />
    </ItemGroup>
    <Delete Files="@(CachedWeaverFiles)" />

    <ItemGroup>
      <OutputSchemaFiles Include="$(FullOutputPath)\*.schema" />
    </ItemGroup>
    <Delete Files="@(OutputSchemaFiles)" />

    <Message Text="Successfully cleaned weaver artifacts in $(FullOutputPath) and $(WeaverCacheDirectory)" />
    
  </Target>
  
</Project>


