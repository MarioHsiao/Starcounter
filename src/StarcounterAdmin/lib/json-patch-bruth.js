var __indexOf = [].indexOf || function (a) { for (var b = 0, c = this.length; b < c; b++) { if (b in this && this[b] === a) return b } return -1 }, __hasProp = {}.hasOwnProperty, __extends = function (a, b) { function d() { this.constructor = a } for (var c in b) { if (__hasProp.call(b, c)) a[c] = b[c] } d.prototype = b.prototype; a.prototype = new d; a.__super__ = b.prototype; return a }; (function (a, b) { if (typeof required === "undefined") { return b(this[a] = {}) } else if (typeof exports === "undefined") { return define(a, ["exports"], b) } else { return b(exports) } })("jsonpatch", function (a) { var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w; v = Object.prototype.toString; j = Object.prototype.hasOwnProperty; k = function (a) { return v.call(a) === "[object Array]" }; m = function (a) { return v.call(a) === "[object Object]" }; n = function (a) { return v.call(a) === "[object String]" }; w = function (a, b, c) { var d, e, f, g, h; if (a === b) { return a !== 0 || 1 / a === 1 / b } if (a === null || b === null) { return a === b } d = v.call(a); if (d !== v.call(b)) { return false } switch (d) { case "[object String]": String(a) === String(b); break; case "[object Number]": a = +a; b = +b; if (a !== a) { b !== b } else { if (a === 0) { 1 / a === 1 / b } else { a === b } } break; case "[object Boolean]": +a === +b } if (typeof a !== "object" || typeof b !== "object") { return false } f = c.length; while (f--) { if (c[f] === a) { return true } } c.push(a); h = 0; g = true; if (d === "[object Array]") { h = a.length; g = h === b.length; if (g) { while (h--) { if (!(g = __indexOf.call(a, h) >= 0 === __indexOf.call(b, h) >= 0 && w(a[h], b[h], c))) { break } } } } else { if (__indexOf.call(a, "constructor") >= 0 !== __indexOf.call(b, "constructor") >= 0 || a.constructor !== b.constructor) { return false } for (e in a) { if (j.call(a, e)) { h++; if (!(g = j.call(b, e) && w(a[e], b[e], c))) { break } } } if (g) { for (e in b) { if (j.call(b, e) && !(h--)) { break } } g = !h } } c.pop(); return g }; l = function (a, b) { return w(a, b, []) }; d = function (a) { function b(a) { this.name = "JSONPatchError"; this.message = a || "JSON patch error" } __extends(b, a); return b }(Error); b = function (a) { function b(a) { this.name = "InvalidPatch"; this.message = a || "Invalid patch" } __extends(b, a); return b }(d); f = function (a) { function b(a) { this.name = "PatchConflictError"; this.message = a || "Patch conflict" } __extends(b, a); return b }(d); e = function () { function a(a, c) { var d, e, f, g, h; if (c == null) { c = true } if (a && (f = a.split("/")).shift() !== "") { throw new b } for (d = g = 0, h = f.length; g < h; d = ++g) { e = f[d]; f[d] = decodeURIComponent(e) } this.accessor = f.pop(); this.path = f } a.prototype.getObject = function (a) { var b, c, d, e; e = this.path; for (c = 0, d = e.length; c < d; c++) { b = e[c]; if (k(a)) { b = parseInt(b, 10) } if (!j.call(a, b)) { throw new f("Array location out of bounds or not an instance property") } a = a[b] } return a }; return a }(); c = function () { function a(a) { var c, d, f, g, h; for (c in a) { if (!(f = p[c])) { continue } if (this.operation) { throw new b } if ((d = r[c]) && a[d] === void 0) { throw new b("Patch member " + d + " not defined") } this.operation = p[c]; this.pointer = new e(a[c]); h = a[d]; if (g = o[c]) { h = g(h) } this.supplement = h } if (!this.operation) { throw new b } } a.prototype.apply = function (a) { return this.operation(a, this.pointer, this.supplement) }; return a }(); g = function (a, b, c) { var d, e; e = b.getObject(a); d = b.accessor; if (k(e)) { d = parseInt(d, 10); if (d < 0 || d > e.length) { throw new f("Index " + d + " out of bounds") } e.splice(d, 0, c) } else { if (j.call(e, d)) { throw new f("Value at " + d + " exists") } e[d] = c } }; s = function (a, b) { var c, d; d = b.getObject(a); c = b.accessor; if (k(d)) { c = parseInt(c, 10); if (!j.call(d, c)) { throw new f("Value at " + c + " does not exist") } d.splice(c, 1) } else { if (!j.call(d, c)) { throw new f("Value at " + c + " does not exist") } delete d[c] } }; t = function (a, b, c) { var d, e; e = b.getObject(a); d = b.accessor; if (k(e)) { d = parseInt(d, 10); if (!j.call(e, d)) { throw new f("Value at " + d + " does not exist") } e.splice(d, 1, c) } else { if (!j.call(e, d)) { throw new f("Value at " + d + " does not exist") } e[d] = c } }; u = function (a, b, c) { var d, e; e = b.getObject(a); d = b.accessor; if (k(e)) { d = parseInt(d, 10) } return l(e[d], c) }; q = function (a, b, c) { var d, e, g; e = b.getObject(a); d = b.accessor; if (k(e)) { d = parseInt(d, 10); if (!j.call(e, d)) { throw new f("Value at " + d + " does not exist") } g = e.splice(d, 1)[0] } else { if (!j.call(e, d)) { throw new f("Value at " + d + " does not exist") } g = e[d]; delete e[d] } e = c.getObject(a); d = c.accessor; if (k(e)) { d = parseInt(d, 10); if (d < 0 || d > e.length) { throw new f("Index " + d + " out of bounds") } e.splice(d, 0, g) } else { if (j.call(e, d)) { throw new f("Value at " + d + " exists") } e[d] = g } }; p = { add: g, remove: s, replace: t, move: q, test: u }; r = { add: "value", remove: null, replace: "value", test: "value", move: "to" }; o = { move: function (a) { return new e(a) } }; h = function (a, b) { return i(b)(a) }; i = function (a) { var b, d, e, f; b = []; for (e = 0, f = a.length; e < f; e++) { d = a[e]; b.push(new c(d)) } return function (a) { var c, d, e, f; for (e = 0, f = b.length; e < f; e++) { c = b[e]; d = c.apply(a) } return d } }; a.apply = h; a.compile = i; a.JSONPatchError = d; a.InvalidPatchError = b; return a.PatchConflictError = f })